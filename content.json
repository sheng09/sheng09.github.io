{"meta":{"title":"Sheng Wang","subtitle":null,"description":null,"author":null,"url":"http://sheng09.github.io"},"pages":[{"title":"","date":"2017-01-22T14:46:03.116Z","updated":"2017-01-22T14:46:03.112Z","comments":true,"path":"README.html","permalink":"http://sheng09.github.io/README.html","excerpt":"","text":"&#x535A;&#x5BA2;&#x6587;&#x7AE0;&#x96C6;&#x5408;&#x672C;&#x9879;&#x76EE;&#x4E3A;sheng09&#x535A;&#x5BA2;&#x6587;&#x7AE0;&#x96C6;&#x5408;&#x3002; Theme: Next &#x535A;&#x6587;&#xFF1A; Posts","raw":null,"content":null},{"title":"Who am I?","date":"2017-01-21T12:43:38.000Z","updated":"2017-01-21T16:43:15.070Z","comments":true,"path":"about/index.html","permalink":"http://sheng09.github.io/about/index.html","excerpt":"","text":"Who I am doesn&#x2019;t matter.","raw":null,"content":null},{"title":"categories","date":"2017-01-21T12:35:54.000Z","updated":"2017-01-21T12:37:08.402Z","comments":false,"path":"categories/index.html","permalink":"http://sheng09.github.io/categories/index.html","excerpt":"","text":"","raw":null,"content":null},{"title":"Hello World","date":"2016-06-08T15:26:44.614Z","updated":"2016-06-08T14:17:13.957Z","comments":true,"path":"old/hello-world.html","permalink":"http://sheng09.github.io/old/hello-world.html","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","raw":null,"content":null},{"title":"tags","date":"2017-01-21T12:38:41.000Z","updated":"2017-01-21T12:40:25.104Z","comments":true,"path":"tags/index.html","permalink":"http://sheng09.github.io/tags/index.html","excerpt":"","text":"","raw":null,"content":null}],"posts":[{"title":"Finite Difference of Staggered Grid (2)","slug":"finite-difference-staggerGrid2","date":"2016-10-18T14:18:22.000Z","updated":"2017-01-21T15:53:41.594Z","comments":true,"path":"2016/10/18/finite-difference-staggerGrid2/","link":"","permalink":"http://sheng09.github.io/2016/10/18/finite-difference-staggerGrid2/","excerpt":"This post presents the asymmetric finite-difference scheme build in staggered grid. This asymmetric scheme works well for processing boundary points.","text":"This post presents the asymmetric finite-difference scheme build in staggered grid. This asymmetric scheme works well for processing boundary points. $f&#x2019;(x)$ in 2nd order accuracy point 0 $f&#x2019;(x)$ in 2Nth order accuracy point 0 point k $(k=0,1,2,3&#x2026;,N-1)$ Conclusion Examples $f&#x2019;(x)$ in 2nd order accuracy point 0To calculate the first order derivates in the $\\color{blue}{blue}$ grid points, values in $\\color{red}{red}$ points are expanded. \\begin{eqnarray} f(x+\\frac{\\delta}{2}) & = & f(x) + \\frac{\\delta}{2} f'(x) + \\frac{\\delta^2}{2^2 2!}f''(x) + O(\\delta^3) \\\\ %+\\frac{\\delta^N}{2^N N!}f^{(N)}(x) %+ O(\\delta^{N+1}) \\\\ f(x+\\frac{3\\delta}{2}) & = & f(x) + \\frac{3\\delta}{2} f'(x) + \\frac{3^2\\delta^2}{2^2 2!}f''(x) + O(\\delta^3) \\\\ %+ ... %+ \\frac{3^N\\delta^N}{2^N N!}f^{(N)}(x) %+ O(\\delta^{N+1}) \\\\ f(x+\\frac{5\\delta}{2}) & = & f(x) + \\frac{5\\delta}{2} f'(x) + \\frac{5^2\\delta^2}{2^2 2!}f''(x) + O(\\delta^3) \\\\ %+ ... %+ \\frac{5^N\\delta^N}{2^N N!}f^{(N)}(x) %+ O(\\delta^{N+1}) \\end{eqnarray}thus, $f&#x2019;(x)$ are: \\begin{eqnarray} f'(x) & = & \\frac{2 f(x+\\frac{\\delta}{2}) }{\\delta} -\\frac{2 f(x)}{\\delta} - \\frac{\\delta}{2 2!}f''(x) + O(\\delta^3) \\\\ %- ... %-\\frac{\\delta^{N-1}}{2^{N-1} N!}f^{(N)}(x) %+ O(\\delta^{N}) \\\\ f'(x) & = & \\frac{2 f(x+\\frac{3\\delta}{2}) }{3\\delta} -\\frac{2 f(x) }{3\\delta} - \\frac{3\\delta }{2 2!}f''(x) + O(\\delta^3) \\\\ %- ... %- \\frac{3^{N-1}\\delta^{N-1}}{2^{N-1} N!}f^{(N)}(x) %+ O(\\delta^{N}) \\\\ f'(x) & = & \\frac{2 f(x+\\frac{5\\delta}{2}) }{5\\delta} -\\frac{2 f(x) }{5\\delta} - \\frac{5\\delta }{2 2!}f''(x) + O(\\delta^3) \\\\ %- ... %- \\frac{5^{N-1}\\delta^{N-1}}{2^{N-1} N!}f^{(N)}(x) %+ O(\\delta^{N}) \\end{eqnarray}add these $f&#x2019;(x)$ proportionally: \\begin{equation} \\begin{aligned} f'(x) = & \\frac{2}{\\delta} \\left[ C^2_{00} f(x + \\frac{\\delta}{2}) + C^2_{01}\\frac{1}{3} f(x + \\frac{3\\delta}{2} )+ C^2_{02}\\frac{1}{5} f(x + \\frac{5\\delta}{2} ) \\right]\\\\ & -\\frac{2}{\\delta} \\left[ C^2_{00}+ \\frac{1}{3}C^2_{01}+ \\frac{1}{5}C^2_{02} \\right] f(x) - \\frac{\\delta}{2 2!} \\left[ C^2_{00}+ 3C^2_{01}+ 5C^2_{02} \\right]f''(x) + O(\\delta^3) \\end{aligned} \\end{equation}In order to have second order accuracy, $C^2_{0j}$ must satisfy the equation of: \\begin{equation} \\begin{cases} C^2_{00} + C^2_{01} + C^2_{02} = 1\\\\ C^2_{00} + \\frac{1}{3}C^2_{01} + \\frac{1}{5}C^2_{02} = 0\\\\ C^2_{00} + 3C^2_{01} + 5C^2_{02} = 0\\\\ \\end{cases} \\Rightarrow \\begin{cases} C^2_{00} = -1 \\\\ C^2_{01} = \\frac{9}{2} \\\\ C^2_{02} = -\\frac{5}{2} \\end{cases} \\end{equation}$f&#x2019;(x)$ in 2Nth order accuracy point 0 \\begin{eqnarray} f(x+\\frac{\\delta}{2}) & = & f(x) + \\frac{\\delta}{2} f'(x) + \\frac{\\delta^2}{2^2 2!}f''(x) + ... +\\frac{\\delta^{2N}}{2^{2N} (2N)!}f^{(2N)}(x) + O(\\delta^{2N+1}) \\\\ f(x+\\frac{3\\delta}{2}) & = & f(x) + \\frac{3\\delta}{2} f'(x) + \\frac{3^2\\delta^2}{2^2 2!}f''(x) + ... + \\frac{3^{2N}\\delta^{2N}}{2^{2N} {2N}!}f^{(2N)}(x) + O(\\delta^{2N+1})\\\\ &...&\\\\ f(x+\\frac{l\\delta}{2}) & = & f(x) + \\frac{l\\delta}{2}f'(x) + \\frac{l^2\\delta^2}{2^2 2!}f''(x) + ... + \\frac{l^{2N}\\delta^{2N}}{2^{2N} (2N)!}f^{(2N)}(x) + O(\\delta^{2N+1}) \\end{eqnarray}thus, $f&#x2019;(x)$ are: \\begin{eqnarray} f'(x) & = & \\frac{2 f(x+\\frac{\\delta}{2}) }{\\delta} -\\frac{2 f(x)}{\\delta} - \\frac{\\delta}{2 2!}f''(x) - ... -\\frac{\\delta^{2N-1}}{2^{2N-1} (2N)!}f^{(2N)}(x) + O(\\delta^{2N}) \\\\ f'(x) & = & \\frac{2 f(x+\\frac{3\\delta}{2}) }{3\\delta} -\\frac{2 f(x) }{3\\delta} - \\frac{3\\delta }{2 2!}f''(x) - ... - \\frac{3^{2N-1}\\delta^{2N-1}}{2^{2N-1} (2N)!}f^{(2N)}(x) + O(\\delta^{2N}) \\\\ &...&\\\\ f'(x) & = & \\frac{2 f(x+\\frac{l\\delta}{2}) }{l\\delta} -\\frac{2 f(x) }{l\\delta} - \\frac{l\\delta}{2 2!}f''(x) - ... - \\frac{l^{2N-1}\\delta^{2N-1}}{2^{2N-1} (2N)!}f^{(2N)}(x) + O(\\delta^{2N}) \\\\ \\color{red}{(l=1,3,5,7,9...)} \\end{eqnarray}add these $f&#x2019;(x)$ proportionally: \\begin{equation} \\begin{aligned} f'(x) = & \\frac{2}{\\delta} \\sum \\limits_l \\left[ f(x + \\frac{l\\delta}{2}) C^{2N}_{0(\\frac{l-1}{2})}\\frac{1}{l} \\right]\\\\ &-\\frac{2}{\\delta}f(x) \\sum \\limits_l \\left[ C^{2i}_{0(\\frac{l-1}{2})} \\frac{1}{l} \\right] -\\frac{\\delta}{2 2!} f''(x) \\sum \\limits_l \\left[ C^{2i}_{0(\\frac{l-1}{2})} l \\right]\\\\ & -... -\\frac{\\delta^{2N-1}}{2^{2N-1} (2N)!} f^{2N}(x) \\sum \\limits_l \\left[ C^{2N}_{0(\\frac{l-1}{2})} l^{2N-1} \\right] +O(\\delta^{2N})\\\\ (l=1,3,5,7,9...) \\end{aligned} \\end{equation}To have 2Nth order accuracy, , $C^{2N}_{0j}$ must satisfy the equation: \\begin{eqnarray} \\begin{bmatrix} 1 & 1 & 1 & ... & 1 \\\\ 1 & \\frac{1}{3} & \\frac{1}{5}& ... & \\frac{1}{4N+1} \\\\ 1 & 3 & 5 & ... & 4N+1 \\\\ 1 & 3^2 & 5^2 & ... & (4N+1)^2 \\\\ ...\\\\ 1 & 3^{2N-1} & 5^{2N-1} & ... & (4N+1)^{2N-1} \\\\ \\end{bmatrix} \\begin{bmatrix} C^{2N}_{00} \\\\ C^{2N}_{01} \\\\ C^{2N}_{02} \\\\ C^{2N}_{03} \\\\ ...\\\\ C^{2N}_{0(2N)} \\\\ \\end{bmatrix} = \\begin{bmatrix} 1\\\\ 0\\\\ 0\\\\ 0\\\\ ...\\\\ 0\\\\ \\end{bmatrix} \\end{eqnarray}point k $(k=0,1,2,3&#x2026;,N-1)$ \\begin{eqnarray} f(x+\\frac{(1-2k)\\delta}{2}) & = & f(x) +\\frac{(1-2k)\\delta}{2} f'(x) + \\frac{(1-2k)^2\\delta^2}{2^22!}f''(x) +... + \\frac{(1-2k)^{2N}\\delta^{2N}}{2^{2N}(2N)!}f^{(2N)}(x) + O(2N+1) \\\\ ... \\\\ f(x-\\frac{\\delta}{2}) & = & f(x) - \\frac{\\delta}{2}f'(x) + \\frac{\\delta^2}{2^22!}f''(x) + ... + \\frac{(-1)^{2N}\\delta^{2N}}{2^{2N} (2N)!}f^{(2N)}(x) + O(\\delta^{2N+1}) \\\\ f(x+\\frac{\\delta}{2}) & = & f(x) + \\frac{\\delta}{2} f'(x) + \\frac{\\delta^2}{2^2 2!}f''(x) + ... +\\frac{\\delta^{2N}}{2^{2N} (2N)!}f^{(2N)}(x) + O(\\delta^{2N+1}) \\\\ f(x+\\frac{3\\delta}{2}) & = & f(x) + \\frac{3\\delta}{2} f'(x) + \\frac{3^2\\delta^2}{2^2 2!}f''(x) + ... + \\frac{3^{2N}\\delta^{2N}}{2^{2N} (2N)!}f^{(2N)}(x) + O(\\delta^{2N+1})\\\\ &...&\\\\ f(x+\\frac{l\\delta}{2}) & = & f(x) + \\frac{l\\delta}{2}f'(x) + \\frac{l^2\\delta^2}{2^2 2!}f''(x) + ... + \\frac{l^{2N}\\delta^{2N}}{2^{2N} (2N)!}f^{(2N)}(x) + O(\\delta^{2N+1}) \\end{eqnarray}thus, $f&#x2019;(x)$ are: \\begin{eqnarray} f'(x) & = & \\frac{2}{(1-2k)\\delta} f(x+\\frac{(1-2k)\\delta}{2}) - \\frac{2}{(1-2k)\\delta} f(x) - \\frac{(1-2k)\\delta}{2 2!}f''(x) - ... -\\frac{(1-2k)^{2N-1}\\delta^{2N-1}}{2^{2N-1} (2N)!}f^{(2N)}(x) + O(\\delta^{2N}) \\\\ \\\\ ... \\\\ f'(x) & = & \\frac{-2}{\\delta} f(x-\\frac{\\delta}{2}) +\\frac{2}{\\delta} f(x) + \\frac{\\delta^2}{22!}f''(x) + ... + \\frac{(-1)^{2N-1}\\delta^{2N-1}}{2^{2N-1} (2N)!}f^{(2N)}(x) + O(\\delta^{2N}) \\\\ f'(x) & = & \\frac{2}{\\delta} f(x+\\frac{\\delta}{2}) - \\frac{2}{\\delta} f(x) - \\frac{\\delta}{2 2!}f''(x) - ... -\\frac{\\delta^{2N-1}}{2^{2N-1} (2N)!}f^{(2N)}(x) + O(\\delta^{2N}) \\\\ f'(x) & = & \\frac{2}{3\\delta} f(x+\\frac{3\\delta}{2}) -\\frac{2}{3\\delta}f(x) - \\frac{3\\delta}{2 2!}f''(x) - ... - \\frac{3^{2N-1}\\delta^{2N-1}}{2^{2N-1} (2N)!}f^{(2N)}(x) + O(\\delta^{2N})\\\\ &...&\\\\ f'(x) & = & \\frac{2}{l\\delta} f(x+\\frac{l\\delta}{2}) -\\frac{2}{l\\delta} f(x) - \\frac{l\\delta}{2 2!}f''(x) - ... - \\frac{l^{2N-1}\\delta^{2N-1}}{2^{2N-1} (2N)!}f^{(2N)}(x) + O(\\delta^{2N}) \\end{eqnarray}add these $f&#x2019;(x)$ proportionally: \\begin{equation} \\begin{aligned} f'(x) = & \\frac{2}{\\delta} \\sum \\limits_l \\left[ f( x+ \\frac{ l\\delta}{2} )C^{2N}_{k(\\frac{l-1}{2})} \\frac{1}{l} \\right] \\\\ &-\\frac{2}{\\delta}f(x) \\sum \\limits_l \\frac{1}{l} C^{2N}_{k(\\frac{l-1}{2})} -\\frac{\\delta}{22!}f''(x) \\sum \\limits_l{l} C^{2N}_{k(\\frac{l-1}{2})} -\\frac{\\delta^2}{2^23!}f^{(3)}(x) \\sum \\limits_l{l^2}C^{2N}_{k(\\frac{l-1}{2})} \\\\ &-\\frac{\\delta^3}{2^34!}f^{(4)}(x) \\sum \\limits_l{l^3}C^{2N}_{k(\\frac{l-1}{2})} -... -\\frac{\\delta^{2N-1}}{2^{2N-1}(2N)!}f^{(2N)}(x) \\sum \\limits_l{l^{2N-1}}C^{2N}_{k(\\frac{l-1}{2})} +O({\\delta^{2N}}) \\\\ &(l = 1-2k, 3-2k,...,-1,1,...) \\end{aligned} \\end{equation}to have 2Nth order accuracy: $C^{2N}_{kj}$ must satisfy equation: \\begin{equation} \\begin{bmatrix} 1 & 1 & 1 & ... & 1 \\\\ \\frac{1}{1-2k} & \\frac{1}{3-2k} & \\frac{1}{5-2k} & ... & \\frac{1}{4N-2k+1} \\\\ 1-2k & 3-2k & 5-2k & ... & 4N-2k+1 \\\\ (1-2k)^2 & (3-2k)^2 & (5-2k)^2 & ... & (4N-2k+1)^2 \\\\ ...\\\\ (1-2k)^{2N-1} & (3-2k)^{2N-1} & (5-2k)^{2N-1} & ... & (4N-2k+1)^{2N-1} \\end{bmatrix} \\begin{bmatrix} C^{2N}_{k (-k) } \\\\ C^{2N}_{k (-k+1) } \\\\ C^{2N}_{k (-k+2) } \\\\ C^{2N}_{k (-k+3) } \\\\ ...\\\\ C^{2N}_{k (2N-k)} \\end{bmatrix} = \\begin{bmatrix} 1\\\\ 0\\\\ 0\\\\ 0\\\\ ...\\\\ 0\\\\ \\end{bmatrix} \\label{LA} \\end{equation}ConclusionFor 2Nth order accuracy, for point k in the boundary region, value of $f&#x2019;(x)$ is: \\begin{equation} f'(x) = \\frac{2}{l\\delta} \\sum \\limits_l \\left[ f( x+ \\frac{l\\delta}{2} )C^{2N}_{k(\\frac{l-1}{2})} \\right] \\\\ (l=1-2k,3-2k,...,-1,1,...,4N-2k+1) \\end{equation}while $C^{2N}_{kj}$ is solution of equation $\\eqref{LA}$. Or, in the form of: \\begin{equation} \\begin{cases} f'(x) = \\frac{1}{\\delta} \\sum \\limits_l \\left[ f( x+ \\frac{l\\delta}{2} )c^{2N}_{k(\\frac{l-1}{2})} \\right] \\\\ c^{2N}_{k(\\frac{l-1}{2})} = \\frac{2}{l}C^{2N}_{k(\\frac{l-1}{2})} \\\\ (l=1-2k,3-2k,...,-1,1,...,4N-2k+1) \\end{cases} \\end{equation}ExamplesFD scheme corresponding to accuracy orders of 2,4,6,8,10,12 are implemented to $f(x)=sin(x)$, their FD results are ploted versus theoretical first order derivative of $f&#x2019;(x)=cos(x)$, as well as their error.","raw":null,"content":null,"categories":[{"name":"PDE","slug":"PDE","permalink":"http://sheng09.github.io/categories/PDE/"}],"tags":[]},{"title":"Finite Difference of Staggered Grid (1)","slug":"finite-difference-staggerGrid","date":"2016-10-17T20:15:09.000Z","updated":"2017-01-21T15:55:02.183Z","comments":true,"path":"2016/10/18/finite-difference-staggerGrid/","link":"","permalink":"http://sheng09.github.io/2016/10/18/finite-difference-staggerGrid/","excerpt":"This post presents the central finite difference(FD) system build in stagger grid. Symmetric scheme are derived and examples are presented.","text":"This post presents the central finite difference(FD) system build in stagger grid. Symmetric scheme are derived and examples are presented. Taylor expansion First order derivatives Conclusion Examples Taylor expansionAs always, we start the derivation from taylor expansion. For the $\\color{red}{red}$ points in the below staggerd point, function value here have the form of taylor series expanded in the $\\color{blue}{blue}$ point. This kind of stagger grid scheme is widely used in modeling. \\begin{eqnarray} f\\left(x-\\frac{i\\delta}{2}\\right) & = & f(x) - \\frac{i\\delta}{2}f'(x) + \\frac{i^2\\delta^2}{2^22!}f''(x) - \\frac{i^3\\delta^3}{2^33!}f^{(3)}(x) %+ \\frac{i^4\\delta^4}{2^44!}f^{(4)}(x) + ... + \\frac{i^{2N}\\delta^{2N}}{2^{2N}(2N)!}f^{(2N)}(x) + O(\\delta^{2N+1}) \\\\ & ... &\\\\ f\\left(x-\\frac{\\delta}{2}\\right) & = & f(x) - \\frac{\\delta}{2}f'(x) + \\frac{\\delta^2}{2^22!}f''(x) - \\frac{\\delta^3}{2^33!}f^{(3)}(x) %+ \\frac{\\delta^4}{2^44!}f^{(4)}(x) + ... + \\frac{\\delta^{2N}}{2^{2N}(2N)!}f^{(2N)}(x) + O(\\delta^{2N+1}) \\\\ f\\left(x+\\frac{\\delta}{2}\\right) & = & f(x) + \\frac{\\delta}{2}f'(x) + \\frac{\\delta^2}{2^22!}f''(x) + \\frac{\\delta^3}{2^33!}f^{(3)}(x) %+ \\frac{\\delta^4}{2^44!}f^{(4)}(x) + ... + \\frac{\\delta^{2N}}{2^{2N}(2N)!}f^{(2N)}(x) + O(\\delta^{2N+1}) \\\\ & ... &\\\\ f\\left(x+\\frac{i\\delta}{2}\\right) & = & f(x) + \\frac{i\\delta}{2}f'(x) + \\frac{i^2\\delta^2}{2^22!}f''(x) + \\frac{i^3\\delta^3}{2^33!}f^{(3)}(x) %+ \\frac{i^4\\delta^4}{2^44!}f^{(4)}(x) + ... + \\frac{i^{2N}\\delta^{2N}}{2^{2N}(2N)!}f^{(2N)}(x) + O(\\delta^{2N+1}) \\\\ \\color{red}{\\left(i =1,3,5,7,9...\\right)} \\\\ \\end{eqnarray}First order derivatives \\begin{eqnarray} \\frac{f\\left(x+\\frac{\\delta}{2}\\right) - f\\left(x-\\frac{\\delta}{2}\\right)}{2} & = & \\frac{\\delta}{2}f'(x) + \\frac{\\delta^3}{2^33!}f^{(3)}(x) + ... + \\frac{\\delta^{2N-1}}{2^{2N-1}(2N-1)!}f^{(2N-1)}(x) + O(\\delta^{2N+1}) \\\\ &...&\\\\ \\frac{ f\\left(x+\\frac{i\\delta}{2}\\right) - f\\left(x-\\frac{i\\delta}{2}\\right) }{2} & = & \\frac{i\\delta}{2}f'(x) + \\frac{i^3\\delta^3}{2^33!}f^{(3)}(x) + ... + \\frac{i^{2N-1}\\delta^{2N-1}}{2^{2N-1}(2N-1)!}f^{(2N-1)}(x) + O(\\delta^{2N+1}) \\\\ \\color{red}{\\left(i=1,3,5,7,9...\\right)} \\\\ \\end{eqnarray}or in the forms of: \\begin{eqnarray} f'(x) & = & \\frac{f\\left(x+\\frac{\\delta}{2}\\right) - f\\left(x-\\frac{\\delta}{2}\\right)}{\\delta} - \\frac{\\delta^2}{2^23!}f^{(3)}(x) - ... - \\frac{\\delta^{2N-2}}{2^{2N-2}(2N-1)!}f^{(2N-1)}(x) + O(\\delta^{2N}) \\\\ &...&\\\\ f'(x) & = & \\frac{ f\\left(x+\\frac{i\\delta}{2}\\right) - f\\left(x-\\frac{i\\delta}{2}\\right) }{i\\delta} - \\frac{i^2\\delta^2}{2^23!}f^{(3)}(x) - ... - \\frac{i^{2N-2}\\delta^{2N-2}}{2^{2N-2}(2N-1)!}f^{(2N-1)}(x) + O(\\delta^{2N}) \\\\ \\end{eqnarray}adding all these $f&#x2019;(x)$ propotionally together: \\begin{equation} \\begin{aligned} f'(x) \\sum \\limits_{i} C_i = &\\sum \\limits_{i} C_i \\frac{ f\\left(x+\\frac{i\\delta}{2}\\right) - f\\left(x-\\frac{i\\delta}{2}\\right) }{i\\delta}\\\\ &- \\frac{\\delta^2}{2^23!}f^{(3)}(x) \\sum \\limits_i i^2C_i - \\frac{\\delta^4}{2^45!}f^{(5)}(x) \\sum \\limits_i i^4C_i %- \\frac{\\delta^6}{2^67!}f^{(7)}(x) \\sum \\limits_i i^6C_i - \\frac{\\delta^{2N-2}}{2^{2N-2}(2N-1)!}f^{(2N-1)}(x) \\sum \\limits_i i^{2N-2}C_i + O(\\delta^{2N}) \\end{aligned}\\label{fd1} \\\\ \\color{red}{\\left(i=1,3,5,7,9...,2N-1\\right)} \\end{equation}So, for $2N$th order accuracy, $C_k$ must be the solution of linear equation: \\begin{equation} \\begin{bmatrix} 1 & 1 & 1 & 1 & ... & 1\\\\ 1 & 3^2 & 5^2 & 7^2 & ... & (2N-1)^2 \\\\ 1 & 3^4 & 5^4 & 7^4 & ... & (2N-1)^4 \\\\ ...\\\\ 1 & 3^{2N-2} & 5^{2N-2} & 7^{2N-2} & ... & (2N-1)^{2N-2}\\\\ \\end{bmatrix} \\begin{bmatrix} C_1\\\\ C_3\\\\ C_5\\\\ ...\\\\ C_{2N-1}\\\\ \\end{bmatrix} = \\begin{bmatrix} 1\\\\ 0\\\\ 0\\\\ ...\\\\ 0\\\\ \\end{bmatrix} \\label{LA} \\end{equation}$\\eqref{LA}$ is the vandermonde equation, its augmented matrix corresponds to the upper triangular linear equation: \\begin{equation} \\begin{bmatrix} 1 & 1 & 1 & 1 & ... & 1 \\\\ 0 & 1 & a_{23} & a_{24} & ... & a_{2N} \\\\ 0 & 0 & 1 & a_{34} & ... & a_{3N} \\\\ ...\\\\ 0 & 0 & 0 & 0 & ... & 1 \\\\ \\end{bmatrix} \\begin{bmatrix} x_1\\\\ x_2\\\\ x_3\\\\ ...\\\\ x_N\\\\ \\end{bmatrix} = \\begin{bmatrix} b_1\\\\ b-2\\\\ b-3\\\\ ...\\\\ b_N\\\\ \\end{bmatrix} \\end{equation}while \\begin{eqnarray} a_{ij} & = & \\frac{ \\left[ (2j-1)^2-(2i-3)^2 \\right] \\left[ (2j-1)^2-(2i-5)^2 \\right] ... \\left[(2j-1)^2-1 \\right] } { \\left[ (2i-1)^2 - (2i-3)^2 \\right] \\left[ (2i-1)^2 - (2i-5)^2 \\right] ... \\left[ (2i-1)^2 - 1 \\right] } (j \\geq i) \\\\ b_i & = & \\frac { (-1)^{i-1}1^23^2...(2i-3)^2 } { \\left[ (2i-1)^2 - (2i-3)^2 \\right] \\left[ (2i-1)^2 - (2i-5)^2 \\right] ... \\left[ (2i-1)^2 - 1 \\right] } \\end{eqnarray}Thus, $x_i$ have the value of: \\begin{equation} \\begin{cases} x_i= C_{2i-1} = b_i - \\sum \\limits_{j=i+1}^N a_{ij}x_j \\\\ x_N = C_{2N-1} = b_N \\end{cases} \\end{equation}ConclusionFrom $\\eqref{fd1}$, the FD scheme of 2Nth order accuracy is built: \\begin{eqnarray} f'(x) & = &\\sum \\limits_{i} C_i \\frac{ f\\left(x+\\frac{i\\delta}{2}\\right) - f\\left(x-\\frac{i\\delta}{2}\\right) }{i\\delta} \\end{eqnarray}or in the form of: \\begin{eqnarray} \\begin{cases} f'(x) & = & \\frac{1}{\\delta} &\\sum \\limits_{i} c_i \\left[ f\\left(x+\\frac{i\\delta}{2}\\right) - f\\left(x-\\frac{i\\delta}{2}\\right) \\right] \\\\ c_i & = & \\frac{C_i}{i}\\\\ \\color{red}{\\left(i =1,3,5,7,9...\\right)} \\end{cases} \\end{eqnarray}Values of $c_i$ for different accuracy order are: order $c_1$ $c_2$ $c_3$ $c_4$ $c_5$ $c_6$ 2 $\\frac{1}{1}$ 4 $\\frac{9}{8}$ $\\frac{-1}{24}$ 6 $\\frac{75}{64}$ $\\frac{-25}{384}$ $\\frac{3}{640}$ 8 $\\frac{1225}{1024}$ $\\frac{-245}{3072}$ $\\frac{49}{5120}$ $\\frac{-5}{7168}$ 10 $\\frac{19845}{16384}$ $\\frac{-735}{8192}$ $\\frac{567}{40960}$ $\\frac{-405}{229376}$ $\\frac{35}{294912}$ 12 $\\frac{160083}{131072}$ $\\frac{-12705}{131072}$ $\\frac{22869}{1310720}$ $\\frac{-5445}{1835008}$ $\\frac{847}{2359296}$ $\\frac{-63}{2883584}$ ExamplesFD scheme corresponding to accuracy orders of 2,4,6,8,10,12 are implemented to $f(x) = sin(x)$, their FD results are ploted versus theoretical first order derivative of $f&#x2019;(x) = cos(x)$, as well as their error.","raw":null,"content":null,"categories":[{"name":"PDE","slug":"PDE","permalink":"http://sheng09.github.io/categories/PDE/"}],"tags":[{"name":"FD","slug":"FD","permalink":"http://sheng09.github.io/tags/FD/"},{"name":"modeling","slug":"modeling","permalink":"http://sheng09.github.io/tags/modeling/"},{"name":"error","slug":"error","permalink":"http://sheng09.github.io/tags/error/"}]},{"title":"Asymmetric Finite Difference for Boundary Points","slug":"finite-difference-asymmetric","date":"2016-10-16T18:02:22.000Z","updated":"2017-01-21T13:41:15.772Z","comments":true,"path":"2016/10/17/finite-difference-asymmetric/","link":"","permalink":"http://sheng09.github.io/2016/10/17/finite-difference-asymmetric/","excerpt":"For $2i$th order accuracy finite difference(FD), symmetric scheme cannot apply to $i$ boundary points. Thus, asymmetric scheme are required.","text":"For $2i$th order accuracy finite difference(FD), symmetric scheme cannot apply to $i$ boundary points. Thus, asymmetric scheme are required. 2nd order accuracy point 0 2ith order accuracy point 0 point 1 point k (k=0,1,&#x2026;,i-1) Result Examples Let us take 2nd order FD as example: 2nd order accuracypoint 0 \\begin{eqnarray} f(x) & = & f(x)\\\\ f(x+\\delta ) & = & f(x) + \\delta f'(x) + \\frac{\\delta ^2}{2!} f''(x) + \\frac{\\delta ^3}{3!} f^{(3)} (x) + ... + \\frac{\\delta ^n}{n!} f^{(n)} (x) + O(\\delta^{n+1})\\\\ f(x+2\\delta ) & = & f(x) + 2\\delta f'(x) + \\frac{2^2\\delta ^2}{2!} f''(x) + \\frac{2^3\\delta ^3}{3!} f^{(3)} (x) + ... + \\frac{2^n\\delta ^n}{n!} f^{(n)} (x) + O(\\delta^{n+1})\\\\ \\end{eqnarray}Thus, $f&#x2019;(x)$ is: \\begin{eqnarray} f'(x;\\delta) & = & \\frac{f(x+\\delta )- f(x) } {\\delta} -\\frac{\\delta }{2!} f''(x) -\\frac{\\delta ^2}{3!} f^{(3)} (x) -... -\\frac{\\delta ^{n-1}}{n!} f^{(n)} (x) +O(\\delta^{n})\\\\ f'(x;2\\delta) & = & \\frac{f(x+2\\delta )- f(x) } {2\\delta} -\\frac{2\\delta }{2!} f''(x) -\\frac{2^2\\delta ^2}{3!} f^{(3)} (x) -... -\\frac{2^{n-1}\\delta ^{n-1}}{n!} f^{(n)} (x) +O(\\delta^{n})\\\\ \\end{eqnarray}adding $f&#x2019;(x;\\delta)$ and $f&#x2019;(x;2\\delta)$ proportionally: \\begin{equation} \\begin{cases} \\begin{aligned} f'(x) = & C_{21}\\frac{f(x+\\delta )- f(x) } {\\delta} +C_{22}\\frac{f(x+2\\delta )- f(x) } {2\\delta} \\\\ &-\\frac{\\delta }{2!}f''(x) \\left[ C_{21} + 2C_{22}\\right] -... -\\frac{\\delta^{n-1}}{n!}f^{(n)}(x) \\left[C_{21} +2^{n-1}C_{22}\\right] +O(\\delta^{n})\\\\ 1 = & C_{21} + C_{22} \\end{aligned}\\\\ \\end{cases} \\end{equation}Thus, for 2nd order accuracy, item of $\\delta$ should be eliminated, so: \\begin{equation} \\begin{cases} C_{21} + C_{22} & = & 1 \\\\ C_{21} + 2C_{22} & = & 0 \\\\ \\end{cases} \\Rightarrow \\begin{cases} C_{21} & = & 2 \\\\ C_{22} & = & -1 \\\\ \\end{cases} \\end{equation}2ith order accuracypoint 0For point 0, we have: \\begin{eqnarray} f(x) & = & f(x)\\\\ f(x+\\delta ) & = & f(x) + \\delta f'(x) + \\frac{\\delta ^2}{2!} f''(x) + \\frac{\\delta ^3}{3!} f^{(3)} (x) + ... + \\frac{\\delta ^{2i}}{(2i)!} f^{(2i)} (x) + O(\\delta^{2i+1})\\\\ f(x+2\\delta ) & = & f(x) + 2\\delta f'(x) + \\frac{2^2\\delta ^2}{2!} f''(x) + \\frac{2^3\\delta ^3}{3!} f^{(3)} (x) + ... + \\frac{2^{2i}\\delta ^{2i}}{(2i)!} f^{(2i)} (x) + O(\\delta^{2i+1})\\\\ f(x+3\\delta ) & = & f(x) + 3\\delta f'(x) + \\frac{3^2\\delta ^2}{2!} f''(x) + \\frac{3^3\\delta ^3}{3!} f^{(3)} (x) + ... + \\frac{3^{2i}\\delta ^{2i}}{(2i)!} f^{(2i)} (x) + O(\\delta^{2i+1})\\\\ &...&\\\\ f(x+2i\\delta ) & = & f(x) + 2i\\delta f'(x) + \\frac{(2i)^2\\delta ^2}{2!} f''(x) + \\frac{(2i)^3\\delta ^3}{3!} f^{(3)} (x) + ... + \\frac{(2i)^{2i}\\delta ^{2i}}{(2i)!} f^{(2i)} (x) + O(\\delta^{2i+1})\\\\ \\end{eqnarray}Thus, $f&#x2019;(x)$ is: \\begin{eqnarray} f'(x;\\delta) & = & \\frac {f(x+\\delta ) - f(x)}{\\delta} -\\frac{\\delta }{2!} f''(x) -\\frac{\\delta ^2}{3!} f^{(3)} (x) -... -\\frac{\\delta ^{2i-1}}{(2i)!} f^{(2i)} (x) +O(\\delta^{2i})\\\\ f'(x;2\\delta) & = & \\frac {f(x+2\\delta ) - f(x)}{2\\delta} -\\frac{2 \\delta }{2!} f''(x) -\\frac{2^2\\delta ^2}{3!} f^{(3)} (x) -... -\\frac{2^{2i-1}\\delta ^{2i-1}}{(2i)!} f^{(2i)} (x) +O(\\delta^{2i})\\\\ f'(x;3\\delta) & = & \\frac {f(x+3\\delta ) -f(x)} {3\\delta} -\\frac{3 \\delta }{2!} f''(x) -\\frac{3^2\\delta ^2}{3!} f^{(3)} (x) -... -\\frac{3^{2i-1}\\delta ^{2i-1}}{(2i)!} f^{(2i)} (x) +O(\\delta^{2i})\\\\ &...&\\\\ f'(x;2i\\delta) & = & \\frac{f(x+2i\\delta ) - f(x)}{2i\\delta } -\\frac{ 2i \\delta }{2!} f''(x) -\\frac{(2i)^2\\delta ^2}{3!} f^{(3)} (x) -... -\\frac{(2i)^{2i-1}\\delta ^{2i-1}}{(2i)!} f^{(2i)} (x) + O(\\delta^{2i})\\\\ \\end{eqnarray}adding $f&#x2019;(x;\\delta), f&#x2019;(x;2\\delta),&#x2026;,f&#x2019;(x;2i\\delta)$ proportionally: \\begin{equation} \\begin{aligned} f'(x) = & \\sum \\limits_{j=1}^{2i} C_{(2i)j} \\frac { f(x+j\\delta) -f(x) }{j\\delta} \\\\ & - \\frac{\\delta }{ 2!}f''(x) \\sum \\limits_{j=1}^{2i}C_{(2i)j}j - \\frac{\\delta^2 }{ 3!}f^{(3)}(x) \\sum \\limits_{j=1}^{2i}C_{(2i)j}j^2 - ... - \\frac{\\delta^{2i-1}}{(2i)!}f^{(2i)}(x)\\sum \\limits_{j=1}^{2i}C_{(2i)j}j^{2i-1} + O(\\delta^{2i})\\\\ \\end{aligned} \\end{equation}Thus, for 2ith order accuracy, item of $\\delta,\\delta^2,&#x2026;,\\delta^{2i-1}$ should be eliminated, so: % \\begin{eqnarray} % \\begin{cases} % \\sum \\limits_{j=1}^{2i} C_{(2i)j} = 1 \\\\ % \\sum \\limits_{j=1}^{2i} C_{(2i)j}j = 0 \\\\ % \\sum \\limits_{j=1}^{2i} C_{(2i)j}j^2 = 0 \\\\ % ...\\\\ % \\sum \\limits_{j=1}^{2i} C_{(2i)j}j^{2i-1} = 0 \\\\ % \\end{cases} % \\end{eqnarray} \\begin{eqnarray} \\begin{bmatrix} 1 & 1 & 1 & 1 & ... & 1 \\\\ 1 & 2 & 3 & 4 & ... & 2i \\\\ 1 & 2^2 & 3^2 & 4^2 & ... & (2i)^2 \\\\ ...\\\\ 1 & 2^{2i-1} & 3^{2i-1} & 4^{2i-1} & ... & (2i)^{2i-1} \\\\ \\end{bmatrix} \\begin{bmatrix} C_{(2i)1}\\\\ C_{(2i)2}\\\\ C_{(2i)3}\\\\ ...\\\\ C_{(2i)(2i)}\\\\ \\end{bmatrix} = \\begin{bmatrix} 1\\\\ 0\\\\ 0\\\\ ...\\\\ 0\\\\ \\end{bmatrix} \\end{eqnarray} %\\begin{eqnarray} % \\begin{bmatrix} % 1 & 1 & 1 & 1 & ... & 1 \\\\ % 1 & 2 & 3 & 4 & ... & N \\\\ % 1 & 2^2 & 3^2 & 4^2 & ... & N^2 \\\\ % ...\\\\ % 1 & 2^{N-1} & 3^{N-1} & 4^{N-1} & ... & N^{N-1} \\\\ % \\end{bmatrix} % \\begin{bmatrix} % C_{N1}\\\\ % C_{N2}\\\\ % C_{N3}\\\\ % ...\\\\ % C_{NN}\\\\ % \\end{bmatrix} % = % \\begin{bmatrix} % 1\\\\ % 0\\\\ % 0\\\\ % ...\\\\ % 0\\\\ % \\end{bmatrix} %\\end{eqnarray}point 1&#x2026; point k (k=0,1,&#x2026;,i-1)For point k, we have: \\begin{eqnarray} f(x-k\\delta) & = & f(x) - k\\delta f'(x) + \\frac{ (-k)^2\\delta^2 }{2!} f''(x) + ... + \\frac{(-k)^{2i}\\delta^{2i}}{(2i)!} f^{(2i)} (x) + O(\\delta^{2i+1})\\\\ ...\\\\ f(x-\\delta ) & = & f(x) - \\delta f'(x) + \\frac{(-1)^2\\delta ^2}{2!} f''(x) + ... + \\frac{(-1)^{2i}\\delta^{2i}}{(2i)!} f^{(2i)} (x) + O(\\delta^{2i+1})\\\\ f(x) & = & f(x)\\\\ f(x+\\delta ) & = & f(x) + \\delta f'(x) + \\frac{\\delta ^2}{2!} f''(x) + %\\frac{\\delta ^3}{3!} f^{(3)} (x) + ... + \\frac{\\delta ^{2i}}{(2i)!} f^{(2i)} (x) + O(\\delta^{2i+1})\\\\ ...\\\\ f(x+(2i-k)\\delta) & = & f(x) + (2i-k)\\delta f'(x) + \\frac{(2i-k)^2 \\delta ^2}{2!} f''(x) + %\\frac{(2i-k)^3 \\delta ^3}{3!} f^{(3)} (x) + ... + \\frac{(2i-k)^{2i}\\delta ^{2i}}{(2i)!} f^{(2i)} (x) + O(\\delta^{2i+1})\\\\ \\end{eqnarray}Thus, $f&#x2019;(x)$ is: \\begin{eqnarray} f'(x) & = & \\frac{f(x-k\\delta) - f(x)}{- k\\delta } -\\frac{ (-k)\\delta }{2!} f''(x) - ... -\\frac{(-k)^{2i-1}\\delta^{2i-1}}{(2i)!} f^{(2i)} (x) + O(\\delta^{2i})\\\\ ...\\\\ f'(x) & = & \\frac{f(x-\\delta ) - f(x)}{- \\delta } -\\frac{-\\delta}{2!} f''(x) - ...- -\\frac{(-1)^{2i-1}\\delta^{2i-1}}{(2i)!} f^{(2i)} (x) + O(\\delta^{2i})\\\\ f'(x) & = & \\frac{f(x+\\delta ) - f(x)}{\\delta } -\\frac{\\delta}{2!} f''(x) - ... - \\frac{\\delta ^{2i-1}}{(2i)!} f^{(2i)} (x) + O(\\delta^{2i})\\\\ ...\\\\ f'(x) & = & \\frac{f(x+(2i-k)\\delta)-f(x)}{(2i-k)\\delta } -\\frac{(2i-k) \\delta }{2!} f''(x) -... -\\frac{(2i-k)^{2i-1}\\delta ^{2i-1}}{(2i)!} f^{(2i)} (x) + O(\\delta^{2i})\\\\ \\end{eqnarray}adding all these $f&#x2019;(x)$ proportionally: \\begin{equation} \\begin{aligned} f'(x) = & \\sum \\limits_{j=-k}^{2i-k} C^k_{(2i)j} \\frac{ f(x+j\\delta)-f(x) }{j\\delta}\\\\ &- \\frac{\\delta}{2!}f''(x) \\sum\\limits_{j=-k}^{2i-k}jC^k_{(2i)j} - \\frac{\\delta^2}{3!}f^{(3)}(x) \\sum\\limits_{j=-k}^{2i-k}j^2C^k_{(2i)j} - ... - \\frac{\\delta^{2i-1}}{(2i)!}f^{(2i)}(x) \\sum \\limits_{j=-k}^{2i-k}j^{2i-1}C^k_{(2i)j} \\end{aligned} \\end{equation}Thus, for 2ith order accuracy, item of $\\delta,\\delta^2,&#x2026;,\\delta^{2i-1}$ should be eliminated, so: \\begin{eqnarray} \\begin{bmatrix} 1 & 1 &... & 1 & 1 & ... & 1 \\\\ -k & -k+1 &... & -1 & 1 & ... & 2i-k \\\\ (-k)^2 &(-k+1)^2 &... & (-1)^2 & 1^2 & ... & (2i-k)^2 \\\\ (-k)^3 &(-k+1)^3 &... & (-1)^2 & 1^3 & ... & (2i-k)^3 \\\\ ...\\\\ (-k)^{2i-1} & (-k+1)^{2i-1} & ... &(-1)^{2i-1} & 1^{2i-1} & ... & (2i-k)^{2i-1} \\end{bmatrix} \\begin{bmatrix} C^k_{(2i)(-k)} \\\\ C^k_{(2i)(-k+1)} \\\\ C^k_{(2i)(-k+2)} \\\\ ...\\\\ C^k_{(2i)(-1)} \\\\ C^k_{(2i)1} \\\\ ...\\\\ C^k_{(2i)(2i-k)} \\end{bmatrix} = \\begin{bmatrix} 1\\\\ 0\\\\ 0\\\\ ...\\\\ 0\\\\ \\end{bmatrix} \\label{LA} \\end{eqnarray}ResultFor $2i$th order FD accuracy, the $k$th$(k=0,1,2,&#x2026;,i-1)$ boundary points, $C^k_{(2i)(j)}$ $(j=-k,-k+1,&#x2026;,-1,1,&#x2026;,2i-k)$ is the solution of $\\eqref{LA}$, while \\begin{equation} \\begin{aligned} f'(x) = & \\sum \\limits_{j=-k}^{2i-k} C^k_{(2i)j} \\frac{ f(x+j\\delta)-f(x) }{j\\delta}\\\\ \\end{aligned} \\end{equation}ExamplesFD scheme corresponding to accuracy orders of 2,4,6,8,10,12 are implemented to $f(x) = sin(x)$, their FD results are ploted versus theoretical first order derivative of $f&#x2019;(x) = cos(x)$, as well as their error.","raw":null,"content":null,"categories":[{"name":"PDE","slug":"PDE","permalink":"http://sheng09.github.io/categories/PDE/"}],"tags":[{"name":"FD","slug":"FD","permalink":"http://sheng09.github.io/tags/FD/"},{"name":"modeling","slug":"modeling","permalink":"http://sheng09.github.io/tags/modeling/"},{"name":"error","slug":"error","permalink":"http://sheng09.github.io/tags/error/"}]},{"title":"Solving Vandermonde Equation for FD","slug":"vandermonde","date":"2016-10-14T19:07:44.000Z","updated":"2017-01-21T13:39:36.239Z","comments":true,"path":"2016/10/15/vandermonde/","link":"","permalink":"http://sheng09.github.io/2016/10/15/vandermonde/","excerpt":"This post presents how to solve vandermonde equation in finite-difference.&#x3000;For 2N order accuracy finite-difference of derivatives, $C_k(k=1,2,&#x2026;,N)$ is the solution of a vandermonde equation:\n\n\\begin{equation}\n    \\begin{bmatrix}\n        1        & 1        & 1        & ... & 1        \\\\\n        1^2      & 2^2      & 3^2      & ... & N^2      \\\\\n        1^4      & 2^4      & 3^4      & ... & N^4      \\\\\n        1^6      & 2^6      & 3^6      & ... & N^6      \\\\\n        ... \\\\\n        1^{2N-2} & 2^{2N-2} & 3^{2N-2} & ... & N^{2N-2}\n    \\end{bmatrix}\n    \\begin{bmatrix}\n        C_1 \\\\ C_2 \\\\ C_3 \\\\ C_4 \\\\ ... \\\\ C_N\n    \\end{bmatrix}\n    =\n    \\begin{bmatrix}\n        1 \\\\ 0 \\\\ 0 \\\\ 0 \\\\ ... \\\\ 0\n    \\end{bmatrix}\n    \\label{equ}\n\\end{equation}","text":"This post presents how to solve vandermonde equation in finite-difference.&#x3000;For 2N order accuracy finite-difference of derivatives, $C_k(k=1,2,&#x2026;,N)$ is the solution of a vandermonde equation: \\begin{equation} \\begin{bmatrix} 1 & 1 & 1 & ... & 1 \\\\ 1^2 & 2^2 & 3^2 & ... & N^2 \\\\ 1^4 & 2^4 & 3^4 & ... & N^4 \\\\ 1^6 & 2^6 & 3^6 & ... & N^6 \\\\ ... \\\\ 1^{2N-2} & 2^{2N-2} & 3^{2N-2} & ... & N^{2N-2} \\end{bmatrix} \\begin{bmatrix} C_1 \\\\ C_2 \\\\ C_3 \\\\ C_4 \\\\ ... \\\\ C_N \\end{bmatrix} = \\begin{bmatrix} 1 \\\\ 0 \\\\ 0 \\\\ 0 \\\\ ... \\\\ 0 \\end{bmatrix} \\label{equ} \\end{equation} Gaussian Elimination Step 1 Step 2 Step 3 Step k Step N-1 Result Value and Program Gaussian EliminationThis linear equation could be solved by gaussian elimination.Augmented matrix of linear equation $\\eqref{equ}$ is: \\begin{equation} \\begin{bmatrix} 1^0 & 2^0 & 3^0 & 4^0 & 5^0 & 6^0 & ... & N^0 & 1\\\\ 1^2 & 2^2 & 3^2 & 4^2 & 5^2 & 6^2 & ... & N^2 & 0\\\\ 1^4 & 2^4 & 3^4 & 4^4 & 5^4 & 6^4 & ... & N^4 & 0\\\\ 1^6 & 2^6 & 3^6 & 4^6 & 5^6 & 6^6 & ... & N^6 & 0\\\\ 1^8 & 2^8 & 3^8 & 4^8 & 5^8 & 6^8 & ... & N^8 & 0\\\\ ... \\\\ 1^{2N-2} & 2^{2N-2} & 3^{2N-2} & ... & ...& ...& ... & N^{2N-2} & 0 \\\\ \\end{bmatrix} \\end{equation}An upper triangular matrix could be obtained by subtracting the row $(i+1)$ from row $i$: Step 1$row(i+1) - row(i) [i=1,2,3,4,5,&#x2026;,N-1] $ \\begin{equation} \\begin{bmatrix} 1^0 & 2^0 & 3^0 & ... & N^0 & 1 \\\\ 0 & 2^2-1 & 3^2-1 & ... & N^2-1 &-1 \\\\ 0 & 2^2(2^2-1) & 3^2(3^2-1) & ... & N^2(N^2-1) & 0 \\\\ 0 & 2^4(2^2-1) & 3^4(3^2-1) & ... & N^4(N^2-1) & 0 \\\\ 0 & 2^6(2^2-1) & 3^6(3^2-1) & ... & N^6(N^2-1) & 0 \\\\ ... \\\\ 0 & 2^{2N-4}(2^2-1) & 3^{2N-4}(3^2-1) & ... & N^{2N-4}(N^2-1)& 0 \\\\ \\end{bmatrix} \\end{equation}Step 2$row(i+1) - 2^2row(i) [i=2,3,4,5,&#x2026;,N-1] $ \\begin{equation} \\begin{bmatrix} 1 & 1 & 1 & ... & 1 & 1 \\\\ 0 & 2^2-1 & 3^2-1 & ... & N^2-1 & -1 \\\\ 0 & 0 & (3^2-2^2)(3^2-1) & ... & (N^2-2^2)(N^2-1) & 2^2 \\\\ 0 & 0 & 3^2(3^2-2^2)(3^2-1) & ... & N^2(N^2-2^2)(N^2-1) & 0 \\\\ 0 & 0 & 3^4(3^2-2^2)(3^2-1) & ... & N^4(N^2-2^2)(N^2-1) & 0 \\\\ ...\\\\ 0 & 0 & 3^{2N-6}(3^2-2^2)(3^2-1) & ... & N^{2N-6}(N^2-2^2)(N^2-1) & 0 \\\\ \\end{bmatrix} \\end{equation}Step 3$row(i+1) - 3^2row(i) [i=3,4,5,&#x2026;,N-1] $ \\begin{equation} \\begin{bmatrix} 1 & 1 & 1 & ... & 1 & 1 \\\\ 0 & 2^2-1 & 3^2-1 & ... & N^2-1 & -1 \\\\ 0 & 0 & (3^2-2^2)(3^2-1) & ... & (N^2-2^2)(N^2-1) & 2^2 \\\\ 0 & 0 & 0 & ... & (N^2-3^2)(N^2-2^2)(N^2-1) & -2^23^2 \\\\ 0 & 0 & 0 & ... & N^2(N^2-3^2)(N^2-2^2)(N^2-1) & 0 \\\\ ...\\\\ 0 & 0 & 0 & ... & N^{2N-8}(N^2-3^2)(N^2-2^2)(N^2-1) & 0 \\\\ \\end{bmatrix} \\end{equation}Step k$row(i+1) - k^2row(i) [i=k,k+1,&#x2026;,N-1] $&#x2026; Step N-1$row(i+1) - k^2row(i) [i=N-1] $ Detail derivations are presented in fd_coef_vandermonde.pdf. ResultFinally, the augmented matrix is: \\begin{eqnarray} \\begin{bmatrix} 1 & a_{12} & a_{13} & a_{14} & ... & a_{1N} & b_1 \\\\ 0 & 1 & a_{23} & a_{24} & ... & a_{2N} & b_2 \\\\ 0 & 0 & 1 & a_{34} & ... & a_{3N} & b_3 \\\\ ...\\\\ 0 & 0 &0 & 0 & ... & 1 & b_4 \\\\ \\end{bmatrix}\\\\ \\end{eqnarray} \\begin{eqnarray} a_{ij} & = & \\frac { i (j+i-1)! } { j(2i-1)!(j-i)! } (j>i)\\\\ b_i & = & \\frac { (-1)^{i-1} (i-1)! i! } { (2i-1)! } \\\\ \\end{eqnarray}Thus: \\begin{eqnarray} C_i & = & b_i - \\sum \\limits_{j=i+1}^N a_{ij}C_j = \\frac{ (-1)^{i-1} (i-1)! i! } { (2i-1)! } - \\sum \\limits_{j=i+1}^N \\frac { i (j+i-1)! } { j(2i-1)!(j-i)! } C_i \\\\ C_N & = & \\frac { (-1)^{N-1} (N-1)! N! } { (2N-1)! } \\\\ %& = & \\sum \\limits_{i=k+1}^N \\frac{1}{N-k} \\frac { (-1)^{k-1} (k-1)! k! (i-k)!i } { i(2k-1)! (i-k)! } % - \\sum \\limits_{i=k+1}^N \\frac { k (i+k-1)! } { i(2k-1)!(i-k)! } C_i \\\\ %& = & \\sum \\limits_{i=k+1}^N \\frac{1}{ i(2k-1)!(i-k)! } % \\left[ \\frac{ (-1)^{k-1} (k-1)! k! (i-k)!i }{N-k} - { k (i+k-1)! } C_i \\right] \\end{eqnarray}Value and ProgramValues of $C_i$ are calculated by fd_coef.py. order $C_{1}$ $C_{2}$ $C_{3}$ $C_{4}$ $C_{5}$ $C_{6}$ 2 $1$ 4 $4/3$ $-1/3$ 6 $3/2$ $-3/5$ $1/10$ 8 $8/5$ $-4/5$ $8/35$ $-1/35$ 10 $5/3$ $-20/21$ $5/14$ $-5/63$ $1/126$ 12 $12/7$ $-15/14$ $10/21$ $-1/7$ $2/77$ $-1/462$","raw":null,"content":null,"categories":[{"name":"PDE","slug":"PDE","permalink":"http://sheng09.github.io/categories/PDE/"}],"tags":[{"name":"FD","slug":"FD","permalink":"http://sheng09.github.io/tags/FD/"},{"name":"modeling","slug":"modeling","permalink":"http://sheng09.github.io/tags/modeling/"},{"name":"error","slug":"error","permalink":"http://sheng09.github.io/tags/error/"},{"name":"Linear Equation","slug":"Linear-Equation","permalink":"http://sheng09.github.io/tags/Linear-Equation/"}]},{"title":"Central Finite Difference of Derivatives(中心有限差分)","slug":"finite-difference","date":"2016-10-12T19:53:58.000Z","updated":"2017-01-21T13:41:31.136Z","comments":true,"path":"2016/10/13/finite-difference/","link":"","permalink":"http://sheng09.github.io/2016/10/13/finite-difference/","excerpt":"This post derived the method of central finite difference for calculating derivatives, especially for first and second order derivatives, and finally arrive at perfect results. Example are provided to verify the results.","text":"This post derived the method of central finite difference for calculating derivatives, especially for first and second order derivatives, and finally arrive at perfect results. Example are provided to verify the results. Taylor expansion Derivatives (1) First order derivative (2) Second order derivative Higher Order Accuracy (1) $f&#x2019;(x)$ (2) $f&#x2019;&#x2019;(x)$ Conclusion Examples What&#x2019;s more Taylor expansionAccording to Taylor expansion, we have: \\begin{eqnarray} f(x+\\delta ) & = & f(x) + \\delta f'(x) + \\frac{\\delta ^2}{2!} f''(x) + \\frac{\\delta ^3}{3!} f^{(3)} (x) + ... + \\frac{\\delta ^i}{i!} f^{(i)} (x) + \\frac{\\delta ^n}{n!} f^{(n)} (x) + O(\\delta^{n+1})\\\\ f(x-\\delta ) & = & f(x) - \\delta f'(x) + \\frac{\\delta ^2}{2!} f''(x) - \\frac{\\delta ^3}{3!} f^{(3)} (x) + ... + \\frac{(-\\delta)^i}{i!} f^{(i)} (x) + \\frac{(-\\delta)^n}{n!} f^{(n)} (x) + O(\\delta^{n+1}) \\end{eqnarray}DerivativesIn physical field, it is first and second order derivatives, as well as other boundary(initial) functions or constants, that compose the differential control equations. So we only pay attention to the first and second order derivatives.Adding and subtraction of $f(x+\\delta)$ and $f(x-\\delta)$ lead to: \\begin{eqnarray} \\frac{f(x+\\delta) + f(x-\\delta)}{2} & = & f(x) + \\frac{\\delta^2}{2!} f''(x) + \\frac{\\delta^4}{4!} f^{(4)}(x) + \\frac{\\delta^{2i}}{(2i)!} f^{(2i)}(x) + O( \\delta^{2i+2}) \\label{second} \\\\ \\frac{f(x+\\delta) - f(x-\\delta)}{2} & = & \\delta f'(x) + \\frac{\\delta^3}{3!} f^{(3)}(x) + \\frac{\\delta^5}{5!} f^{(5)}(x) + \\frac{\\delta^{2i-1}}{(2i-1)!} f^{(2i-1)}(x) + O(\\delta^{2i+1}) \\label{first} \\end{eqnarray}(1) First order derivativeAccording to $\\eqref{first}$, $f&#x2019;(x)$ should be: \\begin{eqnarray} f'(x;\\delta) = \\frac{f(x+\\delta) - f(x-\\delta)}{2\\delta} - \\frac{\\delta^2}{3!} f^{(3)}(x) - \\frac{\\delta^4}{5!} f^{(5)}(x) - \\frac{\\delta^{2i-2}}{(2i-1)!} f^{(2i-1)}(x) + O(\\delta^{2i}) \\end{eqnarray}omitting tail items leads to $f&#x2019;(x) = \\frac{f(x+\\delta) - f(x-\\delta)}{2\\delta}$. The accuracy is $O(\\delta^2)$, known as second order accuracy. (2) Second order derivativeIn the same way, $f&#x2019;&#x2019;(x)$ is derived from $\\eqref{second}$ \\begin{eqnarray} f''(x;\\delta) = \\frac{f(x+\\delta) + f(x-\\delta) - 2f(x)}{ \\delta^2} - \\frac{2\\delta^2}{4!} f^{(4)}(x) - \\frac{2\\delta^4}{6!} f^{(6)}(x) - \\frac{2\\delta^{2i-2}}{(2i)!} f^{(2i)}(x) + O( \\delta^{2i}) \\end{eqnarray}omitting tail items leads to $f&#x2019;&#x2019;(x) = \\frac{f(x+\\delta) + f(x-\\delta) - 2f(x)}{ \\delta^2}$. The accuracy is $O(\\delta^2)$, also know as second order accuaray. Higher Order AccuracyTo increase the accuracy, $f&#x2019;(x;\\delta)$, $f&#x2019;(x;2\\delta)$, $f&#x2019;(x;3\\delta)$&#x2026;etc are could be added together by appropriate ratios to counteract the items of $\\delta^2$,$\\delta^4$,$\\delta^6$&#x2026;etc. This method works for $f&#x2019;&#x2019;(x)$ as well. (1) $f&#x2019;(x)$For step of $\\delta$, $2\\delta$, $3\\delta$&#x2026;etc, we have: \\begin{eqnarray} \\begin{cases} f'(x; \\delta) & = & \\frac{f(x+\\delta) - f(x-\\delta)}{2\\delta} - \\frac{\\delta^2}{3!} f^{(3)}(x) - \\frac{\\delta^4}{5!} f^{(5)}(x) - \\frac{\\delta^{2i-2}}{(2i-1)!} f^{(2i-1)}(x) + O(\\delta^{2i})\\\\ f'(x;2\\delta) & = & \\frac{f(x+2\\delta) - f(x-2\\delta)}{2 (2\\delta)} - \\frac{2^2\\delta^2}{3!} f^{(3)}(x) - \\frac{2^4\\delta^4}{5!} f^{(5)}(x) - \\frac{2^{2i-2}\\delta^{2i-2}}{(2i-1)!} f^{(2i-1)}(x) + O(\\delta^{2i}) \\\\ f'(x;3\\delta) & = & \\frac{f(x+3\\delta) - f(x-3\\delta)}{2 (3\\delta)} - \\frac{3^2\\delta^2}{3!} f^{(3)}(x) - \\frac{3^4\\delta^4}{5!} f^{(5)}(x) - \\frac{3^{2i-2}\\delta^{2i-2}}{(2i-1)!} f^{(2i-1)}(x) + O(\\delta^{2i}) \\\\ ...\\\\ f'(x;N\\delta) & = & \\frac{f(x+N\\delta) - f(x-N\\delta)}{2 (N\\delta)} - \\frac{N^2\\delta^2}{3!} f^{(3)}(x) - \\frac{N^4\\delta^4}{5!} f^{(5)}(x) - \\frac{N^{2i-2}\\delta^{2i-2}}{(2i-1)!} f^{(2i-1)}(x) + O(\\delta^{2i}) \\\\ \\end{cases} \\end{eqnarray}summing all these items proportionally from $f&#x2019;(x;\\delta)$ to $f&#x2019;(x;N\\delta)$ leads to: \\begin{equation} \\begin{aligned} f'(x) = &\\sum \\limits_{k=1}^N {C_k \\frac{ f(x+k\\delta) - f(x-k\\delta) }{2k\\delta} } + O(\\delta^{2i}) \\\\ & - \\frac{\\delta^2 f^{(3)}(x) }{3!} \\sum \\limits_{k=1}^N {C_k k^2} - \\frac{\\delta^4 f^{(5)}(x) }{5!} \\sum \\limits_{k=1}^N {C_k k^4} - ... - \\frac{\\delta^{2i-2} f^{(2i-1)}(x) }{5!} \\sum \\limits_{k=1}^N {C_k k^{2i-2}} \\end{aligned} \\end{equation} \\begin{equation} C_1+C_2+C_3+...+C_N = 1 \\end{equation}so, if we want to have 2ith order accuracy, all item coefficients of $\\sum \\limits_{k=1}^N {C_k k^{**}}$ must have value of zero. Besides, to determine the value of $C_1,C_2,&#x2026;,C_N$, $i$ should equals to $N$. So we arrive at a linear equation of $C$: \\begin{equation} \\begin{bmatrix} 1 & 1 & 1 & ... & 1 \\\\ 1^2 & 2^2 & 3^2 & ... & N^2 \\\\ 1^4 & 2^4 & 3^4 & ... & N^4 \\\\ 1^6 & 2^6 & 3^6 & ... & N^6 \\\\ ... \\\\ 1^{2N-2} & 2^{2N-2} & 3^{2N-2} & ... & N^{2N-2} \\end{bmatrix} \\begin{bmatrix} C_1 \\\\ C_2 \\\\ C_3 \\\\ C_4 \\\\ ... \\\\ C_N \\end{bmatrix} = \\begin{bmatrix} 1 \\\\ 0 \\\\ 0 \\\\ 0 \\\\ ... \\\\ 0 \\end{bmatrix} \\label{M_C} \\end{equation}By calculation, $C_1,C_2,C_3,&#x2026;,C_N$ have the value of: (2) $f&#x2019;&#x2019;(x)$For step of $\\delta$, $2\\delta$, $3\\delta$&#x2026;etc, we have: \\begin{eqnarray} \\begin{cases} f''(x; \\delta) & = & \\frac{f(x+\\delta) + f(x-\\delta) - 2f(x)}{ \\delta^2} - \\frac{2\\delta^2}{4!} f^{(4)}(x) - \\frac{2\\delta^4}{6!} f^{(6)}(x) - \\frac{2\\delta^{2i-2}}{(2i)!} f^{(2i)}(x) + O( \\delta^{2i}) \\\\ f''(x;2\\delta) & = & \\frac{f(x+2\\delta) + f(x-2\\delta) - 2f(x)}{ 2^2\\delta^2} - 2^2 \\frac{2 \\delta^2}{4!} f^{(4)}(x) - 2^4 \\frac{2 \\delta^4}{6!} f^{(6)}(x) - 2^{2i-2}\\frac{2 \\delta^{2i-2}}{(2i)!} f^{(2i)}(x) + O( \\delta^{2i}) \\\\ f''(x;3\\delta) & = & \\frac{f(x+3\\delta) + f(x-3\\delta) - 2f(x)}{3^2 \\delta^2} - 3^2 \\frac{2 \\delta^2}{4!} f^{(4)}(x) - 3^4 \\frac{2 \\delta^4}{6!} f^{(6)}(x) - 3^{2i-2}\\frac{2 \\delta^{2i-2}}{(2i)!} f^{(2i)}(x) + O( \\delta^{2i}) \\\\ f''(x;N\\delta) & = & \\frac{f(x+N\\delta) + f(x-N\\delta) - 2f(x)}{N^2 \\delta^2} - N^2 \\frac{2 \\delta^2}{4!} f^{(4)}(x) - N^4 \\frac{2 \\delta^4}{6!} f^{(6)}(x) - N^{2i-2}\\frac{2 \\delta^{2i-2}}{(2i)!} f^{(2i)}(x) + O( \\delta^{2i}) \\end{cases} \\end{eqnarray}summing all these items proportionally from $f&#x2019;(x;\\delta)$ to $f&#x2019;(x;N\\delta)$ leads to: \\begin{equation} \\begin{aligned} f''(x) = & \\sum \\limits_{k=1}^N F_k \\frac{ f(x+k\\delta) - f(x-k\\delta) -2f(x) }{k^2 \\delta^2} +O( \\delta^{2i}) \\\\ & - \\frac{2 \\delta^2}{4!} f^{(4)}(x) \\sum \\limits_{k=1}^N F_k k^2 - \\frac{2 \\delta^4}{6!} f^{(6)}(x) \\sum \\limits_{k=1}^N F_k k^4 ... - \\frac{2 \\delta^{2i-2}}{(2i)!} f^{(2i)}(x) \\sum \\limits_{k=1}^N F_k k^{2i-2} \\end{aligned} \\end{equation} \\begin{equation} F_1+F_2+F_3+...+F_N = 1 \\end{equation}so, if we want to have 2ith order accuracy, all item coefficients of $\\sum \\limits_{k=1}^N {F_k k^{**}}$ must have value of zero. Besides, to determine the value of $F_1,F_2,&#x2026;,F_N$, $i$ should equals to $N$. So we arrive at a linear equation of $F$, which is same as $\\eqref{M_C}$. \\begin{equation} \\begin{bmatrix} 1 & 1 & 1 & ... & 1 \\\\ 1^2 & 2^2 & 3^2 & ... & N^2 \\\\ 1^4 & 2^4 & 3^4 & ... & N^4 \\\\ 1^6 & 2^6 & 3^6 & ... & N^6 \\\\ ... \\\\ 1^{2N-2} & 2^{2N-2} & 3^{2N-2} & ... & N^{2N-2} \\end{bmatrix} \\begin{bmatrix} F_1 \\\\ F_2 \\\\ F_3 \\\\ F_4 \\\\ ... \\\\ F_N \\end{bmatrix} = \\begin{bmatrix} 1 \\\\ 0 \\\\ 0 \\\\ 0 \\\\ ... \\\\ 0 \\end{bmatrix} \\label{M_F} \\end{equation}ConclusionTo sum up, finite difference of 2Nth order accuracy for first or second order derivative are: \\begin{eqnarray} D [f(x)] & = & \\sum \\limits_{k=1}^N {C_k \\frac{ f(x+k\\delta) - f(x-k\\delta) }{2k\\delta} } \\\\ D^2[f(x)] & = & \\sum \\limits_{k=1}^N C_k \\frac{ f(x+k\\delta) - f(x-k\\delta) -2f(x) }{k^2 \\delta^2} \\\\ %C_k & = & \\end{eqnarray}Values of $C_k$ are obtained by solving vandermonde equation. \\begin{eqnarray} \\begin{cases} C_i & = & \\frac{ (-1)^{i-1} (i-1)! i! } { (2i-1)! } - \\sum \\limits_{j=i+1}^N \\frac { i (j+i-1)! } { j(2i-1)!(j-i)! } C_i \\\\ %\\left[ i= 1,2,3...,N-1 \\right]\\\\ C_N & = & \\frac { (-1)^{N-1} (N-1)! N! } { (2N-1)! } \\\\ \\end{cases} \\end{eqnarray}by simplifying: \\begin{eqnarray} D [f(x)] & = & \\sum \\limits_{k=1}^N \\frac{c_k}{\\delta} \\left[f(x+k\\delta) - f(x-k\\delta) \\right] \\\\ D^2[f(x)] & = & \\sum \\limits_{k=1}^N \\frac{f_k}{\\delta^2} \\left[f(x+k\\delta) - f(x-l\\delta) - 2f(x) \\right] \\\\ c_k & = & \\frac{C_k}{2k} \\\\ f_k & = & \\frac{C_k}{k^2} \\end{eqnarray}Values of $C_k$, $c_k$ and $f_k$ are: order $C_{1}$ $C_{2}$ $C_{3}$ $C_{4}$ $C_{5}$ $C_{6}$ 2 $1$ 4 $4/3$ $-1/3$ 6 $3/2$ $-3/5$ $1/10$ 8 $8/5$ $-4/5$ $8/35$ $-1/35$ 10 $5/3$ $-20/21$ $5/14$ $-5/63$ $1/126$ 12 $12/7$ $-15/14$ $10/21$ $-1/7$ $2/77$ $-1/462$ order $c_{1}$ $c_{2}$ $c_{3}$ $c_{4}$ $c_{5}$ $c_{6}$ 2 $0.5$ 4 $2/3$ $-1/12$ 6 $3/4$ $-3/20$ $1/60$ 8 $4/5$ $-1/5$ $4/105$ $-1/280$ 10 $5/6$ $-5/21$ $5/84$ $-5/504$ $1/1260$ 12 $6/7$ $-15/56$ $5/63$ $-1/56$ $1/385$ $-1/5544$ order $f_{1}$ $f_{2}$ $f_{3}$ $f_{4}$ $f_{5}$ $f_{6}$ 2 $1.0$ 4 $4/3$ $-1/12$ 6 $3/2$ $-3/20$ $1/90$ 8 $8/5$ $-1/5$ $8/315$ $-1/560$ 10 $5/3$ $-5/21$ $5/126$ $-5/1008$ $1/3150$ 12 $12/7$ $-15/56$ $10/189$ $-1/112$ $2/1925$ $-1/16632$ ExamplesApplying finite-difference method to calculate the first and second derivatives of $f(x)=sin(x)$, results of 2nd, 4th, 6th order accuracy are presented below, as well as their error.Codes What&#x2019;s moreMethod presented above applies to collocated grid and symmetric points only. Find method for staggered grid, and method for processing boundary points(asymmetric method).","raw":null,"content":null,"categories":[{"name":"PDE","slug":"PDE","permalink":"http://sheng09.github.io/categories/PDE/"}],"tags":[{"name":"FD","slug":"FD","permalink":"http://sheng09.github.io/tags/FD/"},{"name":"modeling","slug":"modeling","permalink":"http://sheng09.github.io/tags/modeling/"},{"name":"error","slug":"error","permalink":"http://sheng09.github.io/tags/error/"}]},{"title":"组合","slug":"combination","date":"2016-10-11T18:30:34.000Z","updated":"2016-10-13T19:16:55.860Z","comments":true,"path":"2016/10/12/combination/","link":"","permalink":"http://sheng09.github.io/2016/10/12/combination/","excerpt":"","text":"","raw":null,"content":null,"categories":[],"tags":[]},{"title":"快速排列","slug":"fast-permutation","date":"2016-10-11T15:59:02.000Z","updated":"2017-01-22T14:50:47.462Z","comments":true,"path":"2016/10/11/fast-permutation/","link":"","permalink":"http://sheng09.github.io/2016/10/11/fast-permutation/","excerpt":"&#x5229;&#x7528;&#x4F4D;&#x8FD0;&#x7B97;&#xFF0C;&#x5FEB;&#x901F;&#x5B9E;&#x73B0;&#x6392;&#x5217;&#x3002;","text":"&#x5229;&#x7528;&#x4F4D;&#x8FD0;&#x7B97;&#xFF0C;&#x5FEB;&#x901F;&#x5B9E;&#x73B0;&#x6392;&#x5217;&#x3002; &#x6DF1;&#x5EA6;&#x641C;&#x7D22; &#x4F18;&#x5316;&#x6DF1;&#x5EA6;&#x641C;&#x7D22; &#x4F4D;&#x4F18;&#x5316; &#x5FEB;&#x901F;&#x4F4D; &#x66F4;&#x591A;&#x4F18;&#x5316; Codes &#x6DF1;&#x5EA6;&#x641C;&#x7D22;&#x5229;&#x7528;&#x9012;&#x5F52;&#xFF0C;&#x6BCF;&#x4E00;&#x6B21;&#x653E;&#x7F6E;&#xFF0C;&#x9996;&#x5148;&#x68C0;&#x67E5;&#x5176;&#x662F;&#x5426;&#x4E0E;&#x524D;&#x9762;&#x7684;&#x6570;&#x91CD;&#x5408;&#x3002;12345678910111213141516171819202122232425262728293031323334353637383940414243#include &lt;iostream&gt;#include &lt;ctime&gt;#include &lt;string&gt;static int n, end, count = 0;static int *sol = new int [n] {};void print() { for(int i =0; i &lt; n; ++i) std::cout &lt;&lt; sol[i]; std::cout &lt;&lt; &quot;;&quot; &lt;&lt; count &lt;&lt; &quot;\\n&quot;;}void permutation( int pos ) { for(int i = 0; i &lt; n; ++i) { bool ok = true; for(int j =0; j &lt; pos; ++j) { if(i == sol[j]) { ok = false; break; } } if( ok ) { if(pos == end) { count++; //print(); } else { sol[pos] = i; permutation(pos+1); } } }}int main(int argc, char const *argv[]) { n = std::stoi(argv[1]); if( argc == 3) end = std::stoi(argv[2]) - 1; else end = n - 1; std::clock_t tic = std::clock(); permutation(0); std::clock_t toc = std::clock(); std::cout &lt;&lt; &quot;Solution: &quot; &lt;&lt; count &lt;&lt; &quot; &quot; &lt;&lt; float(toc - tic) / CLOCKS_PER_SEC &lt;&lt; &quot;s\\n&quot;; return 0;} &#x4F18;&#x5316;&#x6DF1;&#x5EA6;&#x641C;&#x7D22;&#x5229;&#x7528;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#x6765;&#x6807;&#x8BB0;&#x54EA;&#x4E9B;&#x6570;&#x5DF2;&#x7ECF;&#x88AB;&#x5360;&#x7528;&#x4E86;&#xFF1A;12345678910111213141516static int n, end, count = 0;static bool *avai = new bool [n] {};void permutation( int pos ) { for(int i = 0; i &lt; n; ++i) { if( !avai[i] ) { if (pos == end) { count++; } else { avai[i] = true; permutation(pos+1); avai[i] = false; } } }} &#x4F4D;&#x4F18;&#x5316;&#x5229;&#x7528;&#x4F4D;&#x6765;&#x6807;&#x8BB0;&#x54EA;&#x4E9B;&#x6570;&#x5DF2;&#x7ECF;&#x88AB;&#x5360;&#x7528;&#x4E86;&#xFF1A;12345678910111213141516static int n, end, count = 0;static int avai = 0;void permutation( int pos ) { for(int i = 0; i &lt; n; ++i) { if( ( avai &amp; (1&lt;&lt;i) ) == 0 ) { if (pos == end) { count++; } else { avai ^= (1&lt;&lt;i); permutation(pos+1); avai ^= (1&lt;&lt;i); } } }} &#x5FEB;&#x901F;&#x4F4D;&#x5229;&#x7528;&#x4F4D;&#x6765;&#x6807;&#x8BB0;&#x54EA;&#x4E9B;&#x6570;&#x5DF2;&#x7ECF;&#x88AB;&#x5360;&#x7528;&#x4E86;&#xFF0C;&#x5E76;&#x4E14;&#x6BCF;&#x4E00;&#x6B21;&#x8FED;&#x4EE3;&#x76F4;&#x63A5;&#x53D6;&#x51FA;&#x672A;&#x5360;&#x7528;&#x7684;&#x6570;&#xFF1A;x &amp; -x&#x53EF;&#x4EE5;&#x53D6;&#x51FA;&#x6700;&#x53F3;&#x8FB9;&#x4E3A;1&#x7684;&#x90A3;&#x4E00;&#x4F4D;&#x3002;12345678910111213141516static int n, end, count = 0, avai = 0;void permutation( int pos ) { int empty = ((1&lt;&lt;n)-1) &amp; ~avai; // acquire the available bits and set them to 1.(eg 01110110) while( empty != 0 ) { int p = empty &amp; (-empty);//pick the most right bit that equals 1.(eg 00000010) empty ^= p; //set this bit to be 0, which means occupied. (eg 01110100) if (pos == end) { count++; } else { avai ^= p; permutation(pos+1); avai ^= p; } }} &#x66F4;&#x591A;&#x4F18;&#x5316;&#x589E;&#x52A0;&#x51FD;&#x6570;&#x53C2;&#x6570;&#xFF0C;&#x51CF;&#x5C11;&#x8FD0;&#x7B97;&#x91CF;&#xFF1A;1234567891011121314static int n, end, count = 0;void permutation( int pos, int avai ) { int empty = ((1&lt;&lt;n)-1) &amp; ~avai; while( empty != 0 ) { int p = empty &amp; (-empty); empty ^= p; if (pos == end) { count++; } else { permutation(pos+1, avai^p); } }} CodesDownloadGitHub","raw":null,"content":null,"categories":[{"name":"Programming","slug":"Programming","permalink":"http://sheng09.github.io/categories/Programming/"}],"tags":[{"name":"bit","slug":"bit","permalink":"http://sheng09.github.io/tags/bit/"},{"name":"Programming","slug":"Programming","permalink":"http://sheng09.github.io/tags/Programming/"},{"name":"algorithm","slug":"algorithm","permalink":"http://sheng09.github.io/tags/algorithm/"}]},{"title":"位运算--快速判断奇偶性","slug":"even-odd","date":"2016-10-10T01:03:10.000Z","updated":"2017-01-22T14:50:34.809Z","comments":true,"path":"2016/10/10/even-odd/","link":"","permalink":"http://sheng09.github.io/2016/10/10/even-odd/","excerpt":"&#x5229;&#x7528;&#x4F4D;&#x8FD0;&#x7B97;&#xFF0C;&#x53EF;&#x4EE5;&#x5FEB;&#x901F;&#x7684;&#x5224;&#x65AD;&#x6574;&#x6570;&#x7684;&#x5947;&#x5076;&#x6027;&#x3002;","text":"&#x5229;&#x7528;&#x4F4D;&#x8FD0;&#x7B97;&#xFF0C;&#x53EF;&#x4EE5;&#x5FEB;&#x901F;&#x7684;&#x5224;&#x65AD;&#x6574;&#x6570;&#x7684;&#x5947;&#x5076;&#x6027;&#x3002;&#x6574;&#x6570;&#x4F4D;&#x5B58;&#x50A8;&#x65F6;&#xFF0C;&#x6700;&#x4F4E;&#x4F4D;&#x5982;&#x679C;&#x662F;0&#xFF0C;&#x90A3;&#x4E48;&#x5BF9;&#x5E94;&#x4E8E;&#x5076;&#x6570;&#xFF0C;&#x5982;&#x679C;&#x662F;1&#xFF0C;&#x5219;&#x5BF9;&#x5E94;&#x4E8E;&#x5947;&#x6570;&#x3002;&#xFF08;&#x6CE8;&#x610F;&#x8D1F;&#x6570;&#x7684;&#x8865;&#x7801;&#xFF09;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 1#define ISODD(x) ((x)&amp;1) &#x6D4B;&#x8BD5;&#xFF1A;1234567891011121314151617181920212223242526//test.cpp#define ISODD(x) ((x)&amp;1)#include &lt;iostream&gt;int main(int argc, char** argv) { int x[5] = {0, 10, 11, -10, -13}; long l[4] = {10, 11, -10, -13}; short s[4] = {10, 11, -120, -17}; for(int i = 0; i &lt; 5; ++i) { if( ISODD(x[i]) ) std::cout &lt;&lt; &quot;int:&quot; &lt;&lt; x[i] &lt;&lt; &quot;: odd\\n&quot;; else std::cout &lt;&lt; &quot;int:&quot; &lt;&lt; x[i] &lt;&lt; &quot;: even\\n&quot;; } for(int i = 0; i &lt; 4; ++i) { if( ISODD(l[i]) ) std::cout &lt;&lt; &quot;long:&quot; &lt;&lt; l[i] &lt;&lt; &quot;: odd\\n&quot;; else std::cout &lt;&lt; &quot;long:&quot; &lt;&lt; l[i] &lt;&lt; &quot;: even\\n&quot;; } for(int i = 0; i &lt; 4; ++i) { if( ISODD(s[i]) ) std::cout &lt;&lt; &quot;short:&quot; &lt;&lt; s[i] &lt;&lt; &quot;: odd\\n&quot;; else std::cout &lt;&lt; &quot;short:&quot; &lt;&lt; s[i] &lt;&lt; &quot;: even\\n&quot;; }} &#x8FD0;&#x884C;&#xFF1A;12345678910111213141516bash&gt; g++ test.cpp -o test #compilebash&gt; ./testint:0: evenint:10: evenint:11: oddint:-10: evenint:-13: oddlong:10: evenlong:11: oddlong:-10: evenlong:-13: oddshort:10: evenshort:11: oddshort:-120: evenshort:-17: oddbase&gt;","raw":null,"content":null,"categories":[{"name":"Programming","slug":"Programming","permalink":"http://sheng09.github.io/categories/Programming/"}],"tags":[{"name":"bit","slug":"bit","permalink":"http://sheng09.github.io/tags/bit/"},{"name":"Programming","slug":"Programming","permalink":"http://sheng09.github.io/tags/Programming/"},{"name":"algorithm","slug":"algorithm","permalink":"http://sheng09.github.io/tags/algorithm/"}]},{"title":"位运算","slug":"BitComputing","date":"2016-10-06T21:17:17.000Z","updated":"2017-01-22T14:50:09.569Z","comments":true,"path":"2016/10/07/BitComputing/","link":"","permalink":"http://sheng09.github.io/2016/10/07/BitComputing/","excerpt":"1&#x4E2A;Byte&#x7531;8&#x4E2A;Bit&#x6784;&#x6210;&#xFF0C;&#x6BCF;&#x4E00;&#x4E2A;Bit&#x4E3A;0&#x6216;1&#x3002;&#x9488;&#x5BF9;&#x8FD9;&#x4E00;&#x7279;&#x6027;&#xFF0C;&#x5229;&#x7528;&#x4F4D;&#x6765;&#x5B58;&#x50A8;&#x6570;&#x636E;&#xFF0C;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x7A7A;&#x95F4;&#x6700;&#x4F18;&#x5316;&#x3002;&#x6B64;&#x5916;&#xFF0C;&#x7531;&#x4E8E;CPU&#x6307;&#x4EE4;&#x96C6;&#x53EF;&#x4EE5;&#x4E00;&#x6B21;&#x6027;&#x64CD;&#x4F5C;&#x591A;&#x4E2A;Bit&#xFF0C;&#x6545;&#x8FD9;&#x4E00;&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x907F;&#x514D;&#x5BF9;&#x6570;&#x636E;&#x5143;&#x7D20;&#x7684;&#x5FAA;&#x73AF;&#x904D;&#x5386;&#x64CD;&#x4F5C;&#xFF0C;&#x4ECE;&#x800C;&#x5B9E;&#x73B0;&#x52A0;&#x901F;&#x3002;","text":"1&#x4E2A;Byte&#x7531;8&#x4E2A;Bit&#x6784;&#x6210;&#xFF0C;&#x6BCF;&#x4E00;&#x4E2A;Bit&#x4E3A;0&#x6216;1&#x3002;&#x9488;&#x5BF9;&#x8FD9;&#x4E00;&#x7279;&#x6027;&#xFF0C;&#x5229;&#x7528;&#x4F4D;&#x6765;&#x5B58;&#x50A8;&#x6570;&#x636E;&#xFF0C;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x7A7A;&#x95F4;&#x6700;&#x4F18;&#x5316;&#x3002;&#x6B64;&#x5916;&#xFF0C;&#x7531;&#x4E8E;CPU&#x6307;&#x4EE4;&#x96C6;&#x53EF;&#x4EE5;&#x4E00;&#x6B21;&#x6027;&#x64CD;&#x4F5C;&#x591A;&#x4E2A;Bit&#xFF0C;&#x6545;&#x8FD9;&#x4E00;&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x907F;&#x514D;&#x5BF9;&#x6570;&#x636E;&#x5143;&#x7D20;&#x7684;&#x5FAA;&#x73AF;&#x904D;&#x5386;&#x64CD;&#x4F5C;&#xFF0C;&#x4ECE;&#x800C;&#x5B9E;&#x73B0;&#x52A0;&#x901F;&#x3002; &#x4F4D; &#x4F4D;&#x64CD;&#x4F5C; &#x4F4D;&#x903B;&#x8F91;&#x8FD0;&#x7B97;&amp; | ~ ^ &#x79FB;&#x4F4D;&#x8FD0;&#x7B97; &lt;&lt; &gt;&gt; bit mask &#x4F4D;&#x9488;&#x5BF9;&#x67D0;&#x4E00;&#x6570;&#x636E;&#xFF0C;&#x83B7;&#x53D6;&#x5176;&#x4F4D;&#x6570;&#x636E;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x4EE5;&#x4E0B;&#x51FD;&#x6570;getBits()&#xFF1A;1234567891011121314151617//getBits.cpp//Compile: g++ getBits.cpp -c -std=c++11 -o getBits#include &lt;iostream&gt;#include &lt;string&gt;template &lt;typename T&gt; std::string getBits(T _x){ long len = sizeof(T) * 8 - 1; std::string str = &apos;[&apos; + std::to_string(len+1) + &quot;bits]&quot;; long x = *( (long*)(&amp;_x) ); while( len-- != 0 ) { if( (x &gt;&gt; len) &amp; 1 ) str+= &apos;1&apos;; else str+= &apos;0&apos;; } return str;} &#x4F4D;&#x64CD;&#x4F5C;&#x4F4D;&#x903B;&#x8F91;&#x8FD0;&#x7B97;&amp; | ~ ^&#x4E0D;&#x540C;&#x4E8E;&#x903B;&#x8F91;&#x8FD0;&#x7B97;&#x7B26;&#x4E2D;&#x7684;&#x201C;&#x4E0E;&#x201D;&#x201C;&#x6216;&#x201D;&#x201C;&#x975E;&#x201D;&#x201C;&#x4EA6;&#x6216;&#x201D;&#xFF0C;&#x4F4D;&#x903B;&#x8F91;&#x8FD0;&#x7B97;&#x5E76;&#x4E0D;&#x5BF9;&#x6570;&#x636E;&#x7684;&#x201C;TRUE&#x201D;&#x6216;&#x201C;FALSE&#x201D;&#xFF0C;&#x800C;&#x662F;&#x9488;&#x5BF9;&#x6BCF;&#x4E00;&#x4F4D;&#x7684;&#x201C;0&#x201D;&#x6216;&#x201C;1&#x201D;&#x505A;&#x903B;&#x8F91;&#x64CD;&#x4F5C;&#x3002;&#x4F8B;&#x5982;&#xFF1A; 123400010100 &amp; 00001100 = 0000010000010100 | 00001100 = 0000010000010100 ^ 00001100 = 00011000~00000010 = 11111101 &#x79FB;&#x4F4D;&#x8FD0;&#x7B97; &lt;&lt; &gt;&gt;&lt;&lt; &gt;&gt;&#x5206;&#x522B;&#x8868;&#x793A;&#x5C06;&#x6570;&#x636E;&#x4F4D;&#x6574;&#x4F53;&#x5DE6;&#x79FB;&#x548C;&#x53F3;&#x79FB;&#x3002;&#x4F8B;&#x5982;&#xFF1A;12(00000001 &lt;&lt; 2) = 00000100(00001000 &gt;&gt; 3) = 00000001 &#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x53F3;&#x79FB;&#x8FD0;&#x7B97;&#x7B26;&#x53F7;&#x6D89;&#x53CA;&#x5230;&#x7B26;&#x53F7;&#x4F4D;&#x79FB;&#x52A8;&#x7684;&#x5904;&#x7406;&#xFF0C;&#x5206;&#x4E3A;&#x903B;&#x8F91;&#x79FB;&#x4F4D;&#x4E0E;&#x7B97;&#x672F;&#x79FB;&#x4F4D;&#x3002;&#x4E0D;&#x540C;&#x6570;&#x636E;&#x7684;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;&#xFF0C;&#x8BF7;&#x53C2;&#x8003;&#x5BF9;&#x5E94;&#x6807;&#x51C6;&#x3002; bit mask&#x6784;&#x5EFA;&#x4E00;&#x4E2A;&#x503C;A&#xFF0C;&#x5176;&#x67D0;&#x4E9B;&#x4F4D;&#x4E3A;0&#xFF0C;&#x67D0;&#x4E9B;&#x4F4D;&#x4E3A;1&#x3002;&#x90A3;&#x4E48;&#x5C06;&#x6570;&#x636E;&#x4E0E;A&#x505A;&#x4F4D;&#x8FD0;&#x7B97;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x5BF9;&#x6570;&#x636E;&#x7279;&#x5B9A;&#x4F4D;&#x7684;&#x4FEE;&#x6539;&#x3002; &#x63D0;&#x53D6;&#x6570;&#x636E;&#x7684;&#x7B2C;1&#x4F4D;&#xFF1A; dat &amp; 00000010;&#x8BBE;&#x7F6E;&#x6570;&#x636E;&#x7B2C;3&#x4F4D;&#x4E3A;0: dat &amp;= 11110111;&#x8BBE;&#x7F6E;&#x6570;&#x636E;&#x7B2C;3&#x4F4D;&#x4E3A;1&#xFF1A;dat |= 00001000;&#x6570;&#x636E;&#x7B2C;3&#x4F4D;&#x53D6;&#x53CD;&#xFF1A;dat ^= 00001000;&#x63D0;&#x53D6;&#x6570;&#x636E;&#x6700;&#x53F3;&#x8FB9;&#x4E3A;1&#x7684;&#x90A3;&#x4E00;&#x4F4D;&#xFF1A;dat &amp; -dat; 1234567891011121314151617181920//Testint main(int argc, char const *argv[]) { char a = 95; char index = 1; std::cout &lt;&lt; &quot;a:&quot; &lt;&lt; getBits(a) &lt;&lt; &quot;\\n&quot;; std::cout &lt;&lt; &quot;a &amp; 00000001:&quot; &lt;&lt; getBits( (char)( a &amp; index ) ) &lt;&lt; &quot;\\n&quot;; std::cout &lt;&lt; &quot;a &amp; 11111110:&quot; &lt;&lt; getBits( (char)( a &amp; (~index)) ) &lt;&lt; &quot;\\n&quot;; std::cout &lt;&lt; &quot;a | 00000001:&quot; &lt;&lt; getBits( (char)( a | index ) ) &lt;&lt; &quot;\\n&quot;; std::cout &lt;&lt; &quot;a ^ a :&quot; &lt;&lt; getBits( (char)( a ^ a ) ) &lt;&lt; &quot;\\n&quot;; std::cout &lt;&lt; &quot;a &amp;-a :&quot; &lt;&lt; getBits( (char)( a &amp;-a ) ) &lt;&lt; &quot;\\n&quot;; a = 90; std::cout &lt;&lt; &quot;a:&quot; &lt;&lt; getBits(a) &lt;&lt; &quot;\\n&quot;; std::cout &lt;&lt; &quot;a &amp; 00000001:&quot; &lt;&lt; getBits( (char)( a &amp; index ) ) &lt;&lt; &quot;\\n&quot;; std::cout &lt;&lt; &quot;a &amp; 11111110:&quot; &lt;&lt; getBits( (char)( a &amp; (~index)) ) &lt;&lt; &quot;\\n&quot;; std::cout &lt;&lt; &quot;a | 00000001:&quot; &lt;&lt; getBits( (char)( a | index ) ) &lt;&lt; &quot;\\n&quot;; std::cout &lt;&lt; &quot;a ^ a :&quot; &lt;&lt; getBits( (char)( a ^ a ) ) &lt;&lt; &quot;\\n&quot;; std::cout &lt;&lt; &quot;a &amp;-a :&quot; &lt;&lt; getBits( (char)( a &amp;-a ) ) &lt;&lt; &quot;\\n&quot;; return 0;}","raw":null,"content":null,"categories":[{"name":"Programming","slug":"Programming","permalink":"http://sheng09.github.io/categories/Programming/"}],"tags":[{"name":"bit","slug":"bit","permalink":"http://sheng09.github.io/tags/bit/"},{"name":"Programming","slug":"Programming","permalink":"http://sheng09.github.io/tags/Programming/"}]},{"title":"PML边界-一阶声波方程有线差分模拟在二维下的实现","slug":"fd-2d-PML","date":"2016-09-16T17:54:33.000Z","updated":"2016-10-10T01:45:25.463Z","comments":true,"path":"2016/09/17/fd-2d-PML/","link":"","permalink":"http://sheng09.github.io/2016/09/17/fd-2d-PML/","excerpt":"&#x672C;&#x6587;&#x4ECB;&#x7ECD;&#x4E86;&#x4E8C;&#x7EF4;&#x4E0B;&#x58F0;&#x6CE2;&#x65B9;&#x7A0B;PML&#x5438;&#x6536;&#x8FB9;&#x754C;&#x7684;&#x6709;&#x9650;&#x5DEE;&#x5206;&#x5B9E;&#x73B0;&#x3002;","text":"&#x672C;&#x6587;&#x4ECB;&#x7ECD;&#x4E86;&#x4E8C;&#x7EF4;&#x4E0B;&#x58F0;&#x6CE2;&#x65B9;&#x7A0B;PML&#x5438;&#x6536;&#x8FB9;&#x754C;&#x7684;&#x6709;&#x9650;&#x5DEE;&#x5206;&#x5B9E;&#x73B0;&#x3002; PML&#x533A;&#x57DF;&#x63A7;&#x5236;&#x65B9;&#x7A0B; $d(x)$&#x7684;&#x9009;&#x62E9; &#x4EA4;&#x9519;&#x7F51;&#x683C; &#x4E8C;&#x9636;&#x7CBE;&#x5EA6;&#x6709;&#x73B0;&#x5DEE;&#x5206;&#x5B9E;&#x73B0; $q_x$&#x9012;&#x63A8; $q_z$&#x9012;&#x63A8; $p_x$&#x9012;&#x63A8; $p_z$&#x9012;&#x63A8; &#x9012;&#x63A8;&#x6C47;&#x603B; Implementation PML&#x533A;&#x57DF;&#x63A7;&#x5236;&#x65B9;&#x7A0B;&#x4E8C;&#x7EF4;&#x4E0B;&#x4E0D;&#x8003;&#x8651;&#x8F93;&#x51FA;&#x6E90;&#xFF0C;&#x4E8C;&#x9636;&#x58F0;&#x6CE2;&#x65B9;&#x7A0B;&#x4E3A;&#xFF1A; \\begin{eqnarray} \\frac{\\partial^2 p}{\\partial x^2} + \\frac{\\partial^2 p}{\\partial z^2} & = & \\frac{1}{v^2} \\frac{\\partial^2 p}{\\partial t^2} \\\\ \\end{eqnarray}&#x5BF9;&#x5E94;&#x7684;&#x4E00;&#x9636;&#x538B;&#x5F3A;-&#x901F;&#x5EA6;&#x65B9;&#x7A0B;&#x53EF;&#x4EE5;&#x5199;&#x6210;&#xFF1A; \\begin{eqnarray} \\begin{cases} p & = & p_x + p_z\\\\ \\frac{\\partial p_x}{\\partial t} & = & -\\rho v^2 \\frac{\\partial q_x}{\\partial x}\\\\ \\frac{\\partial p_z}{\\partial_t} & = & -\\rho v^2 \\frac{\\partial q_z}{\\partial z}\\\\ \\frac{\\partial q_x}{\\partial t} & = & - \\frac{1}{\\rho} \\frac{\\partial (p_x+p_z)}{\\partial x}\\\\ \\frac{\\partial q_z}{\\partial t} & = & - \\frac{1}{\\rho} \\frac{\\partial (p_x+p_z)}{\\partial z} \\end{cases} \\end{eqnarray}&#x9488;&#x5BF9;PML&#x533A;&#x57DF;&#xFF1A; \\begin{eqnarray} \\begin{cases} p & = & p_x + p_z \\\\ \\frac{\\partial p_x}{\\partial t} + d(x)p_x & = & -\\rho v^2 \\frac{\\partial q_x}{\\partial x}\\\\ \\frac{\\partial p_z}{\\partial_t} + d(z)p_z & = & -\\rho v^2 \\frac{\\partial q_z}{\\partial z}\\\\ \\frac{\\partial q_x}{\\partial t} + d(x)q_x & = & - \\frac{1}{\\rho} \\frac{\\partial (p_x+p_z)}{\\partial x}\\\\ \\frac{\\partial q_y}{\\partial t} + d(z)q_z & = & - \\frac{1}{\\rho} \\frac{\\partial (p_x+p_z)}{\\partial z} \\end{cases} \\end{eqnarray}$d(x)$&#x7684;&#x9009;&#x62E9; d(x) = log(\\frac{1}{R}) \\frac{3v}{2\\delta}(\\frac{x}{\\delta})^2$R$&#x63A8;&#x8350;&#x53D6;0.001&#xFF0C;$\\delta$&#x4E3A;PML&#x5C42;&#x539A;[Collino and Tsogka 2001]&#x3002; &#x4EA4;&#x9519;&#x7F51;&#x683C;&#x6784;&#x5EFA;&#x4E8C;&#x7EF4;&#x4E0B;&#x7684;&#x4EA4;&#x9519;&#x7F51;&#x683C;&#x3002; &#x5BF9;&#x4E8E;&#x4EA4;&#x9519;&#x8282;&#x70B9;&#xFF0C;$p$,$q_x$,$q_z$&#x9012;&#x63A8;&#x5173;&#x7CFB;&#x5982;&#x4E0B;&#x56FE;&#xFF1A; &#x4E8C;&#x9636;&#x7CBE;&#x5EA6;&#x6709;&#x73B0;&#x5DEE;&#x5206;&#x5B9E;&#x73B0; \\begin{eqnarray} \\begin{cases} p & = & p_x + p_z \\\\ \\frac{\\partial p_x}{\\partial t} + d(x)p_x & = & -\\rho v^2 \\frac{\\partial q_x}{\\partial x}\\\\ \\frac{\\partial p_z}{\\partial_t} + d(z)p_z & = & -\\rho v^2 \\frac{\\partial q_z}{\\partial z}\\\\ \\frac{\\partial q_x}{\\partial t} + d(x)q_x & = & - \\frac{1}{\\rho} \\frac{\\partial (p_x+p_z)}{\\partial x}\\\\ \\frac{\\partial q_y}{\\partial t} + d(z)q_z & = & - \\frac{1}{\\rho} \\frac{\\partial (p_x+p_z)}{\\partial z} \\end{cases} \\Rightarrow \\begin{cases} p & = & p_x + p_z \\\\ D_t p_x + d(x)p_x & = & -\\rho v^2 D_x q_x \\\\ D_t p_z + d(z)p_z & = & -\\rho v^2 D_z q_z \\\\ D_t q_x + d(x)q_x & = & - \\frac{1}{\\rho} D_x (p_x+p_z)\\\\ D_t q_z + d(z)q_z & = & - \\frac{1}{\\rho} D_z (p_x+p_z) \\end{cases} \\end{eqnarray}$q_x$&#x9012;&#x63A8; \\begin{eqnarray} D_t q_x(A) + d(A) q_x(A) & = & - \\frac{1}{\\rho} D_x p(A) \\end{eqnarray} \\begin{eqnarray} \\frac{1}{\\Delta t}[q_x(D) - q_x(C)] + \\frac{d(A)}{2} [q_x(D) + q_x(C)] & = & - \\frac{1}{\\rho \\Delta x} [p(F) - p(E)] \\end{eqnarray} \\begin{eqnarray} \\begin{aligned} \\frac{1}{\\Delta t}[q_x(x_{i+1/2},z_{j},t_{m+1} ) - & q_x(x_{i+1/2},z_j,t_{m})] + \\\\ \\frac{d(x_{i+1/2},z_j,t_{m+1/2})}{2} [q_x(x_{i+1/2},z_{j},t_{m+1} ) + & q_x(x_{i+1/2},z_j,t_{m})] \\\\ = - \\frac{1}{\\rho \\Delta x} [ p(&x_{i+1},z_j,t_{m+1/2}) - p(x_{i},z_j,t_{m+1/2}) ] \\end{aligned} \\end{eqnarray} \\begin{eqnarray} \\begin{aligned} q_x(x_{i+1/2},z_{j},t_{m+1} ) = & c_{qx1} q_x(x_{i+1/2},z_j,t_{m}) \\\\ &+ c_{qx2} [ p(x_{i+1},z_j,t_{m+1/2}) - p(x_{i},z_j,t_{m+1/2}) ] \\\\ \\end{aligned} \\end{eqnarray} \\begin{eqnarray} \\begin{aligned} \\begin{cases} c_{qx1} = \\frac{ 2- \\Delta t d(x_{i+1/2},z_j,t_{m+1/2}) }{2 + \\Delta t d(x_{i+1/2},z_j,t_{m+1/2}) } \\\\ c_{qx2} = -\\frac{2 \\Delta t}{\\rho \\Delta x [2 + \\Delta t d(x_{i+1/2},z_j,t_{m+1/2})]} \\end{cases} \\end{aligned} \\end{eqnarray}$q_z$&#x9012;&#x63A8; \\begin{eqnarray} D_t q_z(B) + d(B)q_z(B) & = & - \\frac{1}{\\rho} D_z p(B) \\end{eqnarray} \\begin{eqnarray} \\frac{1}{\\Delta t}[q_z(J) - q_z(H)] + \\frac{d(B)}{2}[q_z(J) + q_z(H)] & = & - \\frac{1}{\\rho \\Delta z} [p(G) - p(E)] \\end{eqnarray} \\begin{eqnarray} \\begin{aligned} \\frac{1}{\\Delta t}[q_z(x_{i},z_{j+1/2},t_{m+1} ) - & q_z(x_{i},z_{j+1/2},t_{m})]\\\\ + \\frac{d(x_{i},z_{j+1/2},t_{m+1/2} )}{2}[q_z(x_{i},z_{j+1/2},t_{m+1} ) + & q_z(x_{i},z_{j+1/2},t_{m})] \\\\ = - \\frac{1}{\\rho \\Delta z} [ p(&x_i,z_{j+1},t_{m+1/2}) - p(x_{i},z_j,t_{m+1/2}) ] \\end{aligned} \\end{eqnarray} \\begin{eqnarray} \\begin{aligned} q_z(x_{i},z_{j+1/2},t_{m+1} ) = & c_{qz1} q_z(x_{i},z_{j+1/2},t_{m}) \\\\ &+c_{qz2} [ p(x_i,z_{j+1},t_{m+1/2}) - p(x_{i},z_j,t_{m+1/2}) ] \\end{aligned} \\end{eqnarray} \\begin{eqnarray} \\begin{aligned} \\begin{cases} c_{qz1} = \\frac{ 2- \\Delta t d(x_{i},z_{j+1/2},t_{m+1/2}) }{2 + \\Delta t d(x_{i},z_{j+1/2},t_{m+1/2}) } \\\\ c_{qz2} = -\\frac{2 \\Delta t}{\\rho \\Delta z [2 + \\Delta t d(x_{i},z_{j+1/2},t_{m+1/2})]} \\end{cases} \\end{aligned} \\end{eqnarray}$p_x$&#x9012;&#x63A8; \\begin{eqnarray} D_t p_x + d(x)p_x & = & -\\rho v^2 D_x q_x \\end{eqnarray} \\begin{eqnarray} \\begin{aligned} \\frac{1}{\\Delta t} [p_x(x_i,z_j,t_{m+1/2}) - & p_x(x_i,z_j,t_{m-1/2})] \\\\ +\\frac{d(x_i,z_j,t_m)}{2} [p_x(x_i,z_j,t_{m+1/2}) + & p_x(x_i,z_j,t_{m-1/2})] \\\\ = - &\\frac{\\rho v^2}{\\Delta x} [ q_x(x_{i+1/2},z_j,t_m) - q_x(x_{i-1/2,z_j,t_m}) ]\\\\ \\end{aligned} \\end{eqnarray} \\begin{eqnarray} \\begin{aligned} p_x(x_i,z_j,t_{m+1/2}) = & c_{px1} p_x(x_i,z_j,t_{m-1/2})\\\\ & +c_{px2} [ q_x(x_{i+1/2},z_j,t_m) - q_x(x_{i-1/2,z_j,t_m}) ]\\\\ \\end{aligned} \\end{eqnarray} \\begin{eqnarray} \\begin{aligned} \\begin{cases} c_{px1} = \\frac{ 2- \\Delta t d(x_i,z_j,t_m) } {2 + \\Delta t d(x_i,z_j,t_m) } \\\\ c_{px2} = -\\frac{2 \\rho v^2 \\Delta t}{\\Delta x [2 + \\Delta t d(x_i,z_j,t_m)]} \\end{cases} \\end{aligned} \\end{eqnarray}$p_z$&#x9012;&#x63A8; \\begin{eqnarray} D_t p_z + d(z)p_z & = & -\\rho v^2 D_z q_z \\end{eqnarray} \\begin{eqnarray} \\begin{aligned} \\frac{1}{\\Delta t} [p_z(x_i,z_j,t_{m+1/2}) - & p_z(x_i,z_j,t_{m-1/2})] \\\\ \\frac{d(x_i,z_j,t_m)}{2}[p_z(x_i,z_j,t_{m+1/2}) + & p_z(x_i,z_j,t_{m-1/2})] \\\\ = -&\\frac{\\rho v^2}{\\Delta x} [ q_z(x_i,z_{j+1/2},t_m) - q_z(x_i,z_{j-1/2},t_m) ]\\\\ \\end{aligned} \\end{eqnarray} \\begin{eqnarray} \\begin{aligned} p_z(x_i,z_j,t_{m+1/2}) = & c_{pz1} p_z(x_i,z_j,t_{m-1/2}) \\\\ & +c_{pz2} [ q_z(x_i,z_{j+1/2},t_m) - q_z(x_i,z_{j-1/2},t_m) ]\\\\ \\end{aligned} \\end{eqnarray} \\begin{eqnarray} \\begin{aligned} \\begin{cases} c_{pz1} = \\frac{ 2- \\Delta t d(x_i,z_j,t_m) } {2 + \\Delta t d(x_i,z_j,t_m) } \\\\ c_{pz2} = -\\frac{2 \\rho v^2 \\Delta t}{\\Delta z [2 + \\Delta t d(x_i,z_j,t_m)]} \\end{cases} \\end{aligned} \\end{eqnarray}&#x9012;&#x63A8;&#x6C47;&#x603B; \\begin{eqnarray} \\begin{aligned} \\begin{cases} q_x(x_{i+1/2},z_{j},t_{m+1} ) & = & c_{qx1} q_x(x_{i+1/2},z_j,t_{m}) \\\\ &&+ c_{qx2} [ p(x_{i+1},z_j,t_{m+1/2}) - p(x_{i},z_j,t_{m+1/2}) ] \\\\ q_z(x_{i},z_{j+1/2},t_{m+1} )& = & c_{qz1} q_z(x_{i},z_{j+1/2},t_{m}) \\\\ &&+c_{qz2} [ p(x_i,z_{j+1},t_{m+1/2}) - p(x_{i},z_j,t_{m+1/2}) ] \\\\ p_x(x_i,z_j,t_{m+1/2}) & = & c_{px1} p_x(x_i,z_j,t_{m-1/2})\\\\ &&+c_{px2} [ q_x(x_{i+1/2},z_j,t_m) - q_x(x_{i-1/2,z_j,t_m}) ]\\\\ p_z(x_i,z_j,t_{m+1/2}) & = & c_{pz1} p_z(x_i,z_j,t_{m-1/2}) \\\\ &&+c_{pz2} [ q_z(x_i,z_{j+1/2},t_m) - q_z(x_i,z_{j-1/2},t_m) ]\\\\ \\end{cases} \\end{aligned} \\end{eqnarray} \\begin{eqnarray} \\begin{aligned} \\begin{cases} c_{qx1} &= & \\frac{ 2- \\Delta t d(x_{i+1/2},z_j,t_{m+1/2}) }{2 + \\Delta t d(x_{i+1/2},z_j,t_{m+1/2}) } \\\\ c_{qx2} &= & -\\frac{2 \\Delta t}{\\rho \\Delta x [2 + \\Delta t d(x_{i+1/2},z_j,t_{m+1/2})]}\\\\ c_{qz1} &= & \\frac{ 2- \\Delta t d(x_{i},z_{j+1/2},t_{m+1/2}) }{2 + \\Delta t d(x_{i},z_{j+1/2},t_{m+1/2}) } \\\\ c_{qz2} &= & -\\frac{2 \\Delta t}{\\rho \\Delta z [2 + \\Delta t d(x_{i},z_{j+1/2},t_{m+1/2})]}\\\\ c_{px1} &= & \\frac{ 2- \\Delta t d(x_i,z_j,t_m) } {2 + \\Delta t d(x_i,z_j,t_m) } \\\\ c_{px2} &= & -\\frac{2 \\rho v^2 \\Delta t}{\\Delta x [2 + \\Delta t d(x_i,z_j,t_m)]}\\\\ c_{pz1} &= & \\frac{ 2- \\Delta t d(x_i,z_j,t_m) } {2 + \\Delta t d(x_i,z_j,t_m) } \\\\ c_{pz2} &= & -\\frac{2 \\rho v^2 \\Delta t}{\\Delta z [2 + \\Delta t d(x_i,z_j,t_m)]}\\\\ \\end{cases} \\end{aligned} \\end{eqnarray}&#x6545;&#x800C;&#xFF0C;&#x6CE2;&#x573A;&#x9012;&#x63A8;&#x5173;&#x7CFB;&#x4E3A;&#xFF1A; \\begin{equation} \\begin{cases} q_x(t=0)\\\\ q_z(t=0)\\\\ p(t=\\Delta /2) \\end{cases} \\Rightarrow \\begin{cases} \\color{red}{q_x(t=\\Delta t)}\\\\ \\color{red}{q_z(t=\\Delta t)}\\\\ \\end{cases} \\\\ \\Rightarrow \\begin{cases} \\color{red}{q_x(t=\\Delta t)}\\\\ \\color{red}{q_z(t=\\Delta t)}\\\\ p(t=\\Delta /2) \\end{cases} \\Rightarrow \\color{blue}{p(t=3\\Delta /2)} \\\\ \\Rightarrow \\begin{cases} \\color{red}{q_x(t=\\Delta t)}\\\\ \\color{red}{q_z(t=\\Delta t)}\\\\ \\color{blue}{p(t=3\\Delta /2)} \\end{cases} \\Rightarrow \\begin{cases} \\color{green}{q_x(t=2\\Delta t)}\\\\ \\color{green}{q_z(t=2\\Delta t)}\\\\ \\end{cases} \\\\ \\Rightarrow \\begin{cases} \\color{green}{q_x(t=2\\Delta t)}\\\\ \\color{green}{q_z(t=2\\Delta t)}\\\\ \\color{blue}{p(t=3\\Delta /2)} \\end{cases} \\Rightarrow ............ \\\\ \\\\ ... ... \\end{equation}Implementation123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384%Matlab close all;clear;clc; %Parameters n_pml = 10; nx = 320; nz = 320; dx = 5.0; dz = 5.0; x = (-n_pml:nx-1-n_pml) *dx; %(1:11) and (310:320) are PML zone z = (-n_pml:nx-1-n_pml) *dz; dt = 1.0e-3; nt = 2000; t = (0:nt-1)*dt; v = zeros(nx,nz) + 800.0; rho = 1000.0; R = 0.001; delta = n_pml * dx; d_const = (3.0/2.0/delta)*log(1.0/R) /(delta* delta); %d(x) and d(z) d_pxLeft = ( (-n_pml:0)*dx ).^2 * d_const; d_pxRight = ( (0:n_pml)*dx ).^2 * d_const; d_qxLeft = ( (-n_pml:-1)*dx +dx/2 ).^2 * d_const; d_qxRight = ( (1:n_pml)*dx -dx/2 ).^2 * d_const; d_px = [d_pxLeft zeros(1,nx-2*n_pml-2) d_pxRight]; d_qx = [d_qxLeft zeros(1,nx-2*n_pml-1) d_qxRight]; d_pzLeft = ( (-n_pml:0)*dz ) .^2 * d_const; d_pzRight = ( (0:n_pml)*dz ) .^2 * d_const; d_qzLeft = ( (-n_pml:-1)*dz +dz/2 ) .^2 * d_const; d_qzRight = ( (1:n_pml)*dz -dz/2 ) .^2 * d_const; d_pz = [d_pzLeft zeros(1,nx-2*n_pml-2) d_pzRight]; d_qz = [d_qzLeft zeros(1,nx-2*n_pml-1) d_qzRight]; p = zeros(nx,nz); p_x = zeros(nx,nz); p_z = zeros(nx,nz); q_x = zeros(nx-1,nz); q_z = zeros(nx,nz-1); $Source src = [ 2.0*mexihat(-5,5,200) zeros(1,nt)]; ix_src = 161; iz_src = 161; %Main loop figure for it = 1:nt % % 1 2 3 4 5 % --q---q---q---q---q--... % p---p---p---p---p---p... % 1 2 3 4 5 6 % p_x(ix_src, iz_src) = p_x(ix_src,iz_src) + src(it)/2.0; p_z(ix_src, iz_src) = p_z(ix_src,iz_src) + src(it)/2.0; p( ix_src, iz_src) = p( ix_src,iz_src) + src(it)/2.0; %q_x for ix = 1:nx-1 for iz = 1:nz deno = (2.0 + dt * d_qx(ix)*v(ix,iz)); c_qx1 = (2.0 - dt * d_qx(ix)*v(ix,iz) ) / deno; c_qx2 = -2.0*dt / rho / dx / deno; q_x(ix,iz) = c_qx1 * q_x(ix,iz) + c_qx2 *( p(ix+1,iz) - p(ix,iz) ); end end %q_z for iz = 1:nz-1 for ix = 1:nx deno = (2.0 + dt * d_qz(iz)*v(ix,iz) ); c_qz1 = (2.0 - dt * d_qz(iz)*v(ix,iz) )/ deno; c_qz2 = -2.0*dt/rho/ dz / deno; q_z(ix,iz) = c_qz1 * q_z(ix,iz) + c_qz2 *( p(ix,iz+1) - p(ix,iz) ); end end %p_x for ix = 2:nx-1 for iz = 2:nz-1 deno = (2.0 + dt * d_px(ix)*v(ix,iz) ); c_px1 = (2.0 - dt * d_px(ix)*v(ix,iz) ) / deno; c_px2 = -2.0*rho*v2(ix,iz)*dt/dx / deno; deno = (2.0 + dt * d_pz(iz)*v(ix,iz) ); c_pz1 = (2.0 - dt * d_pz(iz)*v(ix,iz) ) / deno; c_pz2 = -2.0*rho*v2(ix,iz)*dt/dz /deno; p_x(ix,iz) = c_px1 * p_x(ix,iz) + c_px2 * ( q_x(ix,iz) - q_x(ix- 1,iz) ); p_z(ix,iz) = c_pz1 * p_z(ix,iz) + c_pz2 * ( q_z(ix,iz) - q_z(ix,iz- 1) ); p(ix,iz) = p_x(ix,iz) + p_z(ix,iz); end end pmax = max(max( abs(p) )); imagesc(x, z, p/pmax ); colormap(&apos;gray&apos;); axis square; pause(0.001); end","raw":null,"content":null,"categories":[{"name":"PDE","slug":"PDE","permalink":"http://sheng09.github.io/categories/PDE/"}],"tags":[{"name":"FD","slug":"FD","permalink":"http://sheng09.github.io/tags/FD/"},{"name":"modeling","slug":"modeling","permalink":"http://sheng09.github.io/tags/modeling/"},{"name":"wave equation","slug":"wave-equation","permalink":"http://sheng09.github.io/tags/wave-equation/"}]},{"title":"一阶声波方程有线差分模拟在二维下的实现","slug":"fd-2d","date":"2016-09-14T17:54:33.000Z","updated":"2016-10-10T01:45:20.432Z","comments":true,"path":"2016/09/15/fd-2d/","link":"","permalink":"http://sheng09.github.io/2016/09/15/fd-2d/","excerpt":"&#x672C;&#x6587;&#x4ECB;&#x7ECD;&#x4E86;&#x4E00;&#x9636;&#x58F0;&#x6CE2;&#x65B9;&#x7A0B;&#x5728;&#x4E8C;&#x7EF4;&#x4E0B;&#x7684;&#x6709;&#x9650;&#x5DEE;&#x5206;&#x6A21;&#x62DF;&#x3002;","text":"&#x672C;&#x6587;&#x4ECB;&#x7ECD;&#x4E86;&#x4E00;&#x9636;&#x58F0;&#x6CE2;&#x65B9;&#x7A0B;&#x5728;&#x4E8C;&#x7EF4;&#x4E0B;&#x7684;&#x6709;&#x9650;&#x5DEE;&#x5206;&#x6A21;&#x62DF;&#x3002; &#x63A7;&#x5236;&#x65B9;&#x7A0B; &#x4EA4;&#x9519;&#x7F51;&#x683C; &#x4E8C;&#x9636;&#x7CBE;&#x5EA6;&#x6709;&#x73B0;&#x5DEE;&#x5206;&#x5B9E;&#x73B0; $q_x$&#x9012;&#x63A8; $q_z$&#x9012;&#x63A8; $p_x$&#x9012;&#x63A8; $p_z$&#x9012;&#x63A8; &#x9012;&#x63A8;&#x6C47;&#x603B; Implementation &#x63A7;&#x5236;&#x65B9;&#x7A0B;&#x4E8C;&#x7EF4;&#x4E0B;&#x4E0D;&#x8003;&#x8651;&#x8F93;&#x51FA;&#x6E90;&#xFF0C;&#x4E8C;&#x9636;&#x58F0;&#x6CE2;&#x65B9;&#x7A0B;&#x4E3A;&#xFF1A; \\begin{eqnarray} \\frac{\\partial^2 p}{\\partial x^2} + \\frac{\\partial^2 p}{\\partial z^2} & = & \\frac{1}{v^2} \\frac{\\partial^2 p}{\\partial t^2} \\\\ \\end{eqnarray}&#x5BF9;&#x5E94;&#x7684;&#x4E00;&#x9636;&#x538B;&#x5F3A;-&#x901F;&#x5EA6;&#x65B9;&#x7A0B;&#x53EF;&#x4EE5;&#x5199;&#x6210;&#xFF1A; \\begin{eqnarray} \\begin{cases} \\frac{\\partial p}{\\partial t} & = & -\\rho v^2( \\frac{\\partial q_x}{\\partial x} + \\frac{\\partial q_z}{\\partial z} )\\\\ \\frac{\\partial q_x}{\\partial t} & = & - \\frac{1}{\\rho} \\frac{\\partial p}{\\partial x}\\\\ \\frac{\\partial q_z}{\\partial t} & = & - \\frac{1}{\\rho} \\frac{\\partial p}{\\partial z} \\end{cases} \\end{eqnarray}&#x5C06;&#x538B;&#x5F3A;$p$&#x5199;&#x4F5C;$p_x+p_y$&#xFF0C;&#x53EF;&#x4EE5;&#x83B7;&#x5F97;&#xFF1A; \\begin{eqnarray} \\begin{cases} p & = & p_x + p_z\\\\ \\frac{\\partial p_x}{\\partial t} & = & -\\rho v^2 \\frac{\\partial q_x}{\\partial x}\\\\ \\frac{\\partial p_z}{\\partial_t} & = & -\\rho v^2 \\frac{\\partial q_z}{\\partial z}\\\\ \\frac{\\partial q_x}{\\partial t} & = & - \\frac{1}{\\rho} \\frac{\\partial (p_x+p_z)}{\\partial x}\\\\ \\frac{\\partial q_z}{\\partial t} & = & - \\frac{1}{\\rho} \\frac{\\partial (p_x+p_z)}{\\partial z} \\end{cases} \\end{eqnarray}&#x4EA4;&#x9519;&#x7F51;&#x683C;&#x6784;&#x5EFA;&#x4E8C;&#x7EF4;&#x4E0B;&#x7684;&#x4EA4;&#x9519;&#x7F51;&#x683C;&#x3002; &#x5BF9;&#x4E8E;&#x4EA4;&#x9519;&#x8282;&#x70B9;&#xFF0C;$p$,$q_x$,$q_z$&#x9012;&#x63A8;&#x5173;&#x7CFB;&#x5982;&#x4E0B;&#x56FE;&#xFF1A; &#x4E8C;&#x9636;&#x7CBE;&#x5EA6;&#x6709;&#x73B0;&#x5DEE;&#x5206;&#x5B9E;&#x73B0; \\begin{eqnarray} \\begin{cases} p & = & p_x + p_z\\\\ \\frac{\\partial p_x}{\\partial t} & = & -\\rho v^2 \\frac{\\partial q_x}{\\partial x}\\\\ \\frac{\\partial p_z}{\\partial_t} & = & -\\rho v^2 \\frac{\\partial q_z}{\\partial z}\\\\ \\frac{\\partial q_x}{\\partial t} & = & - \\frac{1}{\\rho} \\frac{\\partial (p_x+p_z)}{\\partial x}\\\\ \\frac{\\partial q_z}{\\partial t} & = & - \\frac{1}{\\rho} \\frac{\\partial (p_x+p_z)}{\\partial z} \\end{cases} \\Rightarrow \\begin{cases} p & = & p_x + p_z \\\\ D_t p_x & = & -\\rho v^2 D_x q_x \\\\ D_t p_z & = & -\\rho v^2 D_z q_z \\\\ D_t q_x & = & - \\frac{1}{\\rho} D_x (p_x+p_z)\\\\ D_t q_z & = & - \\frac{1}{\\rho} D_z (p_x+p_z) \\end{cases} \\end{eqnarray}$q_x$&#x9012;&#x63A8; \\begin{eqnarray} D_t q_x(A) & = & - \\frac{1}{\\rho} D_x p(A) \\end{eqnarray} \\begin{eqnarray} \\frac{1}{\\Delta t}[q_x(D) - q_x(C)] & = & - \\frac{1}{\\rho \\Delta x} [p(F) - p(E)] \\end{eqnarray} \\begin{eqnarray} \\begin{aligned} \\frac{1}{\\Delta t}[q_x(x_{i+1/2},z_{j},t_{m+1} ) - & q_x(x_{i+1/2},z_j,t_{m})] \\\\& = - \\frac{1}{\\rho \\Delta x} [ p(x_{i+1},z_j,t_{m+1/2}) - p(x_{i},z_j,t_{m+1/2}) ] \\end{aligned} \\end{eqnarray} \\begin{eqnarray} \\begin{aligned} q_x(x_{i+1/2},z_{j},t_{m+1} ) = & q_x(x_{i+1/2},z_j,t_{m}) \\\\ &- \\frac{\\Delta t}{\\rho \\Delta x} [ p(x_{i+1},z_j,t_{m+1/2}) - p(x_{i},z_j,t_{m+1/2}) ] \\end{aligned} \\end{eqnarray}$q_z$&#x9012;&#x63A8; \\begin{eqnarray} D_t q_z(B) & = & - \\frac{1}{\\rho} D_z p(B) \\end{eqnarray} \\begin{eqnarray} \\frac{1}{\\Delta t}[q_z(J) - q_z(H)] & = & - \\frac{1}{\\rho \\Delta z} [p(G) - p(E)] \\end{eqnarray} \\begin{eqnarray} \\begin{aligned} \\frac{1}{\\Delta t}[q_z(x_{i},z_{j+1/2},t_{m+1} ) - & q_z(x_{i},z_{j+1/2},t_{m})] \\\\& = - \\frac{1}{\\rho \\Delta z} [ p(x_i,z_{j+1},t_{m+1/2}) - p(x_{i},z_j,t_{m+1/2}) ] \\end{aligned} \\end{eqnarray} \\begin{eqnarray} \\begin{aligned} q_z(x_{i},z_{j+1/2},t_{m+1} ) = & q_z(x_{i},z_{j+1/2},t_{m}) \\\\ &- \\frac{\\Delta t}{\\rho \\Delta z} [ p(x_i,z_{j+1},t_{m+1/2}) - p(x_{i},z_j,t_{m+1/2}) ] \\end{aligned} \\end{eqnarray}$p_x$&#x9012;&#x63A8; \\begin{eqnarray} D_t p_x & = & -\\rho v^2 D_x q_x \\end{eqnarray} \\begin{eqnarray} \\begin{aligned} \\frac{1}{\\Delta t} [p_x(x_i,z_j,t_{m+1/2}) - & p_x(x_i,z_j,t_{m-1/2})] \\\\ & = -\\frac{\\rho v^2}{\\Delta x} [ q_x(x_{i+1/2},z_j,t_m) - q_x(x_{i-1/2,z_j,t_m}) ]\\\\ \\end{aligned} \\end{eqnarray} \\begin{eqnarray} \\begin{aligned} p_x(x_i,z_j,t_{m+1/2}) = & p_x(x_i,z_j,t_{m-1/2})\\\\ & -\\frac{\\rho v^2\\Delta t}{\\Delta x} [ q_x(x_{i+1/2},z_j,t_m) - q_x(x_{i-1/2,z_j,t_m}) ]\\\\ \\end{aligned} \\end{eqnarray}$p_z$&#x9012;&#x63A8; \\begin{eqnarray} D_t p_z & = & -\\rho v^2 D_z q_z \\end{eqnarray} \\begin{eqnarray} \\begin{aligned} \\frac{1}{\\Delta t} [p_z(x_i,z_j,t_{m+1/2}) - & p_z(x_i,z_j,t_{m-1/2})] \\\\ & = -\\frac{\\rho v^2}{\\Delta z} [ q_z(x_i,z_{j+1/2},t_m) - q_z(x_i,z_{j-1/2},t_m) ]\\\\ \\end{aligned} \\end{eqnarray} \\begin{eqnarray} \\begin{aligned} p_z(x_i,z_j,t_{m+1/2}) = & p_z(x_i,z_j,t_{m-1/2}) \\\\ & -\\frac{\\rho v^2\\Delta t}{\\Delta z} [ q_z(x_i,z_{j+1/2},t_m) - q_z(x_i,z_{j-1/2},t_m) ]\\\\ \\end{aligned} \\end{eqnarray}&#x9012;&#x63A8;&#x6C47;&#x603B; \\begin{eqnarray} \\begin{aligned} \\begin{cases} q_x(x_{i+1/2},z_{j},t_{m+1} ) = & q_x(x_{i+1/2},z_j,t_{m}) \\\\ &- \\frac{\\Delta t}{\\rho \\Delta x} [ p(x_{i+1},z_j,t_{m+1/2}) - p(x_{i},z_j,t_{m+1/2}) ] \\\\ q_z(x_{i},z_{j+1/2},t_{m+1} ) = & q_z(x_{i},z_{j+1/2},t_{m}) \\\\ &- \\frac{\\Delta t}{\\rho \\Delta z} [ p(x_i,z_{j+1},t_{m+1/2}) - p(x_{i},z_j,t_{m+1/2}) ] \\\\ p_x(x_i,z_j,t_{m+1/2}) = & p_x(x_i,z_j,t_{m-1/2})\\\\ &-\\frac{\\rho v^2\\Delta t}{\\Delta x} [ q_x(x_{i+1/2},z_j,t_m) - q_x(x_{i-1/2,z_j,t_m}) ] \\\\ p_z(x_i,z_j,t_{m+1/2}) = & p_z(x_i,z_j,t_{m-1/2}) \\\\ &-\\frac{\\rho v^2\\Delta t}{\\Delta z} [ q_z(x_i,z_{j+1/2},t_m) - q_z(x_i,z_{j-1/2},t_m) ] \\end{cases} \\end{aligned} \\end{eqnarray}&#x6545;&#x800C;&#xFF0C;&#x6CE2;&#x573A;&#x9012;&#x63A8;&#x5173;&#x7CFB;&#x4E3A;&#xFF1A; \\begin{equation} \\begin{cases} q_x(t=0)\\\\ q_z(t=0)\\\\ p(t=\\Delta /2) \\end{cases} \\Rightarrow \\begin{cases} \\color{red}{q_x(t=\\Delta t)}\\\\ \\color{red}{q_z(t=\\Delta t)}\\\\ \\end{cases} \\\\ \\Rightarrow \\begin{cases} \\color{red}{q_x(t=\\Delta t)}\\\\ \\color{red}{q_z(t=\\Delta t)}\\\\ p(t=\\Delta /2) \\end{cases} \\Rightarrow \\color{blue}{p(t=3\\Delta /2)} \\\\ \\Rightarrow \\begin{cases} \\color{red}{q_x(t=\\Delta t)}\\\\ \\color{red}{q_z(t=\\Delta t)}\\\\ \\color{blue}{p(t=3\\Delta /2)} \\end{cases} \\Rightarrow \\begin{cases} \\color{green}{q_x(t=2\\Delta t)}\\\\ \\color{green}{q_z(t=2\\Delta t)}\\\\ \\end{cases} \\\\ \\Rightarrow \\begin{cases} \\color{green}{q_x(t=2\\Delta t)}\\\\ \\color{green}{q_z(t=2\\Delta t)}\\\\ \\color{blue}{p(t=3\\Delta /2)} \\end{cases} \\Rightarrow ............ \\\\ \\\\ ... ... \\end{equation}Implementation 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677%Matlab close all; clear; clc; %Parameters nx = 300; nz = 300; dx = 5.0; dz = 5.0; x = (0:nx-1) *dx; z = (0:nz-1) *dz; dt = 1.0e-3; nt = 2000; t = (0:nt-1)*dt; v = zeros(300,300)+800.0;v(101:200,:) = 1500.0;v(201:300,:) = 2000.0; v2 = v.^2; rho = 1000.0; %Coefficients a_qx= dt/dx/rho; a_qz= dt/dz/rho; a_px= dt*rho/dx; a_pz= dt*rho/dz; %Initial condition p = zeros(nx,nz); p_x = zeros(nx, nz); p_z = zeros(nx, nz); q_x = zeros(nx-1,nz); q_z = zeros(nx,nz-1); %Receiver rec = zeros(nt,nx); trace=zeros(nt,9); trace(:,1) = -4; trace(:,2) = -3; trace(:,3) = -2; trace(:,4) = -1; trace(:,5) = 0; trace(:,6) = 1; trace(:,7) = 2; trace(:,8) = 3; trace(:,9) = 4; trace_fill = trace; %Source src = [ 2.0*mexihat(-5,5,200) zeros(1,nt)]; ix_src = 1; iz_src = 150; figure %Main loop for it = 1:nt % 1 2 3 4 5 % --q---q---q---q---q--... % p---p---p---p---p---p... % 1 2 3 4 5 6 p_x(ix_src, iz_src) = p_x(ix_src,iz_src) + src(it)/2.0; p_z(ix_src, iz_src) = p_z(ix_src,iz_src) + src(it)/2.0; p( ix_src, iz_src) = p( ix_src,iz_src) + src(it)/2.0; for ix = 1:nx-1 %q_x for iz = 1:nz q_x(ix,iz) = q_x(ix,iz) - a_qx *( p(ix+1,iz) - p(ix,iz) ); end end for iz = 1:nz-1 %q_z for ix = 1:nx q_z(ix,iz) = q_z(ix,iz) - a_qz *( p(ix,iz+1) - p(ix,iz) ); end end for ix = 2:nx-1 %p_x for iz = 2:nz-1 p_x(ix,iz) = p_x(ix,iz) - a_px *v2(ix,iz)*( q_x(ix,iz) - q_x(ix- 1,iz) ); p_z(ix,iz) = p_z(ix,iz) - a_pz *v2(ix,iz)*( q_z(ix,iz) - q_z(ix,iz- 1) ); p(ix,iz) = p_x(ix,iz) + p_z(ix,iz); end end %Free boundary at z = 0 p(1,:) = p(2,:); p_x(1,:) = p_x(2,:); p_z(1,:) = p_z(2,:); %Plot rec(it,:) = p(1,:); p_trace = 20.0* [p(1,30) p(1,60) p(1,90) p(1,120) p(1,149) p(1,180) p(1,210 ) p(1,240) p(1,270)]; trace(it,:) = trace(it,:) + p_trace; trace_fill(it,:) = trace_fill(it,:) + 0.5*(p_trace + abs(p_trace) ); pmax = max(max( abs(p) )); subplot(221),imagesc(x, z, p/pmax ); colormap(&apos;gray&apos;); axis square; w_max = max(max( abs(rec) )); subplot(122),imagesc(x,t,rec./w_max); colormap(&apos;gray&apos;); subplot(223),fill(t, trace_fill ,&apos;r&apos;); hold on; subplot(223),plot(t,trace,&apos;k&apos;); hold off; pause(0.001); end","raw":null,"content":null,"categories":[{"name":"PDE","slug":"PDE","permalink":"http://sheng09.github.io/categories/PDE/"}],"tags":[{"name":"FD","slug":"FD","permalink":"http://sheng09.github.io/tags/FD/"},{"name":"modeling","slug":"modeling","permalink":"http://sheng09.github.io/tags/modeling/"},{"name":"wave equation","slug":"wave-equation","permalink":"http://sheng09.github.io/tags/wave-equation/"}]},{"title":"PML边界-一阶声波方程有线差分模拟","slug":"fd-1d-PML","date":"2016-09-13T02:38:40.000Z","updated":"2016-10-10T01:45:22.036Z","comments":true,"path":"2016/09/13/fd-1d-PML/","link":"","permalink":"http://sheng09.github.io/2016/09/13/fd-1d-PML/","excerpt":"&#x672C;&#x6587;&#x4ECB;&#x7ECD;&#x4E86;&#x58F0;&#x6CE2;&#x65B9;&#x7A0B;&#x7684;PML&#x5438;&#x6536;&#x8FB9;&#x754C;&#x6709;&#x9650;&#x5DEE;&#x5206;&#x6A21;&#x62DF;&#xFF0C;&#x5E76;&#x5229;&#x7528;&#x4E00;&#x7EF4;&#x6A21;&#x578B;&#x4F8B;&#x5B50;&#x52A0;&#x4EE5;&#x8BF4;&#x660E;&#x3002;","text":"&#x672C;&#x6587;&#x4ECB;&#x7ECD;&#x4E86;&#x58F0;&#x6CE2;&#x65B9;&#x7A0B;&#x7684;PML&#x5438;&#x6536;&#x8FB9;&#x754C;&#x6709;&#x9650;&#x5DEE;&#x5206;&#x6A21;&#x62DF;&#xFF0C;&#x5E76;&#x5229;&#x7528;&#x4E00;&#x7EF4;&#x6A21;&#x578B;&#x4F8B;&#x5B50;&#x52A0;&#x4EE5;&#x8BF4;&#x660E;&#x3002; &#x63A7;&#x5236;&#x65B9;&#x7A0B; &#x4EA4;&#x9519;&#x7F51;&#x683C; $d(x)$&#x7684;&#x9009;&#x62E9; &#x5B9E;&#x73B0; &#x53C2;&#x8003;&#x6587;&#x732E; &#x63A7;&#x5236;&#x65B9;&#x7A0B;&#x4E00;&#x7EF4;&#x7A7A;&#x95F4;&#x4E0B;&#xFF0C;&#x4E00;&#x9636;&#x58F0;&#x6CE2;&#x65B9;&#x7A0B;&#x53EF;&#x4EE5;&#x5199;&#x6210;&#x4EE5;&#x4E0B;&#x5F62;&#x5F0F;&#xFF1A;$ $ \\begin{eqnarray} \\begin{cases} \\frac{\\partial p }{\\partial t} & = & -\\rho v^2\\frac{\\partial q}{\\partial x} \\\\ \\frac{\\partial q }{\\partial t} & = & -\\frac{1}{\\rho} \\frac{\\partial p}{\\partial x} \\end{cases} \\end{eqnarray}&#x9488;&#x5BF9;PML&#x533A;&#x57DF;&#xFF0C;&#x63A7;&#x5236;&#x65B9;&#x7A0B;&#x5982;&#x4E0B;&#xFF1A; \\begin{eqnarray} \\begin{cases} \\frac{\\partial p }{\\partial t}+d(x)p & = & -\\rho v^2\\frac{\\partial q}{\\partial x}\\\\ \\frac{\\partial q }{\\partial t}+d(x)q & = & -\\frac{1}{\\rho} \\frac{\\partial p}{\\partial x} \\end{cases} \\end{eqnarray} \\begin{eqnarray} \\begin{cases} D_t p_B + d(x_B) p_B & = & - \\rho v^2 D_x q_B \\\\ D_t q_A + d(x_A)q_A & = & -\\frac{1}{\\rho}D_x p_A \\end{cases} \\end{eqnarray}&#x4EA4;&#x9519;&#x7F51;&#x683C;&#x53C2;&#x8003;Virieux(1984, 1986)&#xFF0C;&#x6784;&#x5EFA;&#x4EA4;&#x9519;&#x7F51;&#x683C;&#x5982;&#x4E0B;&#xFF1A; &#x5728;&#x4E8C;&#x9636;&#x5DEE;&#x5206;&#x7CBE;&#x5EA6;&#x4E0B;&#xFF0C;&#x5BF9;&#x4E8E;&#xFF22;&#x70B9;&#x53EF;&#x4EE5;&#x63A8;&#x5BFC;&#xFF1A; \\begin{eqnarray} D_t p_B + d(x_B)p_B & = & - \\rho v^2 D_x q_B \\end{eqnarray} \\begin{eqnarray} \\begin{aligned} \\Rightarrow\\frac{1}{\\Delta t} [ p(x_i, t_{m+1/2}) - p(x_i, t_{m-1/2}) ] + & \\frac{d(x_i)}{2} [p(x_i, t_{m+1/2}) + p(x_i, t_{m-1/2}) ] \\\\ & = -\\frac{\\rho v^2}{\\Delta x} [ q(x_{i+1/2}, t_m) - q(x_{i-1/2}, t_m) ] \\end{aligned} \\end{eqnarray} \\begin{eqnarray} \\Rightarrow \\begin{cases} p(x_i, t_{m+1/2}) & = & c_1p(x_i, t_{m-1/2}) + c_2 [ q(x_{i+1/2}, t_m) - q(x_{i-1/2}, t_m) ]\\\\ c_1 & = & \\frac{2-\\Delta t d(x_i)}{2+\\Delta t d(x_i)} \\\\ c_2 & = & -\\frac{2\\rho v^2 \\Delta t}{\\Delta x [2+ \\Delta td(x_i)]} \\\\ \\end{cases} \\end{eqnarray}&#x540C;&#x6837;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x63A8;&#x5BFC;&#xFF21;&#x70B9;&#xFF1A; \\begin{eqnarray} D_t q_A + d(x_A)q_A & = & -\\frac{1}{\\rho}D_x p_A \\end{eqnarray} \\begin{eqnarray} \\begin{aligned} \\Rightarrow \\frac{1}{\\Delta t} [q(x_{i+1/2},t_{m+1})- q(x_{i+1/2},t_{m}) ]& + \\frac{d(x_{i+1/2})}{2} [q(x_{i+1/2},t_{m+1})+ q(x_{i+1/2},t_{m}) ]\\\\ &= -\\frac{1}{\\rho \\Delta x} [p(x_{i+1}, t_{m+1/2}) - p(x_i, t_{m+1/2})] \\end{aligned} \\end{eqnarray} \\begin{eqnarray} \\Rightarrow \\begin{cases} q(x_{i+1/2},t_{m+1}) & = & f_1q(x_{i+1/2},t_{m}) + f_2[p(x_{i+1}, t_{m+1/2}) - p(x_i, t_{m+1/2})] \\\\ f_1 & = & \\frac{2-\\Delta t d(x_{i+1/2})}{2+\\Delta t d(x_{i+1/2})}\\\\ f_2 & = & -\\frac{2\\Delta t}{\\rho \\Delta x[2+ \\Delta td(x_{i+1/2})]} \\end{cases} \\end{eqnarray}&#x6545;&#x800C;&#xFF0C;&#x6CE2;&#x573A;&#x9012;&#x63A8;&#x5173;&#x7CFB;&#x4E3A;&#xFF1A; \\begin{equation} \\begin{cases} q(t=0) \\\\ p(t=\\Delta t/2) \\end{cases} \\Rightarrow \\color{red}{q(t=\\Delta t)} \\\\\\Rightarrow \\begin{cases} \\color{red}{q(t=\\Delta t)} \\\\ p(t=\\Delta t/2) \\end{cases} \\Rightarrow \\color{blue}{p(t=3\\Delta t/2)} \\\\\\Rightarrow \\begin{cases} \\color{red}{q(t=\\Delta t)} \\\\ \\color{blue}{p(t=3\\Delta t/2)}\\\\ \\end{cases} \\Rightarrow \\color{green}{q(t=2\\Delta t)} \\\\\\Rightarrow \\begin{cases} \\color{green}{q(t=2\\Delta t)} \\\\ \\color{blue}{p(t=3\\Delta t/2)} \\end{cases} \\Rightarrow ............\\\\ ... \\end{equation}$d(x)$&#x7684;&#x9009;&#x62E9; d(x) = log(\\frac{1}{R}) \\frac{3v}{2\\delta}(\\frac{x}{\\delta})^2$R$&#x63A8;&#x8350;&#x53D6;0.001&#xFF0C;$\\delta$&#x4E3A;PML&#x5C42;&#x539A;[Collino and Tsogka 2001]&#x3002; &#x5B9E;&#x73B0; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051% Matlab%Parameters% clear;close all; clc n_pml = 10; nx = 1020; dx = 10; x = (-n_pml:nx-1-n_pml) * dx; %(1:11) and (1010:1020) are PML zone nt = 700; dt = 1.0e-2; v = 1000.0; rho = 1500; R = 0.001; delta = n_pml * dx; d_const = (3.0*v/2.0/delta)*log(1.0/R) /(delta*delta);%d(x)% d_pLeft = ( (-n_pml:0)*dx ) .^2 * d_const; d_pRight = ( (0:n_pml)*dx ) .^2 * d_const; d_qLeft = ( (-n_pml:-1)*dx +dx/2 ) .^2 * d_const; d_qRight = ( (1:n_pml)*dx -dx/2 ) .^2 * d_const; d_p = [d_pLeft zeros(1,nx-2*n_pml-2) d_pRight]; d_q = [d_qLeft zeros(1,nx-2*n_pml-1) d_qRight]; c1 = (2.0-dt*d_p)./(2.0+dt*d_p); c2 = (-2.0*rho*v*v*dt)./dx./(2.0+dt*d_p); f1 = (2.0-dt*d_q)./(2.0+dt*d_q); f2 = ( (-2.0*dt)./rho./dx) ./ (2.0+dt.*d_q);%source% f_wave = 0.5*2.0 * pi ; n_stop = floor( 2.0 * pi / f_wave / dt ); src= [ sin( (0:n_stop)*dt*f_wave) zeros(1,nt) ]; %source p = zeros(2,nx); q = zeros(2,nx-1); %initial conditions new = 1; old = 2; figure xmin = min(x); xmax = max(x);%main loop% for it = 1:nt % 1 2 3 4 5 ... %--q---q---q---q---q--... %p---p---p---p---p---p... %1 2 3 4 5 6... p(old,511) = src(it)+p(old,511); for ix = 1:nx-1 q(new,ix) = f1(ix)* q(old,ix) + f2(ix) * ( p(old,ix+1) - p(old,ix) ); end for ix = 2:nx-1 p(new,ix) = c1(ix)* p(old,ix) + c2(ix) * ( q(new,ix) - q(new,ix-1) ); end %p(new,nx) = p(new,nx-1); % free boundary %p(new,1) = p(new,2); p(new,nx) = 0.0; % rigid boundary p(new,1) = 0.0; plot(x,p(old,:)); axis( [xmin xmax -1.5 1.5] ); pause(0.001); tmp = old; old = new; new = tmp; end &#x53C2;&#x8003;&#x6587;&#x732E;Virieux J. SH-wave propagation in heterogeneous media: Velocity-stress finite-difference method[J]. Geophysics, 1984, 49(11): 1933-1942.Virieux J. P-SV wave propagation in heterogeneous media: Velocity-stress finite-difference method[J]. Geophysics, 1986, 51(4): 889-901.Collino, Francis, and Chrysoula Tsogka. &#x201C;Application of the perfectly matched absorbing layer model to the linear elastodynamic problem in anisotropic heterogeneous media.&#x201D; Geophysics 66.1 (2001): 294-307.","raw":null,"content":null,"categories":[{"name":"PDE","slug":"PDE","permalink":"http://sheng09.github.io/categories/PDE/"}],"tags":[{"name":"FD","slug":"FD","permalink":"http://sheng09.github.io/tags/FD/"},{"name":"modeling","slug":"modeling","permalink":"http://sheng09.github.io/tags/modeling/"},{"name":"wave equation","slug":"wave-equation","permalink":"http://sheng09.github.io/tags/wave-equation/"}]},{"title":"一阶声波方程有线差分模拟","slug":"fd-1d","date":"2016-09-12T22:38:40.000Z","updated":"2016-10-10T01:45:23.792Z","comments":true,"path":"2016/09/13/fd-1d/","link":"","permalink":"http://sheng09.github.io/2016/09/13/fd-1d/","excerpt":"&#x672C;&#x6587;&#x4ECB;&#x7ECD;&#x4E86;&#x4E00;&#x9636;&#x58F0;&#x6CE2;&#x65B9;&#x7A0B;&#x6709;&#x9650;&#x5DEE;&#x5206;&#x6A21;&#x62DF;&#xFF0C;&#x5E76;&#x5229;&#x7528;&#x4E00;&#x7EF4;&#x6A21;&#x578B;&#x4F8B;&#x5B50;&#x52A0;&#x4EE5;&#x8BF4;&#x660E;&#x3002;","text":"&#x672C;&#x6587;&#x4ECB;&#x7ECD;&#x4E86;&#x4E00;&#x9636;&#x58F0;&#x6CE2;&#x65B9;&#x7A0B;&#x6709;&#x9650;&#x5DEE;&#x5206;&#x6A21;&#x62DF;&#xFF0C;&#x5E76;&#x5229;&#x7528;&#x4E00;&#x7EF4;&#x6A21;&#x578B;&#x4F8B;&#x5B50;&#x52A0;&#x4EE5;&#x8BF4;&#x660E;&#x3002; &#x63A7;&#x5236;&#x65B9;&#x7A0B; &#x4EA4;&#x9519;&#x7F51;&#x683C; &#x5B9E;&#x73B0; &#x53C2;&#x8003;&#x6587;&#x732E; &#x63A7;&#x5236;&#x65B9;&#x7A0B;&#x4E00;&#x7EF4;&#x7A7A;&#x95F4;&#x4E0B;&#xFF0C;&#x4E00;&#x9636;&#x58F0;&#x6CE2;&#x65B9;&#x7A0B;&#x53EF;&#x4EE5;&#x5199;&#x6210;&#x4EE5;&#x4E0B;&#x5F62;&#x5F0F;&#xFF1A;$ $ \\begin{eqnarray} \\begin{cases} \\frac{\\partial p }{\\partial t} & = & -\\rho v^2\\frac{\\partial q}{\\partial x} + f\\\\ \\frac{\\partial q }{\\partial t} & = & -\\frac{1}{\\rho} \\frac{\\partial p}{\\partial x} + q_0 \\end{cases} \\end{eqnarray}&#x5728;&#x65E0;&#x5916;&#x529B;&#x4F5C;&#x7528;&#x65E0;&#x4FE1;&#x53F7;&#x8F93;&#x5165;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x58F0;&#x6CE2;&#x65B9;&#x7A0B;&#x53CA;&#x5176;&#x5DEE;&#x5206;&#x5F62;&#x5F0F;&#x4E3A;&#xFF1A; \\begin{eqnarray} \\begin{cases} \\frac{\\partial p }{\\partial t} & = & -\\rho v^2\\frac{\\partial q}{\\partial x}\\\\ \\frac{\\partial q }{\\partial t} & = & -\\frac{1}{\\rho} \\frac{\\partial p}{\\partial x} \\end{cases} \\end{eqnarray} \\begin{eqnarray} \\begin{cases} D_t p_B & = & - \\rho v^2 D_x q_B \\\\ D_t q_A & = & -\\frac{1}{\\rho}D_x p_A \\end{cases} \\end{eqnarray}&#x4EA4;&#x9519;&#x7F51;&#x683C;&#x53C2;&#x8003;Virieux(1984, 1986)&#xFF0C;&#x6784;&#x5EFA;&#x4EA4;&#x9519;&#x7F51;&#x683C;&#x5982;&#x4E0B;&#xFF1A; &#x5728;&#x4E8C;&#x9636;&#x5DEE;&#x5206;&#x7CBE;&#x5EA6;&#x4E0B;&#xFF0C;&#x5BF9;&#x4E8E;&#xFF22;&#x70B9;&#x53EF;&#x4EE5;&#x63A8;&#x5BFC;&#xFF1A; \\begin{eqnarray} D_t p_B & = & - \\rho v^2 D_x q_B \\\\ \\Rightarrow \\frac{1}{\\Delta t} [ p(x_i, t_{m+1/2}) - p(x_i, t_{m-1/2}) ] & = & -\\frac{\\rho v^2}{\\Delta x} [ q(x_{i+1/2}, t_m) - q(x_{i-1/2}, t_m) ] \\end{eqnarray} \\begin{eqnarray} \\Rightarrow p(x_i, t_{m+1/2}) & = & p(x_i, t_{m-1/2}) - \\frac{\\rho v^2 \\Delta t}{\\Delta x} [ q(x_{i+1/2}, t_m) - q(x_{i-1/2}, t_m) \\end{eqnarray}&#x540C;&#x6837;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x63A8;&#x5BFC;&#xFF21;&#x70B9;&#xFF1A; \\begin{eqnarray} D_t q_A & = & -\\frac{1}{\\rho}D_x p_A \\\\ \\Rightarrow \\frac{1}{\\Delta t} [q(x_{i+1/2},t_{m+1})- q(x_{i+1/2},t_{m}) ]& = & -\\frac{1}{\\rho \\Delta x} [p(x_{i+1}, t_{m+1/2}) - p(x_i, t_{m+1/2})] \\end{eqnarray} \\begin{eqnarray} \\Rightarrow q(x_{i+1/2},t_{m+1}) & = & q(x_{i+1/2},t_{m}) -\\frac{\\Delta t}{\\rho \\Delta x} [p(x_{i+1}, t_{m+1/2}) - p(x_i, t_{m+1/2})] \\end{eqnarray}&#x6545;&#x800C;&#xFF0C;&#x6CE2;&#x573A;&#x9012;&#x63A8;&#x5173;&#x7CFB;&#x4E3A;&#xFF1A; \\begin{equation} \\begin{cases} q(t=0) \\\\ p(t=\\Delta t/2) \\end{cases} \\Rightarrow \\color{red}{q(t=\\Delta t)} \\\\\\Rightarrow \\begin{cases} \\color{red}{q(t=\\Delta t)} \\\\ p(t=\\Delta t/2) \\end{cases} \\Rightarrow \\color{blue}{p(t=3\\Delta t/2)} \\\\\\Rightarrow \\begin{cases} \\color{red}{q(t=\\Delta t)} \\\\ \\color{blue}{p(t=3\\Delta t/2)}\\\\ \\end{cases} \\Rightarrow \\color{green}{q(t=2\\Delta t)} \\\\\\Rightarrow \\begin{cases} \\color{green}{q(t=2\\Delta t)} \\\\ \\color{blue}{p(t=3\\Delta t/2)} \\end{cases} \\Rightarrow ............\\\\ ... \\end{equation}&#x5B9E;&#x73B0; 123456789101112131415161718192021222324252627282930313233343536% Matlabclear;close all; clcnx = 1000; dx = 10; x = (0:nx-1) * dx;nt = 2500; dt = 1.0e-2;v = 1000.0; rho = 1500;f_wave = 0.5*2.0 * pi ;n_stop = floor( 2.0 * pi / f_wave / dt );src= [ sin( (0:n_stop)*dt*f_wave) zeros(1,nt) ]; %sourcep = zeros(2,nx); q = zeros(2,nx-1); %initial conditionsnew = 1; old = 2;c_q = -1.0*dt/rho/dx; c_p = -1.0*rho*v*v*dt/dx;figurefor it = 1:nt % 1 2 3 4 5 ... %--q---q---q---q---q--... %p---p---p---p---p---p... %1 2 3 4 5 6... p(old,501) = src(it)+p(old,501); for ix = 1:nx-1 q(new,ix) = q(old,ix) + c_q * ( p(old,ix+1) - p(old,ix) ); end for ix = 2:nx-1 p(new,ix) = p(old,ix) + c_p * ( q(new,ix) - q(new,ix-1) ); end p(new,nx) = p(new,nx-1); % free boundary p(new,1) = p(new,2); %p(new,nx) = 0.0; % rigid boundary %p(new,1) = 0.0; plot(x,p(old,:)); axis( [0 nx*dx -1.5 1.5] ); pause(0.001); tmp = old; old = new; new = tmp;end &#x53C2;&#x8003;&#x6587;&#x732E;Virieux J. SH-wave propagation in heterogeneous media: Velocity-stress finite-difference method[J]. Geophysics, 1984, 49(11): 1933-1942.Virieux J. P-SV wave propagation in heterogeneous media: Velocity-stress finite-difference method[J]. Geophysics, 1986, 51(4): 889-901.","raw":null,"content":null,"categories":[{"name":"PDE","slug":"PDE","permalink":"http://sheng09.github.io/categories/PDE/"}],"tags":[{"name":"FD","slug":"FD","permalink":"http://sheng09.github.io/tags/FD/"},{"name":"modeling","slug":"modeling","permalink":"http://sheng09.github.io/tags/modeling/"},{"name":"wave equation","slug":"wave-equation","permalink":"http://sheng09.github.io/tags/wave-equation/"}]},{"title":"FFT终点截断引起的错误","slug":"fft-endpoint","date":"2016-09-12T01:55:07.000Z","updated":"2016-10-10T01:47:34.995Z","comments":true,"path":"2016/09/12/fft-endpoint/","link":"","permalink":"http://sheng09.github.io/2016/09/12/fft-endpoint/","excerpt":"&#x6211;&#x770B;&#x8FC7;&#x5F88;&#x591A;&#x4F8B;FFT&#x8BA1;&#x7B97;&#x4E2D;&#x7AEF;&#x70B9;&#x5904;&#x7406;&#x7684;&#x9519;&#x8BEF;&#xFF0C;&#x5148;&#x6765;&#x770B;&#x4EE5;&#x4E0B;&#x7684;&#x4F8B;&#x5B50;&#xFF1A;&#x4E0B;&#x56FE;&#x4E2D;&#xFF0C;1Hz&#x7684;&#x5468;&#x671F;&#x6B63;&#x5F26;&#x4FE1;&#x53F7;$sin(2\\pi t)$&#xFF0C;&#x901A;&#x8FC7;FFT&#x8BA1;&#x7B97;&#xFF0C;&#x5176;&#x529F;&#x7387;&#x9891;&#x8C31;&#x4E2D;&#xFF0C;&#x5B58;&#x5728;1Hz&#x4EE5;&#x5916;&#x7684;&#x4FE1;&#x53F7;&#xFF0C;&#x8FD9;&#x663E;&#x7136;&#x662F;&#x4E0D;&#x5BF9;&#x7684;&#x3002;&#x5728;&#x5F88;&#x591A;&#x6848;&#x4F8B;&#x4E2D;&#xFF0C;&#x8FD9;&#x4E00;&#x73B0;&#x8C61;&#x88AB;&#x5FFD;&#x89C6;&#xFF0C;&#x6216;&#x8005;&#x88AB;&#x89E3;&#x91CA;&#x4E3A;&#x8BA1;&#x7B97;&#x8BEF;&#x5DEE;&#x3002;&#x7279;&#x522B;&#x662F;&#x5F53;&#x4FE1;&#x53F7;&#x7684;&#x5E8F;&#x5217;&#x8DB3;&#x591F;&#x957F;&#x65F6;&#xFF0C;&#x8FD9;&#x4E00;&#x7279;&#x5F81;&#x4F1A;&#x5341;&#x5206;&#x7684;&#x4E0D;&#x660E;&#x663E;&#x3002;&#x4EA6;&#x6709;&#x4E00;&#x90E8;&#x5206;&#x6848;&#x4F8B;&#x671F;&#x671B;&#x901A;&#x8FC7;&#x8865;&#x96F6;&#x6765;&#x4F18;&#x5316;&#x7ED3;&#x679C;&#x3002;","text":"&#x6211;&#x770B;&#x8FC7;&#x5F88;&#x591A;&#x4F8B;FFT&#x8BA1;&#x7B97;&#x4E2D;&#x7AEF;&#x70B9;&#x5904;&#x7406;&#x7684;&#x9519;&#x8BEF;&#xFF0C;&#x5148;&#x6765;&#x770B;&#x4EE5;&#x4E0B;&#x7684;&#x4F8B;&#x5B50;&#xFF1A;&#x4E0B;&#x56FE;&#x4E2D;&#xFF0C;1Hz&#x7684;&#x5468;&#x671F;&#x6B63;&#x5F26;&#x4FE1;&#x53F7;$sin(2\\pi t)$&#xFF0C;&#x901A;&#x8FC7;FFT&#x8BA1;&#x7B97;&#xFF0C;&#x5176;&#x529F;&#x7387;&#x9891;&#x8C31;&#x4E2D;&#xFF0C;&#x5B58;&#x5728;1Hz&#x4EE5;&#x5916;&#x7684;&#x4FE1;&#x53F7;&#xFF0C;&#x8FD9;&#x663E;&#x7136;&#x662F;&#x4E0D;&#x5BF9;&#x7684;&#x3002;&#x5728;&#x5F88;&#x591A;&#x6848;&#x4F8B;&#x4E2D;&#xFF0C;&#x8FD9;&#x4E00;&#x73B0;&#x8C61;&#x88AB;&#x5FFD;&#x89C6;&#xFF0C;&#x6216;&#x8005;&#x88AB;&#x89E3;&#x91CA;&#x4E3A;&#x8BA1;&#x7B97;&#x8BEF;&#x5DEE;&#x3002;&#x7279;&#x522B;&#x662F;&#x5F53;&#x4FE1;&#x53F7;&#x7684;&#x5E8F;&#x5217;&#x8DB3;&#x591F;&#x957F;&#x65F6;&#xFF0C;&#x8FD9;&#x4E00;&#x7279;&#x5F81;&#x4F1A;&#x5341;&#x5206;&#x7684;&#x4E0D;&#x660E;&#x663E;&#x3002;&#x4EA6;&#x6709;&#x4E00;&#x90E8;&#x5206;&#x6848;&#x4F8B;&#x671F;&#x671B;&#x901A;&#x8FC7;&#x8865;&#x96F6;&#x6765;&#x4F18;&#x5316;&#x7ED3;&#x679C;&#x3002; &#x9519;&#x8BEF;&#x7684;&#x539F;&#x56E0; &#x6B63;&#x786E;&#x7684;&#x505A;&#x6CD5; &#x4FE1;&#x53F7;&#x5904;&#x7406;&#x6CE8;&#x610F;&#x4E8B;&#x9879; &#x9519;&#x8BEF;&#x7684;&#x539F;&#x56E0;&#x8981;&#x5206;&#x6790;&#x8FD9;&#x4E00;&#x9519;&#x8BEF;&#x51FA;&#x73B0;&#x7684;&#x539F;&#x56E0;&#xFF0C;&#x9700;&#x8981;&#x4ECE;FFT&#x7684;&#x9690;&#x542B;&#x5468;&#x671F;&#x6027;&#x6761;&#x4EF6;&#x51FA;&#x53D1;&#x3002;&#x65F6;&#x95F4;&#x57DF;&#x7684;&#x79BB;&#x6563;&#x5316;&#x5BF9;&#x5E94;&#x4E86;&#x9891;&#x7387;&#x57DF;&#x7684;&#x5468;&#x671F;&#x5316;&#xFF0C;&#x800C;&#x9891;&#x7387;&#x57DF;&#x7684;&#x79BB;&#x6563;&#x5316;&#x5BF9;&#x5E94;&#x4E86;&#x65F6;&#x95F4;&#x57DF;&#x7684;&#x5468;&#x671F;&#x5316;&#x3002;&#x6545;&#x7531;&#x65F6;&#x95F4;&#x57DF;&#x7684;&#x79BB;&#x6563;&#x5E8F;&#x5217;&#x53D8;&#x6362;&#x5F97;&#x5230;&#x9891;&#x7387;&#x57DF;&#x7684;&#x79BB;&#x6563;&#x5E8F;&#x5217;&#xFF0C;&#x9690;&#x542B;&#x4E86;&#x4FE1;&#x53F7;&#x5728;&#x65F6;&#x9891;&#x57DF;&#x7686;&#x4E3A;&#x5468;&#x671F;&#x4FE1;&#x53F7;&#x7684;&#x7EA6;&#x675F;&#x3002;&#x56E0;&#x6B64;&#xFF0C;FFT&#x8BA1;&#x7B97;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x5BF9;&#x5E94;&#x4E86;&#x5468;&#x671F;&#x5316;&#x7684;&#x65F6;&#x95F4;&#x5E8F;&#x5217;&#x7684;&#x9891;&#x8C31;&#x3002;&#x9488;&#x5BF9;&#x4EE5;&#x4E0A;&#x65F6;&#x95F4;&#x5E8F;&#x5217;&#x4FE1;&#x53F7;&#xFF0C;&#x6211;&#x4EEC;&#x6784;&#x5EFA;&#x5176;&#x5468;&#x671F;&#x5316;&#x6CE2;&#x5F62;&#x5982;&#x4E0B;&#xFF1A;&#x663E;&#x7136;&#xFF0C;&#x5468;&#x671F;&#x5316;&#x4E4B;&#x540E;&#x7684;&#x4FE1;&#x53F7;&#x5E76;&#x975E;&#x6211;&#x4EEC;&#x9884;&#x60F3;&#x7684;$sin(2\\pi t)$&#xFF0C;&#x6240;&#x4EE5;&#x5229;&#x7528;FFT&#x5F97;&#x5230;&#x7684;&#x9891;&#x8C31;&#x663E;&#x7136;&#x4E5F;&#x4E0D;&#x662F;&#x9884;&#x60F3;&#x7684;1Hz&#x3002;&#x800C;&#x51FA;&#x73B0;&#x9891;&#x8C31;&#x6CC4;&#x6F0F;&#xFF0C;&#x4E5F;&#x662F;&#x7531;$t=1$&#x5904;&#x95F4;&#x65AD;&#x5F15;&#x8D77;&#x7684;&#x5409;&#x5E03;&#x65AF;&#x6548;&#x5E94;&#x3002; &#x6B63;&#x786E;&#x7684;&#x505A;&#x6CD5;&#x90A3;&#x4E48;&#xFF0C;&#x8981;&#x5F97;&#x5230;&#x6B63;&#x786E;&#x7684;&#x9891;&#x8C31;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x62B9;&#x6389;&#x539F;&#x59CB;&#x5E8F;&#x5217;&#x672B;&#x5C3E;&#x7684;&#x91C7;&#x6837;&#x70B9;&#xFF1A;&#x6B64;&#x65F6;&#xFF0C;&#x5468;&#x671F;&#x5316;&#x5BF9;&#x5E94;&#x7684;&#x4FE1;&#x53F7;&#x5982;&#x4E0B;&#x56FE;&#xFF0C;&#x663E;&#x7136;&#x662F;&#x6211;&#x4EEC;&#x9884;&#x671F;&#x7684;&#x6B63;&#x5F26;&#x4FE1;&#x53F7;$sin(2\\pi t)$&#x3002; &#x4FE1;&#x53F7;&#x5904;&#x7406;&#x6CE8;&#x610F;&#x4E8B;&#x9879;&#x5B9E;&#x9645;&#x4FE1;&#x53F7;&#x5904;&#x7406;&#x4E2D;&#xFF0C;&#x5BF9;&#x4E8E;&#x91C7;&#x6837;&#x70B9;&#x4E3A;$N$&#xFF0C;&#x91C7;&#x6837;&#x95F4;&#x9694;&#x4E3A;$\\delta t$&#x7684;&#x79BB;&#x6563;&#x5E8F;&#x5217;&#xFF0C;&#x5176;&#x5468;&#x671F;&#x4E3A;$N\\delta t$&#xFF0C;&#x800C;&#x4E0D;&#x662F;$(N-1)\\delta t$&#x3002;","raw":null,"content":null,"categories":[{"name":"Digital Signal Processing","slug":"Digital-Signal-Processing","permalink":"http://sheng09.github.io/categories/Digital-Signal-Processing/"}],"tags":[{"name":"FFT","slug":"FFT","permalink":"http://sheng09.github.io/tags/FFT/"}]},{"title":"Boundary Conditions for Differential Equations","slug":"PDE-boundaries","date":"2016-08-31T19:34:51.000Z","updated":"2016-08-31T20:26:33.060Z","comments":true,"path":"2016/09/01/PDE-boundaries/","link":"","permalink":"http://sheng09.github.io/2016/09/01/PDE-boundaries/","excerpt":"There are different types of boundary conditions for ODE(Oridinary Differential Equation) and PDE(Partial Differential Equation). This post present all collections of these boundary conditions and associated equations.Besides, this post also present the combination of Dirichlet and Neumann boundary conditions in construct absorbing boundary for solving wave eqution.","text":"There are different types of boundary conditions for ODE(Oridinary Differential Equation) and PDE(Partial Differential Equation). This post present all collections of these boundary conditions and associated equations.Besides, this post also present the combination of Dirichlet and Neumann boundary conditions in construct absorbing boundary for solving wave eqution. Dirichlet Boundary Condition Neumann Boundary Condition Robin Boundary Condition Mixed Boundary Condition Cauchy Boundary Condition Associated Problems for PDE of Wave Equation Reference Dirichlet Boundary ConditionGiven ODE or PDE, conditions that specify values of the solution along the boundary of the domain is Dirichlet boundary condition. Wiki $$\\begin{equation} \\begin{cases} f(y&apos;&apos;,y) &amp; = &amp; 0 \\\\ y(\\alpha) &amp; = &amp; 0 \\\\ y(\\beta) &amp; = &amp; 0 \\end{cases} \\end{equation}$$ $$\\begin{equation} \\begin{cases} f(\\nabla^{2}G,G) &amp; = &amp; 0 \\\\ G|_{boundary} &amp; = &amp; g(x,y,z) \\end{cases} \\end{equation}$$ Neumann Boundary ConditionBeing different to Dirichlet boundary condition, Neumann boundary condition specify the values of the derivative of the solution along the boundary. Wiki$$\\begin{equation} \\begin{cases} f(y&apos;&apos;,y) &amp; = &amp; 0 \\\\ y&apos;|_{x=\\alpha} &amp; = &amp; 0 \\\\ y&apos;|_{x=\\beta} &amp; = &amp; 0 \\end{cases} \\end{equation}$$$$\\begin{equation} \\begin{cases} f(G&apos;&apos;,G) &amp; = &amp; 0 \\\\ G&apos;|_{boundary} &amp; = &amp; g(x,y,z) \\\\ \\end{cases} \\end{equation}$$ Robin Boundary ConditionRobin boundary condition is the combination of Dirichlet and Neumann boundary conditions.Wiki $$\\begin{equation} \\begin{cases} f(G&apos;&apos;,G) &amp; = &amp; 0 \\\\ G+G&apos;|_{boundary} &amp; = &amp; g(x) \\end{cases} \\end{equation}$$ Mixed Boundary ConditionBeing different from Robin condition, Mixed condition means different types of condition along different subset of the boundary. It is much more complex than Robin condition.Wiki $$\\begin{equation} \\begin{cases} f(G&apos;&apos;,G) &amp; = &amp; 0 \\\\ G|_{1st\\ boundary\\ subset} &amp; = &amp; g_1(x) \\\\ G&apos;|_{2nd\\ boundary\\ subset} &amp; = &amp; g_2(x) \\end{cases} \\end{equation}$$ Cauchy Boundary ConditionIn Cauchy boundary condition, Dirichlet and Neumann conditions are declared along the boundary to ensure the unique solution. Wiki $$\\begin{equation} \\begin{cases} f(G&apos;&apos;,G) &amp; = &amp; 0 \\\\ G|_{boundary} &amp; = &amp; g_1(x) \\\\ G&apos;|_{ boundary} &amp; = &amp; g_2(x) \\end{cases} \\end{equation}$$ Associated Problems for PDE of Wave EquationConsidering boundary conditions for wave equation, Dirichlet and Neumann conditions produce reflection that are opposite in sign. Thus, the summation of these two cases will cancel the reflection.[Smith 1974] Reference[1] Smith W D. A nonreflecting plane boundary for wave propagation problems[J]. Journal of Computational Physics, 1974, 15(4): 492-503.","raw":null,"content":null,"categories":[{"name":"PDE","slug":"PDE","permalink":"http://sheng09.github.io/categories/PDE/"}],"tags":[{"name":"PDE","slug":"PDE","permalink":"http://sheng09.github.io/tags/PDE/"}]},{"title":"Hello","slug":"Hello","date":"2016-07-13T06:35:31.000Z","updated":"2016-07-13T06:35:31.062Z","comments":true,"path":"2016/07/13/Hello/","link":"","permalink":"http://sheng09.github.io/2016/07/13/Hello/","excerpt":"","text":"","raw":null,"content":null,"categories":[],"tags":[]},{"title":"接收函数理论与实践（三）低速层对接收函数的影响","slug":"RF-LVZ-03","date":"2016-06-15T12:12:25.000Z","updated":"2016-06-15T12:14:05.165Z","comments":true,"path":"2016/06/15/RF-LVZ-03/","link":"","permalink":"http://sheng09.github.io/2016/06/15/RF-LVZ-03/","excerpt":"","text":"","raw":null,"content":null,"categories":[{"name":"接收函数","slug":"接收函数","permalink":"http://sheng09.github.io/categories/接收函数/"}],"tags":[{"name":"接收函数","slug":"接收函数","permalink":"http://sheng09.github.io/tags/接收函数/"},{"name":"界面","slug":"界面","permalink":"http://sheng09.github.io/tags/界面/"}]},{"title":"接收函数理论与实践（二）界面梯度对接收函数的影响","slug":"RF-interface-02","date":"2016-06-15T10:29:14.000Z","updated":"2016-06-15T12:09:28.867Z","comments":true,"path":"2016/06/15/RF-interface-02/","link":"","permalink":"http://sheng09.github.io/2016/06/15/RF-interface-02/","excerpt":"&#x63A5;&#x6536;&#x51FD;&#x6570;&#x901A;&#x8FC7;&#x53CD;&#x8936;&#x79EF;&#x8BA1;&#x7B97;&#xFF0C;&#x63D0;&#x53D6;&#x6CE2;&#x573A;&#x5728;&#x754C;&#x9762;&#x5904;&#x7684;&#x8F6C;&#x6362;&#x6548;&#x5E94;&#x3002;&#x5728;&#x5B9E;&#x9645;&#x95EE;&#x9898;&#x4E2D;&#xFF0C;&#x5E76;&#x4E0D;&#x5B58;&#x5728;&#x7EDD;&#x5BF9;&#x7684;&#x754C;&#x9762;&#xFF0C;&#x66F4;&#x4E3A;&#x51C6;&#x786E;&#x7684;&#x63CF;&#x8FF0;&#x5E94;&#x8BE5;&#x662F;&#x901F;&#x5EA6;&#x68AF;&#x5EA6;&#x8F83;&#x9AD8;&#x7684;&#x8FC7;&#x5EA6;&#x5E26;&#x3002;&#x4E3A;&#x5BF9;&#x6BD4;&#x68AF;&#x5EA6;&#x5E26;&#x7ED9;&#x63A5;&#x6536;&#x51FD;&#x6570;&#x6CE2;&#x5F62;&#x5E26;&#x6765;&#x7684;&#x5F71;&#x54CD;&#xFF0C;&#x53C2;&#x8003;CPS Tutorials&#x90E8;&#x5206;&#x5185;&#x5BB9;&#xFF0C;&#x672C;&#x6587;&#x9009;&#x62E9;&#x4E86;&#x8D70;&#x65F6;&#x76F8;&#x540C;&#xFF0C;&#x68AF;&#x5EA6;&#x53D8;&#x5316;&#x4E0D;&#x540C;&#x7684;&#x6A21;&#x578B;&#xFF0C;&#x7528;&#x4E8E;&#x63A5;&#x6536;&#x51FD;&#x6570;&#x6B63;&#x6F14;&#x8BA1;&#x7B97;&#x3002;","text":"&#x63A5;&#x6536;&#x51FD;&#x6570;&#x901A;&#x8FC7;&#x53CD;&#x8936;&#x79EF;&#x8BA1;&#x7B97;&#xFF0C;&#x63D0;&#x53D6;&#x6CE2;&#x573A;&#x5728;&#x754C;&#x9762;&#x5904;&#x7684;&#x8F6C;&#x6362;&#x6548;&#x5E94;&#x3002;&#x5728;&#x5B9E;&#x9645;&#x95EE;&#x9898;&#x4E2D;&#xFF0C;&#x5E76;&#x4E0D;&#x5B58;&#x5728;&#x7EDD;&#x5BF9;&#x7684;&#x754C;&#x9762;&#xFF0C;&#x66F4;&#x4E3A;&#x51C6;&#x786E;&#x7684;&#x63CF;&#x8FF0;&#x5E94;&#x8BE5;&#x662F;&#x901F;&#x5EA6;&#x68AF;&#x5EA6;&#x8F83;&#x9AD8;&#x7684;&#x8FC7;&#x5EA6;&#x5E26;&#x3002;&#x4E3A;&#x5BF9;&#x6BD4;&#x68AF;&#x5EA6;&#x5E26;&#x7ED9;&#x63A5;&#x6536;&#x51FD;&#x6570;&#x6CE2;&#x5F62;&#x5E26;&#x6765;&#x7684;&#x5F71;&#x54CD;&#xFF0C;&#x53C2;&#x8003;CPS Tutorials&#x90E8;&#x5206;&#x5185;&#x5BB9;&#xFF0C;&#x672C;&#x6587;&#x9009;&#x62E9;&#x4E86;&#x8D70;&#x65F6;&#x76F8;&#x540C;&#xFF0C;&#x68AF;&#x5EA6;&#x53D8;&#x5316;&#x4E0D;&#x540C;&#x7684;&#x6A21;&#x578B;&#xFF0C;&#x7528;&#x4E8E;&#x63A5;&#x6536;&#x51FD;&#x6570;&#x6B63;&#x6F14;&#x8BA1;&#x7B97;&#x3002; &#x6A21;&#x578B;&#x8BBE;&#x5B9A; &#x6B63;&#x6F14;&#x7ED3;&#x679C; &#x8FD0;&#x884C; &#x6A21;&#x578B;&#x8BBE;&#x5B9A;&#x751F;&#x6210;&#x4E0D;&#x540C;&#x7684;&#x68AF;&#x5EA6;&#x754C;&#x9762;&#x6A21;&#x578B;&#xFF0C;&#x5E76;&#x5408;&#x7406;&#x914D;&#x7F6E;&#x4F7F;&#x8D70;&#x65F6;&#x76F8;&#x540C;&#x3002;&#x6A21;&#x578B;S&#x6CE2;&#x901F;&#x5EA6;&#xFF0C;P&#x6CE2;&#x901F;&#x5EA6;&#x53CA;&#x5BC6;&#x5EA6;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;&#xFF0C;&#x4E0D;&#x540C;&#x989C;&#x8272;&#x7684;&#x5B9E;&#x7EBF;&#x4EE3;&#x8868;&#x4E0D;&#x540C;&#x7684;&#x6A21;&#x578B;&#x3002; &#x6B63;&#x6F14;&#x7ED3;&#x679C; &#x8FD0;&#x884C;&#x4E0B;&#x8F7D;rf_interface&#xFF0C;&#x89E3;&#x538B;&#xFF0C;&#x8FD0;&#x884C;&#x5982;&#x4E0B;&#xFF1A;123$ cd$ ./run.sh #&#x751F;&#x6210;&#x6A21;&#x578B;&#x5E76;&#x6B63;&#x6F14;$ ./PlotModels.sh #&#x7ED8;&#x5236;&#x6A21;&#x578B;&#x56FE; &#x6587;&#x4EF6;&#x7ED3;&#x6784;&#x5982;&#x4E0B;&#xFF1A;1234567891011121314151617181920212223rf_interface/&#x251C;&#x2500;&#x2500; PlotModels.sh #scripts&#x251C;&#x2500;&#x2500; run.sh&#x251C;&#x2500;&#x2500; rf_prf.jpg #generated diagrams&#x251C;&#x2500;&#x2500; rf_rainbow.jpg&#x251C;&#x2500;&#x2500; rf_sac.jpg&#x251C;&#x2500;&#x2500; RayPath.c #program for calculating raypath for specific seismic phase&#x251C;&#x2500;&#x2500; mkgrad.f #program for generate models, from &#x2018;CPs&#x2019;&#x251C;&#x2500;&#x2500; CalRayPara.py #python scripts for calculating ray parameters&#x251C;&#x2500;&#x2500; CalTrvTPPPS.py #python scripts for calculating traveltimes&#x251C;&#x2500;&#x2500; CalTrvTPPSS.py&#x251C;&#x2500;&#x2500; CalTrvTPS.py&#x251C;&#x2500;&#x2500; CalTrvTPSSS.py&#x251C;&#x2500;&#x2500; Grad_Intf_RFS/ #generate RF waveform for models&#x2502;&#xA0;&#xA0; &#x251C;&#x2500;&#x2500; RF.0.0618.00.sac&#x2502;&#xA0;&#xA0; &#x251C;&#x2500;&#x2500; ...&#x2514;&#x2500;&#x2500; models/ #models and diagrams &#x251C;&#x2500;&#x2500; Grad_Intf_hrftn96_00.model #model &#x251C;&#x2500;&#x2500; Grad_Intf_hrftn96_00.ps #single model plot and raypath &#x251C;&#x2500;&#x2500; ... &#x251C;&#x2500;&#x2500; RHO.jpg #models set plot &#x251C;&#x2500;&#x2500; VP.jpg &#x2514;&#x2500;&#x2500; VS.jpg &#x5982;&#x679C;&#x5BF9;&#x7A0B;&#x5E8F;&#x6709;&#x4EFB;&#x4F55;&#x7591;&#x95EE;&#xFF0C;&#x6216;&#x8005;&#x53D1;&#x73B0;&#x4EFB;&#x4F55;BUG&#xFF0C;&#x8BF7;&#x7559;&#x8A00;&#xFF0C;&#x6216;&#x8005;&#x81F4;&#x4FE1;wangsheng.cas@gmail.com&#x3002;","raw":null,"content":null,"categories":[{"name":"接收函数","slug":"接收函数","permalink":"http://sheng09.github.io/categories/接收函数/"}],"tags":[{"name":"接收函数","slug":"接收函数","permalink":"http://sheng09.github.io/tags/接收函数/"},{"name":"界面","slug":"界面","permalink":"http://sheng09.github.io/tags/界面/"}]},{"title":"接收函数理论与实践（一）射线参数对接收函数的影响","slug":"RF-raypara-01","date":"2016-06-15T09:40:28.000Z","updated":"2016-06-15T11:01:51.418Z","comments":true,"path":"2016/06/15/RF-raypara-01/","link":"","permalink":"http://sheng09.github.io/2016/06/15/RF-raypara-01/","excerpt":"&#x672C;&#x6587;&#x6B63;&#x6F14;&#x8BA1;&#x7B97;&#x4E86;&#x4E0D;&#x540C;&#x5C04;&#x7EBF;&#x53C2;&#x6570;&#xFF08;&#x9707;&#x4E2D;&#x8DDD;&#xFF09;&#x5BF9;&#x5E94;&#x7684;&#x63A5;&#x6536;&#x51FD;&#x6570;&#x6CE2;&#x5F62;&#xFF0C;&#x4EE5;&#x5BF9;&#x6BD4;&#x9707;&#x76F8;&#x968F;&#x5C04;&#x7EBF;&#x53C2;&#x6570;&#x7684;&#x53D8;&#x5316;&#x3002;&#x6B63;&#x6F14;&#x8BA1;&#x7B97;&#x548C;&#x56FE;&#x5F62;&#x7ED8;&#x5236;&#x7684;&#x7A0B;&#x5E8F;&#x53EF;&#x4EE5;&#x70B9;&#x51FB;&#x4E0B;&#x8F7D;rf_raypara&#x3002;&#x7A0B;&#x5E8F;&#x4F7F;&#x7528;&#x9700;&#x8981;&#x9884;&#x88C5;CPS&#x548C;GMT_v4&#x8F6F;&#x4EF6;&#x5305;&#x3002;","text":"&#x672C;&#x6587;&#x6B63;&#x6F14;&#x8BA1;&#x7B97;&#x4E86;&#x4E0D;&#x540C;&#x5C04;&#x7EBF;&#x53C2;&#x6570;&#xFF08;&#x9707;&#x4E2D;&#x8DDD;&#xFF09;&#x5BF9;&#x5E94;&#x7684;&#x63A5;&#x6536;&#x51FD;&#x6570;&#x6CE2;&#x5F62;&#xFF0C;&#x4EE5;&#x5BF9;&#x6BD4;&#x9707;&#x76F8;&#x968F;&#x5C04;&#x7EBF;&#x53C2;&#x6570;&#x7684;&#x53D8;&#x5316;&#x3002;&#x6B63;&#x6F14;&#x8BA1;&#x7B97;&#x548C;&#x56FE;&#x5F62;&#x7ED8;&#x5236;&#x7684;&#x7A0B;&#x5E8F;&#x53EF;&#x4EE5;&#x70B9;&#x51FB;&#x4E0B;&#x8F7D;rf_raypara&#x3002;&#x7A0B;&#x5E8F;&#x4F7F;&#x7528;&#x9700;&#x8981;&#x9884;&#x88C5;CPS&#x548C;GMT_v4&#x8F6F;&#x4EF6;&#x5305;&#x3002; &#x6A21;&#x578B;&#x8BBE;&#x5B9A; &#x6B63;&#x6F14; &#x6CE8;&#x610F;&#x4E8B;&#x9879; &#x6A21;&#x578B;&#x8BBE;&#x5B9A;&#x6784;&#x5EFA;&#x4E00;&#x7EF4;&#x5730;&#x58F3;&#x6A21;&#x578B;./model.dat&#x3002;&#x6A21;&#x578B;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;&#x3002;&#x5206;&#x522B;&#x7ED8;&#x5236;&#x4E86;Pp&#xFF0C;Ps&#xFF0C;PpPs&#xFF0C;PpSs+PsPs&#x9707;&#x76F8;&#x7684;&#x5C04;&#x7EBF;&#x8DEF;&#x5F84;&#x56FE;&#xFF0C;&#x5176;&#x4E2D;&#xFF0C;&#x84DD;&#x8272;&#x5B9E;&#x7EBF;&#x4EE3;&#x8868;P&#x6CE2;&#x8DEF;&#x5F84;&#xFF0C;&#x7EA2;&#x8272;&#x5B9E;&#x7EBF;&#x4EE3;&#x8868;S&#x6CE2;&#x8DEF;&#x5F84;&#x3002; &#x7ED8;&#x56FE;&#x547D;&#x4EE4;&#x5982;&#x4E0B;&#xFF1A;12$ cd rf_raypara/$ ./PlotModel.sh &#x6B63;&#x6F14;&#x9009;&#x53D6;&#x4E0D;&#x540C;&#x7684;&#x5C04;&#x7EBF;&#x53C2;&#x6570;&#xFF0C;&#x8303;&#x56F4;&#x4E3A;[0.14, 1.0e-5) s/km&#xFF0C;&#x9009;&#x53D6;&#x9AD8;&#x65AF;&#x53C2;&#x6570;&#x4E3A;1.0&#xFF0C;&#x505A;&#x6B63;&#x6F14;&#x8BA1;&#x7B97;&#x3002;&#x5176;&#x4E2D;&#xFF0C;&#x5C04;&#x7EBF;&#x53C2;&#x6570;&#x8D8A;&#x5C0F;&#xFF0C;&#x4EE3;&#x8868;&#x9707;&#x4E2D;&#x8DDD;&#x8D8A;&#x5927;&#xFF0C;&#x5C04;&#x7EBF;&#x8D8A;&#x63A5;&#x8FD1;&#x5782;&#x76F4;&#x5165;&#x5C04;&#x3002;&#x8FD0;&#x884C;&#x5982;&#x4E0B;&#xFF1A;12$ cd rf_raypara/$ ./run.sh &#x5B9E;&#x9645;&#x6570;&#x636E;&#x63D0;&#x53D6;&#x63A5;&#x6536;&#x51FD;&#x6570;&#xFF0C;&#x4E00;&#x822C;&#x9009;&#x53D6;&#x9707;&#x4E2D;&#x8DDD;&#x4F4D;&#x4E8E;30&#xB0;&#xFF5E;90&#xB0;&#x8303;&#x56F4;&#x5185;&#x7684;&#x5730;&#x9707;&#x4E8B;&#x4EF6;&#x8BB0;&#x5F55;&#xFF0C;&#x5728;iasp91&#x6A21;&#x578B;&#x4E2D;&#xFF0C;&#x5BF9;&#x5E94;&#x7684;&#x5C04;&#x7EBF;&#x53C2;&#x6570;&#x4F4D;&#x4E8E;[0.04, 0.08]&#x8303;&#x56F4;&#x5185;&#x3002; &#x7531;&#x6B63;&#x6F14;&#x7ED3;&#x679C;&#xFF0C;&#x53EF;&#x4EE5;&#x53D1;&#x73B0;30&#xB0;&#xFF5E;90&#xB0;&#x9707;&#x4E2D;&#x8DDD;&#x8303;&#x56F4;&#x5185;&#xFF0C;Ps&#x9707;&#x76F8;&#x968F;&#x5C04;&#x7EBF;&#x53C2;&#x6570;&#x53D8;&#x5316;&#x4E0D;&#x5927;&#xFF0C;&#x800C;PpPs&#xFF0C;PpSs+PsPs&#x9707;&#x76F8;&#x5219;&#x5448;&#x73B0;&#x8F83;&#x4E3A;&#x660E;&#x663E;&#x7684;&#x53D8;&#x5316;&#x3002;&#x9488;&#x5BF9;&#x8F6C;&#x6362;&#x6CE2;&#x9707;&#x76F8;&#x5230;&#x65F6;&#x968F;&#x5C04;&#x7EBF;&#x53C2;&#x6570;&#x7684;&#x53D8;&#x5316;&#xFF0C;&#x63A5;&#x6536;&#x51FD;&#x6570;&#x53E0;&#x52A0;&#x9700;&#x8981;&#x505A;&#x52A8;&#x6821;&#x6B63;&#xFF0C;&#x6216;&#x8005;&#x6309;&#x5C04;&#x7EBF;&#x53C2;&#x6570;&#x5206;&#x533A;&#x95F4;&#x53E0;&#x52A0;&#x3002; &#x6CE8;&#x610F;&#x4E8B;&#x9879;rf_raypara&#x5305;&#x542B;&#x4E86;&#x672C;&#x6587;&#x9700;&#x8981;&#x7684;&#x6240;&#x6709;&#x7A0B;&#x5E8F;&#xFF0C;&#x5176;&#x4E2D;Raypath&#x7531;Raypath.c&#x7F16;&#x8BD1;&#x800C;&#x6765;&#xFF0C;&#x7F16;&#x8BD1;&#x547D;&#x4EE4;&#x5982;&#x4E0B;&#xFF1A;12$ cd rf_raypara/$ gcc Raypath.c -o Raypath -lm -O4 rf_raypara&#x7684;.sh,.py&#x811A;&#x672C;&#x9700;&#x8981;&#x6DFB;&#x52A0;&#x53EF;&#x6267;&#x884C;&#x6743;&#x9650;&#xFF0C;&#x547D;&#x4EE4;&#x5982;&#x4E0B;:12$ cd rf_raypara/$ chmod +x *.py *.sh &#x5982;&#x679C;&#x5BF9;&#x7A0B;&#x5E8F;&#x6709;&#x4EFB;&#x4F55;&#x7591;&#x95EE;&#xFF0C;&#x6216;&#x8005;&#x53D1;&#x73B0;&#x4EFB;&#x4F55;BUG&#xFF0C;&#x8BF7;&#x7559;&#x8A00;&#xFF0C;&#x6216;&#x8005;&#x81F4;&#x4FE1;wangsheng.cas@gmail.com&#x3002;","raw":null,"content":null,"categories":[{"name":"接收函数","slug":"接收函数","permalink":"http://sheng09.github.io/categories/接收函数/"}],"tags":[{"name":"接收函数","slug":"接收函数","permalink":"http://sheng09.github.io/tags/接收函数/"},{"name":"射线参数","slug":"射线参数","permalink":"http://sheng09.github.io/tags/射线参数/"}]},{"title":"Hexo博客添加返回顶部按钮","slug":"add-BackToTop","date":"2016-06-14T07:49:54.000Z","updated":"2016-06-14T14:06:02.473Z","comments":true,"path":"2016/06/14/add-BackToTop/","link":"","permalink":"http://sheng09.github.io/2016/06/14/add-BackToTop/","excerpt":"&#x4E3A;&#x535A;&#x5BA2;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x8FD4;&#x56DE;&#x9876;&#x90E8;&#x7684;&#x6309;&#x94AE;&#xFF0C;&#x7B80;&#x5355;&#x800C;&#x53C8;&#x5B9E;&#x7528;&#x3002;","text":"&#x4E3A;&#x535A;&#x5BA2;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x8FD4;&#x56DE;&#x9876;&#x90E8;&#x7684;&#x6309;&#x94AE;&#xFF0C;&#x7B80;&#x5355;&#x800C;&#x53C8;&#x5B9E;&#x7528;&#x3002; &#x6DFB;&#x52A0;HTML&#x4EE3;&#x7801; &#x6DFB;&#x52A0;JS&#x4EE3;&#x7801; &#x6DFB;&#x52A0;&#x5BF9;&#x4EE5;&#x4E0A;&#x4EE3;&#x7801;&#x7684;&#x5F15;&#x7528; &#x6DFB;&#x52A0;HTML&#x4EE3;&#x7801;&#x4E3A;&#x7F51;&#x9875;&#x6DFB;&#x52A0;&#x8FD4;&#x56DE;&#x9876;&#x90E8;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x5728;&#x4E3B;&#x9898;&#x76EE;&#x5F55;&#x4E0B;&#x65B0;&#x5EFA;source/_partial/totop.ejs&#xFF0C;&#x5199;&#x5165;&#x5185;&#x5BB9;123&lt;div id=&quot;totop&quot; style=&quot;position:fixed;bottom:150px;right:20px;cursor: pointer;&quot;&gt; &lt;a title=&quot;Back to top&quot;&gt;&lt;img src=&quot;/imgs/scrollup_arrow.png&quot;/&gt;&lt;/a&gt;&lt;/div&gt; &#x5176;&#x4E2D;&#xFF0C;&#x9009;&#x62E9;&#x81EA;&#x5DF1;&#x6EE1;&#x610F;&#x7684;&#x56FE;&#x7247;src=&quot;/imgs/scrollup_arrow.png&quot;&#x8BBE;&#x7F6E;&#x6309;&#x94AE;&#xFF0C;&#x4EE5;&#x53CA;&#x4E0E;&#x7F51;&#x9875;&#x76F8;&#x886C;&#x7684;style&#x3002; &#x6DFB;&#x52A0;JS&#x4EE3;&#x7801;&#x4E3A;&#x6211;&#x4EEC;&#x7684;&#x8FD4;&#x56DE;&#x9876;&#x90E8;&#x6309;&#x94AE;&#x6DFB;&#x52A0;JS&#x4EE3;&#x7801;&#x3002;&#x5728;&#x4E3B;&#x9898;&#x76EE;&#x5F55;&#x4E0B;&#x65B0;&#x5EFA;&#x6587;&#x4EF6;source/js/totop.js&#xFF0C;&#x5199;&#x5165;&#x5185;&#x5BB9;123456789101112131415161718192021222324(function($) { // When to show the scroll link // higher number = scroll link appears further down the page var upperLimit = 1000; // Our scroll link element var scrollElem = $(&apos;#totop&apos;); // Scroll to top speed var scrollSpeed = 500; // Show and hide the scroll to top link based on scroll position scrollElem.hide(); $(window).scroll(function () { var scrollTop = $(document).scrollTop(); if ( scrollTop &gt; upperLimit ) { $(scrollElem).stop().fadeTo(300, 1); // fade back in }else{ $(scrollElem).stop().fadeTo(300, 0); // fade out } }); // Scroll to top animation on click $(scrollElem).click(function(){ $(&apos;html, body&apos;).animate({scrollTop:0}, scrollSpeed); return false; });})(jQuery); &#x6DFB;&#x52A0;&#x5BF9;&#x4EE5;&#x4E0A;&#x4EE3;&#x7801;&#x7684;&#x5F15;&#x7528;&#x6253;&#x5F00;&#x4E3B;&#x9898;&#x76EE;&#x5F55;&#x4E0B;&#x7684;&#x6587;&#x4EF6;/layout/_partial/after_footer.ejs&#xFF0C;&#x5728;&#x6587;&#x4EF6;&#x672B;&#x5C3E;&#x6DFB;&#x52A0;&#x4EE5;&#x4E0B;&#x5185;&#x5BB9;12&lt;%- partial(&apos;totop&apos;) %&gt;&lt;script src=&quot;&lt;%- config.root %&gt;js/totop.js&quot;&gt;&lt;/script&gt; &#x5B8C;&#x6210;&#xFF01;","raw":null,"content":null,"categories":[{"name":"Hexo","slug":"Hexo","permalink":"http://sheng09.github.io/categories/Hexo/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://sheng09.github.io/tags/Hexo/"}]},{"title":"Hexo博客添加Swiftype站内搜索","slug":"add-swiftype-search","date":"2016-06-14T04:35:23.000Z","updated":"2016-06-14T14:06:11.377Z","comments":true,"path":"2016/06/14/add-swiftype-search/","link":"","permalink":"http://sheng09.github.io/2016/06/14/add-swiftype-search/","excerpt":"Landscape&#x4E3B;&#x9898;&#x9ED8;&#x8BA4;&#x641C;&#x7D22;&#x4F4D;&#x4E8E;&#x53F3;&#x4E0A;&#x89D2;&#xFF0C;&#x4E14;&#x4F7F;&#x7528;Google&#x3002;&#x7F16;&#x8F91;&#x4E3B;&#x9898;&#xFF0C;&#x53EF;&#x4EE5;&#x5229;&#x7528;Swiftype&#x642D;&#x5EFA;&#x81EA;&#x5DF1;&#x7684;&#x7AD9;&#x5185;&#x641C;&#x7D22;&#xFF0C;&#x5E76;&#x5C06;&#x641C;&#x7D22;&#x6309;&#x94AE;&#x7F6E;&#x4E8E;&#x83DC;&#x5355;&#x4E4B;&#x4E2D;&#x3002;","text":"Landscape&#x4E3B;&#x9898;&#x9ED8;&#x8BA4;&#x641C;&#x7D22;&#x4F4D;&#x4E8E;&#x53F3;&#x4E0A;&#x89D2;&#xFF0C;&#x4E14;&#x4F7F;&#x7528;Google&#x3002;&#x7F16;&#x8F91;&#x4E3B;&#x9898;&#xFF0C;&#x53EF;&#x4EE5;&#x5229;&#x7528;Swiftype&#x642D;&#x5EFA;&#x81EA;&#x5DF1;&#x7684;&#x7AD9;&#x5185;&#x641C;&#x7D22;&#xFF0C;&#x5E76;&#x5C06;&#x641C;&#x7D22;&#x6309;&#x94AE;&#x7F6E;&#x4E8E;&#x83DC;&#x5355;&#x4E4B;&#x4E2D;&#x3002; &#x521B;&#x5EFA;Swiftype&#x8D26;&#x53F7; &#x914D;&#x7F6E;&#x4E0E;&#x83B7;&#x53D6;Install Code Hexo-Landscape&#x4E3B;&#x9898;&#x914D;&#x7F6E; &#x5B8C;&#x6210; &#x53C2;&#x8003; &#x521B;&#x5EFA;Swiftype&#x8D26;&#x53F7;&#x6CE8;&#x518C;Swiftype&#x8D26;&#x53F7;&#xFF0C;&#x767B;&#x9646;&#xFF0C;&#x70B9;&#x51FB;Creat A New Engine&#x8F93;&#x5165;&#x7F51;&#x5740;&#x8D77;&#x4E2A;&#x540D;&#x5B57;&#x968F;&#x540E;&#xFF0C;&#x5F00;&#x59CB;&#x6293;&#x53D6;&#x7F51;&#x7AD9;&#x5185;&#x5BB9;&#x3002;&#x6293;&#x53D6;&#x7ED3;&#x675F;&#x4E4B;&#x540E;&#x5728;Manage/Content&#x4E2D;&#x67E5;&#x770B;&#x6293;&#x53D6;&#x4E86;&#x90A3;&#x4E9B;&#x5185;&#x5BB9;&#x3002;&#x4E0D;&#x60F3;&#x8981;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x53EF;&#x4EE5;&#x624B;&#x52A8;&#x5728;Detials&#x91CC;&#x5220;&#x9664;&#x3002; &#x914D;&#x7F6E;&#x4E0E;&#x83B7;&#x53D6;Install Code&#x70B9;&#x51FB;&#x5B89;&#x88C5;&#xFF0C;&#x914D;&#x7F6E;&#x5916;&#x89C2;&#xFF0C;&#x83B7;&#x5F97;Install Code&#xFF0C;&#x590D;&#x5236;&#x4FDD;&#x5B58;&#x4EE5;&#x5907;&#x540E;&#x9762;&#x4F7F;&#x7528;&#x3002;&#x5916;&#x89C2;&#x9009;&#x7528;&#x9ED8;&#x8BA4;&#x5373;&#x53EF;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x70B9;&#x51FB;Change Configuration&#x4FEE;&#x6539;&#x3002; Hexo-Landscape&#x4E3B;&#x9898;&#x914D;&#x7F6E;&#x5728;landscape&#x4E3B;&#x9898;&#x4E0B;&#x7684;_config.yml&#x6587;&#x4EF6;&#x672B;&#x5C3E;&#x6DFB;&#x52A0;&#x5982;&#x4E0B;&#x4EE3;&#x7801;&#xFF1A;12swift_search: enable: true &#x5728;landscape&#x4E3B;&#x9898;&#x4E0B;&#x7684;_config.yml&#x4E2D;&#x7684;menu&#x90E8;&#x5206;&#x6DFB;&#x52A0;Search&#xFF1A;12345# Headermenu: Home: / Archives: /archives Search: /search &#x6253;&#x5F00;landscape/layout/_partial/header.ejs&#xFF0C;&#x5C06;&#x4EE5;&#x4E0B;&#x5185;&#x5BB9;123456789101112131415161718...&lt;div id=&quot;header-inner&quot; class=&quot;inner&quot;&gt; &lt;nav id=&quot;main-nav&quot;&gt; &lt;a id=&quot;main-nav-toggle&quot; class=&quot;nav-icon&quot;&gt;&lt;/a&gt; &lt;% for (var i in theme.menu){ %&gt; &lt;a class=&quot;main-nav-link&quot; href=&quot;&lt;%- url_for(theme.menu[i]) %&gt;&quot;&gt;&lt;%= i %&gt;&lt;/a&gt; &lt;% } %&gt; &lt;/nav&gt; &lt;nav id=&quot;sub-nav&quot;&gt; &lt;% if (theme.rss){ %&gt; &lt;a id=&quot;nav-rss-link&quot; class=&quot;nav-icon&quot; href=&quot;&lt;%- theme.rss %&gt;&quot; title=&quot;&lt;%= __(&apos;rss_feed&apos;) %&gt;&quot;&gt;&lt;/a&gt; &lt;% } %&gt; &lt;a id=&quot;nav-search-btn&quot; class=&quot;nav-icon&quot; title=&quot;&lt;%= __(&apos;search&apos;) %&gt;&quot;&gt;&lt;/a&gt; &lt;/nav&gt; &lt;div id=&quot;search-form-wrap&quot;&gt; &lt;%- search_form({button: &apos;&amp;#xF002;&apos;}) %&gt; &lt;/div&gt; ... &#x4FEE;&#x6539;&#x4E3A;&#xFF1A;1234567891011121314151617181920212223...&lt;div id=&quot;header-inner&quot; class=&quot;inner&quot;&gt; &lt;nav id=&quot;main-nav&quot;&gt; &lt;a id=&quot;main-nav-toggle&quot; class=&quot;nav-icon&quot;&gt;&lt;/a&gt; &lt;% for (var i in theme.menu){ %&gt; &lt;% if (i != &quot;Search&quot;){ %&gt; &lt;a class=&quot;main-nav-link&quot; href=&quot;&lt;%- url_for(theme.menu[i]) %&gt;&quot;&gt;&lt;%= i %&gt;&lt;/a&gt; &lt;% } else {%&gt; &lt;a class=&quot;main-nav-link st-search-show-outputs&quot; href=&quot;&lt;%- url_for(theme.menu[i]) %&gt;&quot;&gt;&lt;%= i %&gt;&lt;/a&gt; &lt;% } %&gt; &lt;% } %&gt; &lt;/nav&gt; &lt;nav id=&quot;sub-nav&quot;&gt; &lt;% if (theme.rss){ %&gt; &lt;a id=&quot;nav-rss-link&quot; class=&quot;nav-icon&quot; href=&quot;&lt;%- theme.rss %&gt;&quot; title=&quot;&lt;%= __(&apos;rss_feed&apos;) %&gt;&quot;&gt;&lt;/a&gt; &lt;% } %&gt; &lt;% if (theme.search_icon){ %&gt; &lt;a id=&quot;nav-search-btn&quot; class=&quot;nav-icon st-search-show-outputs&quot; title=&quot;&lt;%= __(&apos;search&apos;) %&gt;&quot;&gt;&lt;/a&gt; &lt;% } %&gt; &lt;/nav&gt;&lt;/div&gt;... &#x5728;landscape/layout/_partial/&#x76EE;&#x5F55;&#x4E0B;&#x521B;&#x5EFA;&#x6587;&#x4EF6;search.ejs&#xFF0C;&#x5199;&#x5165;&#x4EE5;&#x4E0B;&#x5185;&#x5BB9;&#x3002;&#x6CE8;&#x610F;&#xFF0C;&#x5176;&#x4E2D;&#x7684;Install code&#x811A;&#x672C;&#x4EE3;&#x7801;&#x4E3A;&#x81EA;swiftype&#x83B7;&#x53D6;&#x7684;&#x90A3;&#x6BB5;&#x3002;1234567891011121314151617181920212223242526272829303132333435363738394041&lt;% if(theme.swift_search.enable) { %&gt;&lt;div id=&quot;container&quot; class=&quot;page&quot;&gt;&lt;div id=&quot;st-results-container&quot; class=&quot;st-search-container&quot; style=&quot;width:80%&quot;&gt; Searching... Please Wait&lt;/div&gt;&lt;style&gt;.st-result-text {background: #fafafa;display: block;border-left: 0.5em solid #ccc;-webkit-transition: border-left 0.45s;-moz-transition: border-left 0.45s;-o-transition: border-left 0.45s;-ms-transition: border-left 0.45s;transition: border-left 0.45s;padding: 0.5em;}@media only screen and (min-width: 768px) {.st-result-text { padding: 1em;}}.st-result-text:hover {border-left: 0.5em solid #ea6753;}.st-result-text h3 a{color: #2ca6cb;line-height: 1.5;font-size: 22px;}.st-snippet em {font-weight: bold;color: #ea6753;}&lt;/style&gt;&lt;&#xFF01;--&#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x8981;&#x6362;&#x6210;swiftype&#x7684;install code--&#xFF01;&gt;&lt;script type=&quot;text/javascript&quot;&gt; (function(w,d,t,u,n,s,e){w[&apos;SwiftypeObject&apos;]=n;w[n]=w[n]||function(){ (w[n].q=w[n].q||[]).push(arguments);};s=d.createElement(t); e=d.getElementsByTagName(t)[0];s.async=1;s.src=u;e.parentNode.insertBefore(s,e); })(window,document,&apos;script&apos;,&apos;//s.swiftypecdn.com/install/v2/st.js&apos;,&apos;_st&apos;); _st(&apos;install&apos;,&apos;4LRsoUZsCDnx-aTgg_f5&apos;,&apos;2.0.0&apos;);&lt;/script&gt;&lt;% } %&gt; &#x6253;&#x5F00;landscape/layout/_partial/footer.ejs&#xFF0C;&#x5728;&#x6700;&#x540E;&#x4E00;&#x4E2A;&lt;/div&gt;&#x524D;&#xFF0C;&#x52A0;&#x5165;&#x540C;&#x6837;&#x7684;Install Code&#x3002;12345678910111213141516171819&lt;footer id=&quot;footer&quot;&gt; &lt;% if (theme.sidebar === &apos;bottom&apos;){ %&gt; &lt;%- partial(&apos;_partial/sidebar&apos;) %&gt; &lt;% } %&gt; &lt;div class=&quot;outer&quot;&gt; &lt;div id=&quot;footer-info&quot; class=&quot;inner&quot;&gt; &amp;copy; &lt;%= date(new Date(), &apos;YYYY&apos;) %&gt; &lt;%= config.author || config.title %&gt;&lt;br&gt; &lt;%= __(&apos;powered_by&apos;) %&gt; &lt;a href=&quot;http://hexo.io/&quot; target=&quot;_blank&quot;&gt;Hexo&lt;/a&gt; &lt;/div&gt; &lt;script type=&quot;text/javascript&quot;&gt; (function(w,d,t,u,n,s,e){w[&apos;SwiftypeObject&apos;]=n;w[n]=w[n]||function(){ (w[n].q=w[n].q||[]).push(arguments);};s=d.createElement(t); e=d.getElementsByTagName(t)[0];s.async=1;s.src=u;e.parentNode.insertBefore(s,e); })(window,document,&apos;script&apos;,&apos;//s.swiftypecdn.com/install/v2/st.js&apos;,&apos;_st&apos;); _st(&apos;install&apos;,&apos;4LRsoUZsCDnx-aTgg_f5&apos;,&apos;2.0.0&apos;); &lt;/script&gt; &lt;/div&gt;&lt;/footer&gt; &#x5B8C;&#x6210;&#x6240;&#x6709;&#x64CD;&#x4F5C;&#x5DF2;&#x7ECF;&#x5B8C;&#x6210;&#xFF0C;hexo g&#x5E76;hexo s&#x67E5;&#x770B;&#x7ED3;&#x679C;&#xFF0C;&#x6700;&#x540E;hexo d&#x90E8;&#x7F72;&#x4E00;&#x4E0B;&#x5427;&#x3002; &#x53C2;&#x8003;&#x5229;&#x7528;swiftype&#x4E3A;hexo&#x6DFB;&#x52A0;&#x7AD9;&#x5185;&#x641C;&#x7D22;v2.0http://www.jerryfu.net/post/search-engine-for-hexo-with-swiftype-v2.html&#x70B9;&#x51FB;&#x5F39;&#x51FA;&#x641C;&#x7D22;&#x6846;&#x7684;&#x4E8B;&#x4EF6;&#x914D;&#x7F6E;http://blog.cloudyu.me/2015/blog-search/&#x53BB;&#x6389;&#x53F3;&#x4E0B;&#x89D2;&#x4E11;&#x4E11;&#x7684;Swiftype&#x7AD9;&#x5185;&#x641C;&#x7D22;&#x6309;&#x94AE;http://www.pangjian.info/2015/03/24/site-search-with-swiftype/#stq=&amp;stp=0","raw":null,"content":null,"categories":[{"name":"Hexo","slug":"Hexo","permalink":"http://sheng09.github.io/categories/Hexo/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://sheng09.github.io/tags/Hexo/"},{"name":"Swiftype","slug":"Swiftype","permalink":"http://sheng09.github.io/tags/Swiftype/"}]},{"title":"利用Wiley Online Library获取最新的期刊杂志内容","slug":"configure-wiley-email-alert","date":"2016-06-11T07:42:45.000Z","updated":"2016-06-14T14:08:01.089Z","comments":true,"path":"2016/06/11/configure-wiley-email-alert/","link":"","permalink":"http://sheng09.github.io/2016/06/11/configure-wiley-email-alert/","excerpt":"&#x505A;&#x4E3A;&#x4E00;&#x540D;&#x79D1;&#x5B66;&#x7814;&#x7A76;&#x4ECE;&#x4E1A;&#x8005;&#xFF0C;&#x9605;&#x8BFB;&#x671F;&#x520A;&#x6587;&#x7AE0;&#x662F;&#x4E0D;&#x65AD;&#x5B66;&#x4E60;&#xFF0C;&#x63D0;&#x5347;&#x81EA;&#x6211;&#x5FC5;&#x4E0D;&#x53EF;&#x5C11;&#x7684;&#x73AF;&#x8282;&#x3002;&#x9605;&#x8BFB;&#x6700;&#x524D;&#x6CBF;&#x7684;&#x79D1;&#x7814;&#x6587;&#x7AE0;&#xFF0C;&#x53EF;&#x4EE5;&#x8BA9;&#x4F60;&#x7D27;&#x8DDF;&#x7814;&#x7A76;&#x6F6E;&#x6D41;&#xFF0C;&#x5B66;&#x4E60;&#x6700;&#x65B0;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x53D1;&#x73B0;&#x6700;&#x9700;&#x8981;&#x89E3;&#x51B3;&#x7684;&#x79D1;&#x5B66;&#x95EE;&#x9898;&#x548C;&#x6280;&#x672F;&#x63A2;&#x7D22;&#x3002;&#x751A;&#x81F3;&#xFF0C;&#x9605;&#x8BFB;&#x6587;&#x732E;&#x662F;&#x548C;&#x4F5C;&#x8005;&#x5EFA;&#x7ACB;&#x4EA4;&#x6D41;&#x8054;&#x7CFB;&#x6700;&#x4E3A;&#x76F4;&#x63A5;&#x7684;&#x57AB;&#x811A;&#x77F3;&#x3002;&#x5982;&#x679C;&#x4F60;&#x5DF2;&#x7ECF;&#x597D;&#x4E45;&#x6CA1;&#x6709;&#x9605;&#x8BFB;&#x6700;&#x65B0;&#x7684;&#x6587;&#x732E;&#x4E86;&#xFF0C;&#x90A3;&#x4E48;&#x4F60;&#x5C06;&#x6781;&#x6709;&#x53EF;&#x80FD;&#x9047;&#x5230;&#x5F88;&#x5927;&#x7684;&#x9EBB;&#x70E6;&#x3002;&#x5229;&#x7528;&#x7F51;&#x7EDC;&#x8D44;&#x6E90;&#xFF0C;&#x53EF;&#x4EE5;&#x5B9E;&#x65F6;&#x83B7;&#x53D6;&#x6700;&#x65B0;&#x7684;&#x7814;&#x7A76;&#x8FDB;&#x5C55;&#x548C;&#x6210;&#x679C;&#x3002;&#x4F46;&#x662F;&#xFF0C;&#x9762;&#x5BF9;&#x6D77;&#x91CF;&#x7684;&#x671F;&#x520A;&#x6742;&#x5FD7;&#xFF0C;&#x624B;&#x52A8;&#x67E5;&#x770B;&#x6700;&#x65B0;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x5F88;&#x5BB9;&#x6613;&#x8BA9;&#x4EBA;&#x5BF9;&#x79D1;&#x7814;&#x5931;&#x53BB;&#x5174;&#x8DA3;&#x548C;&#x52A8;&#x529B;&#xFF0C;&#x7279;&#x522B;&#x9047;&#x5230;&#x4E0D;&#x53EF;&#x6297;&#x9006;&#x7684;&#x7F51;&#x7EDC;&#x6545;&#x969C;&#x3002;&#x503C;&#x5F97;&#x5E86;&#x5E78;&#x7684;&#x662F;&#xFF0C;&#x5404;&#x5927;&#x51FA;&#x7248;&#x5546;&#x4EE5;&#x53CA;&#x4E0D;&#x540C;&#x7684;&#x79D1;&#x5B66;&#x7EC4;&#x7EC7;&#x673A;&#x6784;&#x90FD;&#x63D0;&#x4F9B;&#x4E86;&#x7528;&#x6237;&#x63D0;&#x9192;&#x529F;&#x80FD;&#xFF0C;&#x5B9E;&#x65F6;&#x5C06;&#x6700;&#x65B0;&#x7684;&#x7814;&#x7A76;&#x52A8;&#x6001;&#x6574;&#x7406;&#x597D;&#x53D1;&#x9001;&#x81F3;&#x7528;&#x6237;&#x90AE;&#x7BB1;&#x3002;&#x672C;&#x6587;&#x5C06;&#x4ECB;&#x7ECD;&#x5982;&#x4F55;&#x5229;&#x7528;Wiley&#x5728;&#x7EBF;&#x56FE;&#x4E66;&#x9986;&#x83B7;&#x53D6;&#x6700;&#x65B0;&#x7684;&#x7814;&#x7A76;&#x5185;&#x5BB9;&#x63D0;&#x9192;&#x3002;","text":"&#x505A;&#x4E3A;&#x4E00;&#x540D;&#x79D1;&#x5B66;&#x7814;&#x7A76;&#x4ECE;&#x4E1A;&#x8005;&#xFF0C;&#x9605;&#x8BFB;&#x671F;&#x520A;&#x6587;&#x7AE0;&#x662F;&#x4E0D;&#x65AD;&#x5B66;&#x4E60;&#xFF0C;&#x63D0;&#x5347;&#x81EA;&#x6211;&#x5FC5;&#x4E0D;&#x53EF;&#x5C11;&#x7684;&#x73AF;&#x8282;&#x3002;&#x9605;&#x8BFB;&#x6700;&#x524D;&#x6CBF;&#x7684;&#x79D1;&#x7814;&#x6587;&#x7AE0;&#xFF0C;&#x53EF;&#x4EE5;&#x8BA9;&#x4F60;&#x7D27;&#x8DDF;&#x7814;&#x7A76;&#x6F6E;&#x6D41;&#xFF0C;&#x5B66;&#x4E60;&#x6700;&#x65B0;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x53D1;&#x73B0;&#x6700;&#x9700;&#x8981;&#x89E3;&#x51B3;&#x7684;&#x79D1;&#x5B66;&#x95EE;&#x9898;&#x548C;&#x6280;&#x672F;&#x63A2;&#x7D22;&#x3002;&#x751A;&#x81F3;&#xFF0C;&#x9605;&#x8BFB;&#x6587;&#x732E;&#x662F;&#x548C;&#x4F5C;&#x8005;&#x5EFA;&#x7ACB;&#x4EA4;&#x6D41;&#x8054;&#x7CFB;&#x6700;&#x4E3A;&#x76F4;&#x63A5;&#x7684;&#x57AB;&#x811A;&#x77F3;&#x3002;&#x5982;&#x679C;&#x4F60;&#x5DF2;&#x7ECF;&#x597D;&#x4E45;&#x6CA1;&#x6709;&#x9605;&#x8BFB;&#x6700;&#x65B0;&#x7684;&#x6587;&#x732E;&#x4E86;&#xFF0C;&#x90A3;&#x4E48;&#x4F60;&#x5C06;&#x6781;&#x6709;&#x53EF;&#x80FD;&#x9047;&#x5230;&#x5F88;&#x5927;&#x7684;&#x9EBB;&#x70E6;&#x3002;&#x5229;&#x7528;&#x7F51;&#x7EDC;&#x8D44;&#x6E90;&#xFF0C;&#x53EF;&#x4EE5;&#x5B9E;&#x65F6;&#x83B7;&#x53D6;&#x6700;&#x65B0;&#x7684;&#x7814;&#x7A76;&#x8FDB;&#x5C55;&#x548C;&#x6210;&#x679C;&#x3002;&#x4F46;&#x662F;&#xFF0C;&#x9762;&#x5BF9;&#x6D77;&#x91CF;&#x7684;&#x671F;&#x520A;&#x6742;&#x5FD7;&#xFF0C;&#x624B;&#x52A8;&#x67E5;&#x770B;&#x6700;&#x65B0;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x5F88;&#x5BB9;&#x6613;&#x8BA9;&#x4EBA;&#x5BF9;&#x79D1;&#x7814;&#x5931;&#x53BB;&#x5174;&#x8DA3;&#x548C;&#x52A8;&#x529B;&#xFF0C;&#x7279;&#x522B;&#x9047;&#x5230;&#x4E0D;&#x53EF;&#x6297;&#x9006;&#x7684;&#x7F51;&#x7EDC;&#x6545;&#x969C;&#x3002;&#x503C;&#x5F97;&#x5E86;&#x5E78;&#x7684;&#x662F;&#xFF0C;&#x5404;&#x5927;&#x51FA;&#x7248;&#x5546;&#x4EE5;&#x53CA;&#x4E0D;&#x540C;&#x7684;&#x79D1;&#x5B66;&#x7EC4;&#x7EC7;&#x673A;&#x6784;&#x90FD;&#x63D0;&#x4F9B;&#x4E86;&#x7528;&#x6237;&#x63D0;&#x9192;&#x529F;&#x80FD;&#xFF0C;&#x5B9E;&#x65F6;&#x5C06;&#x6700;&#x65B0;&#x7684;&#x7814;&#x7A76;&#x52A8;&#x6001;&#x6574;&#x7406;&#x597D;&#x53D1;&#x9001;&#x81F3;&#x7528;&#x6237;&#x90AE;&#x7BB1;&#x3002;&#x672C;&#x6587;&#x5C06;&#x4ECB;&#x7ECD;&#x5982;&#x4F55;&#x5229;&#x7528;Wiley&#x5728;&#x7EBF;&#x56FE;&#x4E66;&#x9986;&#x83B7;&#x53D6;&#x6700;&#x65B0;&#x7684;&#x7814;&#x7A76;&#x5185;&#x5BB9;&#x63D0;&#x9192;&#x3002; &#x6CE8;&#x518C;&#x9996;&#x5148;&#xFF0C;&#x4F60;&#x9700;&#x8981;&#x7528;&#x4E8E;&#x4E00;&#x4E2A;Wiley Online Library&#x8D26;&#x6237;&#xFF0C;&#x8D26;&#x6237;&#x90AE;&#x7BB1;&#x9009;&#x62E9;&#x5E38;&#x7528;&#x7684;&#x90AE;&#x7BB1;&#xFF0C;&#x4EE5;&#x65B9;&#x4FBF;&#x63A5;&#x6536;&#x67E5;&#x770B;&#x63D0;&#x9192;&#x5185;&#x5BB9;&#x3002;&#x5982;&#x679C;&#x4F60;&#x5DF2;&#x7ECF;&#x62E5;&#x6709;&#x4E00;&#x4E2A;&#x8D26;&#x6237;&#xFF0C;&#x90A3;&#x4E48;&#x8BF7;&#x5FFD;&#x7565;&#x4EE5;&#x4E0B;&#x6CE8;&#x518C;&#x5185;&#x5BB9;&#x3002; &#x586B;&#x5199;&#x4E2A;&#x4EBA;&#x4FE1;&#x606F;&#xFF1A; &#x9009;&#x62E9;&#x671F;&#x520A;&#x5B8C;&#x6210;Wiley Online Library&#x6CE8;&#x518C;&#x4E4B;&#x540E;&#xFF0C;&#x767B;&#x9646;&#x81EA;&#x5DF1;&#x7684;&#x8D26;&#x53F7;&#x3002;&#x5728;&#x4E3B;&#x9875;&#x70B9;&#x51FB;Browse By Subject&#xFF1A;&#x9009;&#x62E9;&#x81EA;&#x5DF1;&#x7684;&#x5B66;&#x79D1;&#x9886;&#x57DF;&#xFF1A;&#x67E5;&#x770B;&#x5B66;&#x79D1;&#x5185;&#x6240;&#x6709;&#x8D44;&#x6E90;&#x5217;&#x8868;&#xFF1A;&#x5728;&#x8D44;&#x6E90;&#x5217;&#x8868;&#x4E2D;&#xFF0C;&#x9996;&#x5148;&#x9009;&#x62E9;&#x6211;&#x4EEC;&#x8D44;&#x6E90;&#x7C7B;&#x578B;&#x4E3A;Journals&#xFF0C;&#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x7684;&#x90AE;&#x4EF6;&#x63D0;&#x9192;&#x5185;&#x5BB9;&#x662F;&#x6700;&#x65B0;&#x53D1;&#x8868;&#x7684;&#x6587;&#x7AE0;&#xFF1B;&#x968F;&#x540E;&#xFF0C;&#x52FE;&#x9009;&#x81EA;&#x5DF1;&#x9700;&#x8981;&#x7684;&#x671F;&#x520A;&#xFF1B;&#x6700;&#x540E;&#xFF0C;&#x70B9;&#x51FB;Get email alerts&#x3002;&#x81F3;&#x6B64;&#xFF0C;Wiley Online Library&#x5C31;&#x4F1A;&#x5C06;&#x6240;&#x9009;&#x671F;&#x520A;&#x7684;&#x66F4;&#x65B0;&#x5185;&#x5BB9;&#x6574;&#x7406;&#x597D;&#xFF0C;&#x53D1;&#x9001;&#x5230;&#x8D26;&#x6237;&#x6CE8;&#x518C;&#x90AE;&#x7BB1;&#x3002; &#x8BBE;&#x7F6E;&#x63D0;&#x9192;&#x8FDB;&#x5165;My Profile&#xFF0C;&#x70B9;&#x51FB;Alert Manager&#xFF0C;&#x53EF;&#x4EE5;&#x8BBE;&#x7F6E;&#x63A5;&#x6536;&#x63D0;&#x9192;&#x7684;&#x90AE;&#x7BB1;&#x5730;&#x5740;&#xFF0C;&#x63D0;&#x9192;&#x683C;&#x5F0F;(Text&#x6587;&#x672C;&#x8FD8;&#x662F;Html&#x7F51;&#x9875;)&#xFF0C;&#x63D0;&#x9192;&#x65F6;&#x95F4;&#x95F4;&#x9694;&#x3002;&#x6B64;&#x5916;&#xFF0C;&#x70B9;&#x51FB;&#x671F;&#x520A;&#x5217;&#x8868;&#x540E;&#x7684;Remove content alert&#x53EF;&#x4EE5;&#x5173;&#x95ED;&#x5BF9;&#x5E94;&#x671F;&#x520A;&#x7684;&#x63D0;&#x9192;&#x3002;&#x5728;Saved Publications&#x4E2D;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x81EA;&#x5DF1;&#x52FE;&#x9009;&#x7684;&#x6240;&#x6709;&#x671F;&#x520A;&#xFF0C;&#x53EF;&#x4EE5;&#x52FE;&#x9009;&#x4E0D;&#x9700;&#x8981;&#x63D0;&#x9192;&#x7684;&#x671F;&#x520A;&#xFF0C;&#x70B9;&#x51FB;Delete selected publications&#x4E00;&#x6B21;&#x6027;&#x6E05;&#x7406;&#x3002; Apple&#x7528;&#x6237;Wiley&#x5F00;&#x53D1;&#x4E86;&#x79FB;&#x52A8;&#x5BA2;&#x6237;&#x7AEF;&#xFF0C;&#x6DB5;&#x76D6;&#x4E86;&#x5927;&#x90E8;&#x5206;&#x7684;&#x671F;&#x520A;&#x6742;&#x5FD7;&#x3002;&#x5982;&#x679C;&#x4F60;&#x662F;Apple&#x7528;&#x6237;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;Appstore&#x4E2D;&#x641C;&#x7D22;&#x671F;&#x520A;&#x540D;&#xFF0C;&#x4E0B;&#x8F7D;&#x4E4B;&#x540E;&#x767B;&#x9646;Wiley Online Library&#x8D26;&#x53F7;&#xFF0C;&#x5E76;&#x5F00;&#x542F;&#x63D0;&#x9192;&#x3002;","raw":null,"content":null,"categories":[{"name":"搭建科研工作环境","slug":"搭建科研工作环境","permalink":"http://sheng09.github.io/categories/搭建科研工作环境/"}],"tags":[{"name":"Email Alert","slug":"Email-Alert","permalink":"http://sheng09.github.io/tags/Email-Alert/"},{"name":"Journals","slug":"Journals","permalink":"http://sheng09.github.io/tags/Journals/"}]},{"title":"Linear Deconvolution","slug":"deconvolution","date":"2016-06-09T12:27:50.000Z","updated":"2016-06-15T12:13:59.349Z","comments":true,"path":"2016/06/09/deconvolution/","link":"","permalink":"http://sheng09.github.io/2016/06/09/deconvolution/","excerpt":"Deconvolution problem is a subset of inversion, in which observed data is deconvolved to reconstruct the model given the blurring function or source wavelet. Items of inversion including &#x201C;resolution&#x201D;, &#x201C;error&#x201D;, &#x201C;regularization&#x201D;, et. al also apply to deconvolution. Besides, deconvolution always associates transformation between time domain and frequency domain. Thus, principles inherited from digital singal processing apply to deconvolution. In other words, deconvolution is very complex, though massive codes and programs could output a time series in a blink of eye given no matter what kind of data input. Without comprehension of deconvolution and inversion, programs could be misused to provide wrong results. This blog attempts to theories and implementations of deconvolution.","text":"Deconvolution problem is a subset of inversion, in which observed data is deconvolved to reconstruct the model given the blurring function or source wavelet. Items of inversion including &#x201C;resolution&#x201D;, &#x201C;error&#x201D;, &#x201C;regularization&#x201D;, et. al also apply to deconvolution. Besides, deconvolution always associates transformation between time domain and frequency domain. Thus, principles inherited from digital singal processing apply to deconvolution. In other words, deconvolution is very complex, though massive codes and programs could output a time series in a blink of eye given no matter what kind of data input. Without comprehension of deconvolution and inversion, programs could be misused to provide wrong results. This blog attempts to theories and implementations of deconvolution. Convolution Deconvolution in frequency domain Iterative deconvolution in time domain Error and resolution estimation Implementations ConvolutionConvolution in time domain corresponds to multiplication in frequency domain: $$\\begin{eqnarray} r(t) &amp; = &amp; m(t) \\otimes s(t) \\label{convo_time}\\\\ R(\\omega) &amp; = &amp; M(\\omega) S(\\omega) \\label{convo_freq} \\end{eqnarray}$$ in $\\eqref{convo_time}$, $s(t)$ is the source wavelet or blurring function, $r(t)$ is the observed data, and $m(t)$ is the impulse repsonse of the model. Theoretically, given $s(t)$ and $r(t)$, $m(t)$ could be calculated by division according to $\\eqref{convo_freq}$ \\begin{equation} m(t) = IFT \\left\\{\\frac{R(\\omega)}{S(\\omega)}\\right\\} \\label{decon_div} \\end{equation}However, $\\eqref{decon_div}$ always present problematic results because observations $r(t)$ contain noise, and some values of $s(\\omega)$ approach zero, which result in instablities in the division. Deconvolution in frequency domainConsidering noise $n(t)$, $\\eqref{convo_time}$ should be: \\begin{eqnarray} r(t) & = & m(t) \\otimes s(t) + n(t) \\label{convo_time_real}\\\\ R(\\omega) & = & M(\\omega) S(\\omega) + N(\\omega) \\label{convo_freq_real} \\end{eqnarray}In deconvolution, we aim to find a time series $s&#x2019;(t)$, which acts like the inverse of the source wavelet or blurring function $s(t)$. So the convolution of $s&#x2019;(t)$ and $s(t)$ will produces a desired resolution function $h(t)$, being impulse function theoretically. \\begin{eqnarray} r(t) \\otimes s'(t) & = & m(t) \\otimes s(t) \\otimes s'(t) + n(t) \\otimes s'(t) \\label{conv_with_s_inv_time}\\\\ R(\\omega) S'(\\omega) & = & M(\\omega) S(\\omega) S'(\\omega) + N(\\omega) S'(\\omega) \\label{conv_with_s_inv_freq} \\end{eqnarray}Let us define: \\begin{equation} \\begin{cases} \\hat{m}(t) & = & r(t) \\otimes s'(t) \\\\ res(t) & = & s(t) \\otimes s'(t) \\\\ err(t) & = & n(t) \\otimes s'(t) \\end{cases} \\end{equation}$\\hat{m}(t)$ is the calculated model, $res(t)$ is the resolution function, and $err(t)$ is the model error: \\begin{equation} \\hat{m}(t) = m(t) \\otimes res(t) + err(t) \\end{equation}In deconvolution, the real resolution function $res(t)$ should approximates desired one $h(t)$, and model error $err(t)$ should approximates zero. Trade-off exists for these two approaches. Thus, an objective function is built: \\begin{equation} obj = \\int_{-\\infty}^{+\\infty}\\{a|res(t)-h(t)|^2+(1-a)|err(t)|^2\\}dt \\label{obj_func} \\end{equation}according to Parseval&#x2019;s theorem, in the frequency domain, $\\eqref{obj_func}$ has the form of: \\begin{equation} obj = a|S(\\omega)S'(\\omega) - h(\\omega)|^2 + (1-a) | N(\\omega)S'(\\omega) |^2 \\label{obj_func_freq} \\end{equation}When objective function approach the minimal value, the derivative of $obj$ to $S&#x2019;(\\omega)$ should be zero. Corresponding $S&#x2019;(\\omega)$ is : \\begin{eqnarray} S'(\\omega) & = & \\frac{S^*(\\omega)h(\\omega)}{S(\\omega)S^*(\\omega)+b|N(\\omega)|^2} \\\\ b & = & \\frac{1-a}{a} \\end{eqnarray}Choose gaussian function as desired resolution function, and estimate the noise $|N(\\omega)|^2$ on the basis of observation and signal to noise energy ratio $\\nu$. \\begin{equation} \\hat{m}(t) = IFT\\left\\{\\frac{R(\\omega)S^*(\\omega)}{S(\\omega)S^*(\\omega)+c\\sigma_0^2}e^{-\\frac{\\omega^2}{4\\alpha^2}} \\right\\} \\label{mod} \\end{equation}$\\sigma_0^2$ is the self-correlation of $S(t)$, and $c = b \\nu$. From the viewpoint to regularization, an item of $c\\sigma_0^2$ is added to the denominator. So instablity result from the near-zero value of $S(\\omega)S^*(\\omega)$ is reduced. Likewise, we could build the solver equation of: \\begin{equation} \\hat{m}(t) = IFT\\left\\{\\frac{R(\\omega)S^*(\\omega)}{ max[S(\\omega)S^*(\\omega), c\\sigma_0^2] }e^{-\\frac{\\omega^2}{4\\alpha^2}} \\right\\} \\label{mod_water_level} \\end{equation}which is the water-level regularization deconvolution. Iterative deconvolution in time domainFor time series, the model $m(t)$ is superposition of impulse functions: \\begin{equation} \\hat{m}(t) = \\sum_{i} m_i h(t-t_i) \\label{superposition} \\end{equation}To determine $m_1$ and $t_1$, the error $\\eqref{err_iter}$ should approach its minimal value. \\begin{equation} \\Delta_1 = \\int_{-\\infty}^{+\\infty}\\{r(t) - m_1 h(t-t_1) \\otimes s(t)\\}^2dt \\label{err_iter} \\end{equation}Corresponding $m_1$ and $\\Delta_1$ could be calculated assuming $ \\frac{\\partial \\Delta_1} {\\partial m_1} = 0 $: \\begin{eqnarray} m_1 & = & \\frac { \\int_{-\\infty}^{+\\infty} r(t)s(t-t_1)dt } { \\int_{-\\infty}^{+\\infty} s^2(t)dt} \\\\ \\Delta_1 & = & \\frac { \\int_{-\\infty}^{+\\infty}r^2(t)dt -[\\int_{-\\infty}^{+\\infty}r(t)s(t-t_1)dt ]^2} {\\int_{-\\infty}^{+\\infty}s^2(t)dt} \\end{eqnarray}Obviously, $[\\int_{-\\infty}^{+\\infty}r(t)s(t-t_1)dt ]^2 $ should approach its maximal value so that the error $\\Delta_1 $ approach its minimum. Under this criterion, $t_1$ could be acquired by traversal.After obtaining $m_1$ and $t_1$, we subtract $m_1h(t-t_1)$ from $r(t)$ and get residual time series: \\begin{equation} r'(t) = r(t) - m_1h(t-t_1) \\end{equation}Likewise, $m_2$ and $t_2$ could be obtain by applying above procedure to $r&#x2019;(t)$. This kind of procedure is iterated for N times until no more significant decrease in the residual time series occurs. The model could be applying a gausssian function to $\\eqref{superposition}$ with $ m_i$ and $t_i(i=1,2,&#x2026;N)$. Besides, synthetic observation and error are: \\begin{eqnarray} \\hat{r} & = & \\sum_{i=1}^N m_i s(t-t_i) \\\\ \\Delta_N & = & \\int_{-\\infty}^{+\\infty} [r(t) - \\hat{r}(t)]^2 dt \\end{eqnarray}Error and resolution estimationIt is important to evaluate the results of deconvolution, thus to choose the optimal regularization factor $c$ in $ \\eqref{mod} $, $\\eqref{mod_water_level}$, $N$ for iteration deconvolution, and gaussian factor.First, to determine the error of our result, the calculated model $\\hat{m}{t}$ is convolved with $s(t)$, and then compared with observation $r(t)$: \\begin{equation} \\Delta = \\int_{-\\infty}^{+\\infty} r(t) - \\hat(m)(t) \\otimes s(t) dt \\end{equation}Second, for resolution estimation. A simply way to obtain resolution function is to deconvolve $s(t)$ from itself. Since we desire a gaussian shape resolution function in derivations, the calculated one will approximates gaussian function.Resolution estimation for $eqref{mod}$ and $\\eqref{mod_water_level}$: \\begin{eqnarray} \\widehat{res}(t) & = & IFT\\left\\{\\frac{S(\\omega)S^*(\\omega)}{S(\\omega)S^*(\\omega)+c\\sigma_0^2}e^{-\\frac{\\omega^2}{4\\alpha^2}} \\right\\} \\label{res} \\\\ \\widehat{res}(t) & = & IFT\\left\\{\\frac{S(\\omega)S^*(\\omega)}{ max[S(\\omega)S^*(\\omega), c\\sigma_0^2] }e^{-\\frac{\\omega^2}{4\\alpha^2}} \\right\\} \\label{res_water_level} \\end{eqnarray}ImplementationsYou could design your codes according to deconvolution equtions. CPS provide programs of sacdecon for deconvolution in frequency domain, and saciterd for iteration deconvolution in time domain. Besides, package of hk provides decon and iter_decon as well. These programs differs slighty in the output. To find their usages details, please vist package homepage or XX.You could find examples of deconvolution for receiver functions at XX. Reference","raw":null,"content":null,"categories":[{"name":"Digital Signal Processing","slug":"Digital-Signal-Processing","permalink":"http://sheng09.github.io/categories/Digital-Signal-Processing/"}],"tags":[{"name":"接收函数","slug":"接收函数","permalink":"http://sheng09.github.io/tags/接收函数/"},{"name":"Digital Signal Processing","slug":"Digital-Signal-Processing","permalink":"http://sheng09.github.io/tags/Digital-Signal-Processing/"},{"name":"Inversion","slug":"Inversion","permalink":"http://sheng09.github.io/tags/Inversion/"},{"name":"Regularization","slug":"Regularization","permalink":"http://sheng09.github.io/tags/Regularization/"}]},{"title":"利用总控Makefile一次性编译所有子程序包","slug":"Makefile-compileSubs","date":"2016-06-09T08:07:40.000Z","updated":"2017-01-22T14:51:03.838Z","comments":true,"path":"2016/06/09/Makefile-compileSubs/","link":"","permalink":"http://sheng09.github.io/2016/06/09/Makefile-compileSubs/","excerpt":"&#x5F53;&#x4E00;&#x4E2A;&#x5927;&#x7684;&#x9879;&#x76EE;&#x7531;&#x5F88;&#x591A;&#x5B50;&#x7A0B;&#x5E8F;&#x7EC4;&#x6210;&#xFF0C;&#x800C;&#x6BCF;&#x4E00;&#x4E2A;&#x5B50;&#x7A0B;&#x5E8F;&#x5305;&#x90FD;&#x6709;&#x81EA;&#x5DF1;&#x72EC;&#x7ACB;&#x7684;Makefile&#xFF0C;&#x8FD9;&#x65F6;&#x5019;&#x5C31;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x603B;&#x63A7;Makefile&#x6765;&#x4E00;&#x6B21;&#x6027;&#x5B8C;&#x6210;&#x6240;&#x6709;&#x7684;&#x7F16;&#x8BD1;&#x5DE5;&#x4F5C;&#x3002;&#x4EE5;&#x4E0B;&#x7ED9;&#x51FA;&#x4E86;&#x4E00;&#x4E2A;&#x4F8B;&#x5B50;&#xFF0C;&#x4EE5;&#x8BF4;&#x660E;&#x5982;&#x4F55;&#x6784;&#x5EFA;&#x603B;&#x63A7;Makefile&#x3002;","text":"&#x5F53;&#x4E00;&#x4E2A;&#x5927;&#x7684;&#x9879;&#x76EE;&#x7531;&#x5F88;&#x591A;&#x5B50;&#x7A0B;&#x5E8F;&#x7EC4;&#x6210;&#xFF0C;&#x800C;&#x6BCF;&#x4E00;&#x4E2A;&#x5B50;&#x7A0B;&#x5E8F;&#x5305;&#x90FD;&#x6709;&#x81EA;&#x5DF1;&#x72EC;&#x7ACB;&#x7684;Makefile&#xFF0C;&#x8FD9;&#x65F6;&#x5019;&#x5C31;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x603B;&#x63A7;Makefile&#x6765;&#x4E00;&#x6B21;&#x6027;&#x5B8C;&#x6210;&#x6240;&#x6709;&#x7684;&#x7F16;&#x8BD1;&#x5DE5;&#x4F5C;&#x3002;&#x4EE5;&#x4E0B;&#x7ED9;&#x51FA;&#x4E86;&#x4E00;&#x4E2A;&#x4F8B;&#x5B50;&#xFF0C;&#x4EE5;&#x8BF4;&#x660E;&#x5982;&#x4F55;&#x6784;&#x5EFA;&#x603B;&#x63A7;Makefile&#x3002; &#x6587;&#x4EF6;&#x7ED3;&#x6784;&#x9879;&#x76EE;PRJ&#x5305;&#x542B;&#x4E86;&#x4E09;&#x4E2A;&#x5B50;&#x7A0B;&#x5E8F;&#x5305;&#x3002;&#x6BCF;&#x4E2A;&#x5B50;&#x7A0B;&#x5E8F;&#x5305;&#x90FD;&#x62E5;&#x6709;&#x81EA;&#x5DF1;&#x7684;Makefile&#xFF0C;&#x4ECE;&#x800C;&#x53EF;&#x4EE5;&#x5728;&#x5404;&#x76EE;&#x5F55;&#x4E0B;&#x4F7F;&#x7528;Make&#x5B8C;&#x6210;&#x7F16;&#x8BD1;&#x3002;&#x4F46;&#x662F;&#x8FD9;&#x6837;&#x5F88;&#x9EBB;&#x70E6;&#x3002;&#x901A;&#x8FC7;&#x6784;&#x5EFA;&#x603B;&#x63A7;Makefile(PRJ/Makefile)&#xFF0C;&#x53EF;&#x4EE5;&#x4E00;&#x6B21;&#x6027;&#x7F16;&#x8BD1;prj_sub1,prj_sub2,prj_sub3&#x4E09;&#x4E2A;&#x5B50;&#x7A0B;&#x5E8F;&#x5305;&#x3002;1234567891011121314151617PRJ/&#x251C;&#x2500;&#x2500; prj_sub1/&#x2502;&#xA0; &#x251C;&#x2500;&#x2500; a.c&#x2502;&#xA0; &#x251C;&#x2500;&#x2500; b.c&#x2502;&#xA0; &#x251C;&#x2500;&#x2500; c.c&#x2502;&#xA0; &#x2514;&#x2500;&#x2500; Makefile|&#x251C;&#x2500;&#x2500; prj_sub2/&#x2502;&#xA0; &#x251C;&#x2500;&#x2500; d.c&#x2502;&#xA0; &#x251C;&#x2500;&#x2500; e.c&#x2502;&#xA0; &#x2514;&#x2500;&#x2500; Makefile&#x251C;&#x2500;&#x2500; prj_sub3/&#x2502;&#xA0; &#x251C;&#x2500;&#x2500; f.c&#x2502;&#xA0; &#x251C;&#x2500;&#x2500; g.c&#x2502;&#xA0; &#x2514;&#x2500;&#x2500; Makefile&#x251C;&#x2500;&#x2500; ...&#x2514;&#x2500;&#x2500; Makefile &#x5B50;&#x7A0B;&#x5E8F;&#x5305;Makfile&#x5B50;&#x7A0B;&#x5E8F;&#x5305;&#x4E2D;&#x7684;Makefile&#x5305;&#x542B;&#x4E86;&#x7F16;&#x8BD1;,install,clean&#x64CD;&#x4F5C;&#x3002;&#x4EE5;&#x4E0B;&#x4F8B;&#x5B50;&#x4E2D;&#xFF0C;&#x6709;&#x5173;&#x51FD;&#x6570;foreach,&#x81EA;&#x52A8;&#x5316;&#x53D8;&#x91CF;$@ $&lt;,&#x4EE5;&#x53CA;&#x9759;&#x6001;&#x6A21;&#x5F0F;&#x7684;&#x5185;&#x5BB9;&#x53EF;&#x4EE5;&#x53C2;&#x89C1;X&#x3002;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#x53D8;&#x91CF;BIN&#x5E76;&#x6CA1;&#x6709;&#x5728;Makefile&#x4E2D;&#x58F0;&#x660E;&#x8D4B;&#x503C;&#xFF0C;&#x800C;&#x662F;&#x901A;&#x8FC7;&#x603B;&#x63A7;Makefile&#x4E2D;&#x7684;export&#x6765;&#x4F20;&#x9012;&#x3002;123456789101112131415161718#Makefile for prj_sub1/CC = gccEXEC = a b cOBJ = $(foreach exe, ${EXEC}, ${exe}.o)all: ${OBJ} ${EXEC}${EXEC}:%:%.o ${CC} -o $@ $&lt;${OBJ}:%.o:%.c ${CC} -c -o $@ $&lt;install: cp ${EXEC} ${BIN}clean: rm ${EXEC} ${OBJ} &#x603B;&#x63A7;Makefile123456789101112131415161718192021export BIN=../binSUBS = prj_sub1 prj_sub2 prj_sub3SUBS_make = $(foreach sub, ${SUBS}, ${sub}.make)SUBS_clean = $(foreach sub, ${SUBS}, ${sub}.clean)SUBS_install = $(foreach sub, ${SUBS}, ${sub}.install)all: ${SUBS_make}${SUBS_make}:%.make:% make -C $&lt;install: ${SUBS_install}${SUBS_install}:%.install:% -make -C $&lt; installclean: ${SUBS_clean}${SUBS_clean}:%.clean:% -make -C $&lt; clean &#x603B;&#x63A7;Makefile&#x4E00;&#x6B21;&#x6027;&#x7F16;&#x8BD1;&#x4E86;prj_sub1,prj_sub2,prj_sub3&#x4E09;&#x4E2A;&#x5B50;&#x7A0B;&#x5E8F;&#x5305;&#x3002;&#x9996;&#x5148;&#x5BF9;&#x53D8;&#x91CF;SUBS_make&#x8D4B;&#x503C;&#xFF0C;&#x4E3A;prj_sub1.make prj_sub2.make prj_sub3.make&#x3002;&#x7C7B;&#x4F3C;&#x7684;&#xFF0C;&#x5B8C;&#x6210;&#x53D8;&#x91CF;SUBS_clean&#xFF0C;SUBS_install&#x7684;&#x8D4B;&#x503C;&#x3002;&#x968F;&#x540E;&#xFF0C;&#x5728;&#x7F16;&#x8BD1;&#x4E2D;&#xFF0C;${SUBS_make}:%.make:%&#x58F0;&#x660E;&#x4ECE;&#x53D8;&#x91CF;SUBS_make&#x4E2D;&#x9010;&#x6B21;&#x63D0;&#x53D6;&#x4EE5;.make&#x7ED3;&#x5C3E;&#x7684;&#x5B57;&#x6BB5;&#x4F5C;&#x4E3A;&#x7F16;&#x8BD1;&#x76EE;&#x6807;&#xFF0C;&#x53BB;&#x6389;.make&#x4E4B;&#x540E;&#x7684;&#x5185;&#x5BB9;&#x4F5C;&#x4E3A;&#x7F16;&#x8BD1;&#x4F9D;&#x8D56;&#x9879;&#x76EE;&#xFF0C;&#x8FDB;&#x800C;&#x5229;&#x7528;make -C $&lt;&#x5B8C;&#x6210;&#x7F16;&#x8BD1;&#x3002;&#x7B2C;10,11&#x884C;&#x7B49;&#x4EF7;&#x4E8E;&#xFF1A; 12345678prj_sub1.make: prj_sub1 make -C prj_sub1prj_sub2.make: prj_sub2 make -C prj_sub2prj_sub3.make: prj_sub3 make -C prj_sub3 make -C prj_sub1&#x7B49;&#x4EF7;&#x4E8E;cd prj_sub1; make&#x3002;&#x5176;&#x76F8;&#x5F53;&#x4E8E;&#x5148;&#x8FDB;&#x5165;&#x76EE;&#x5F55;prj_sub1&#xFF0C;&#x7136;&#x540E;&#x6267;&#x884C;make&#x547D;&#x4EE4;&#x3002;&#x4E0E;&#x7F16;&#x8BD1;&#x7C7B;&#x4F3C;&#xFF0C;install&#x4E0E;clean&#x64CD;&#x4F5C;&#x4E00;&#x6B21;&#x6027;&#x5B8C;&#x6210;&#x6240;&#x6709;&#x5B50;&#x7A0B;&#x5E8F;&#x5305;&#x7684;&#x5B89;&#x88C5;&#x53CA;&#x6E05;&#x7406;&#x64CD;&#x4F5C;&#x3002;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x5229;&#x7528;export BIN=../bin&#xFF0C;&#x5C06;&#x53D8;&#x91CF;BIN&#x4F20;&#x9012;&#x81F3;&#x88AB;&#x8C03;&#x7528;Makefile&#x3002;","raw":null,"content":null,"categories":[{"name":"Programming","slug":"Programming","permalink":"http://sheng09.github.io/categories/Programming/"}],"tags":[{"name":"Programming","slug":"Programming","permalink":"http://sheng09.github.io/tags/Programming/"},{"name":"Makefile","slug":"Makefile","permalink":"http://sheng09.github.io/tags/Makefile/"},{"name":"Linux","slug":"Linux","permalink":"http://sheng09.github.io/tags/Linux/"},{"name":"Compiling","slug":"Compiling","permalink":"http://sheng09.github.io/tags/Compiling/"}]},{"title":"怎么在linux下压缩和解压文件","slug":"unpack-in-linux","date":"2016-06-08T16:34:36.000Z","updated":"2016-10-10T01:55:18.396Z","comments":true,"path":"2016/06/09/unpack-in-linux/","link":"","permalink":"http://sheng09.github.io/2016/06/09/unpack-in-linux/","excerpt":"&#x6B64;&#x6587;&#x662F;&#x5199;&#x7ED9;&#x5446;&#x840C;&#x5973;&#x670B;&#x53CB;&#x7684;&#x3002;","text":"&#x6B64;&#x6587;&#x662F;&#x5199;&#x7ED9;&#x5446;&#x840C;&#x5973;&#x670B;&#x53CB;&#x7684;&#x3002; tar.gz tar.bz2 zip rar &#x540E;&#x7F00;&#x540D;&#x8BF4;&#x660E; tar.gz1.&#x4F7F;&#x7528;tar&#x6253;&#x5305;&#x5E76;&#x538B;&#x7F29;&#x6587;&#x4EF6;(&#x5939;)1$ tar -cvzf test.tar.gz test &#x53EF;&#x4EE5;&#x5C06;test&#x6253;&#x5305;&#x538B;&#x7F29;&#x5E76;&#x751F;&#x4EA7;test.tar.gz&#xFF0C;test&#x53EF;&#x4EE5;&#x662F;&#x6587;&#x4EF6;&#x5939;&#x4E5F;&#x53EF;&#x4EE5;&#x662F;&#x6587;&#x4EF6;&#x3002;&#x5207;&#x8BB0;&#xFF0C;&#x88AB;&#x538B;&#x7F29;&#x6587;&#x4EF6;&#x4E0E;&#x538B;&#x7F29;&#x8F93;&#x51FA;&#x6587;&#x4EF6;&#x4E0D;&#x8981;&#x5199;&#x53CD;&#x4E86;&#xFF0C;&#x5426;&#x5219;&#x88AB;&#x538B;&#x7F29;&#x6587;&#x4EF6;&#x4F1A;&#x88AB;&#x8986;&#x76D6;&#x4ECE;&#x800C;&#x4E22;&#x5931;&#xFF01; 2.&#x89E3;&#x5305;&#x5E76;&#x89E3;&#x538B; .tar.gz1$ tar -xvzf test.tar.gz tar.bz21.&#x4F7F;&#x7528;tar&#x6253;&#x5305;&#x5E76;&#x538B;&#x7F29;&#x6587;&#x4EF6;(&#x5939;)1$ tar -cjzf test.tar.bz2 test &#x53EF;&#x4EE5;&#x5C06;test&#x6253;&#x5305;&#x538B;&#x7F29;&#x5E76;&#x751F;&#x4EA7;test.tar.bz&#xFF0C;test&#x53EF;&#x4EE5;&#x662F;&#x6587;&#x4EF6;&#x5939;&#x4E5F;&#x53EF;&#x4EE5;&#x662F;&#x6587;&#x4EF6;&#x3002; 2.&#x89E3;&#x5305;&#x5E76;&#x89E3;&#x538B; .tar.bz1$ tar -xjzf test.tar.bz2 zip1.&#x4F7F;&#x7528;zip&#x538B;&#x7F29;1$ zip -r test.zip test &#x5C06;test&#x6253;&#x5305;&#x538B;&#x7F29;&#x5E76;&#x751F;&#x4EA7;test.zip&#xFF0C;test&#x53EF;&#x4EE5;&#x662F;&#x6587;&#x4EF6;&#x5939;&#x4E5F;&#x53EF;&#x4EE5;&#x662F;&#x6587;&#x4EF6;&#xFF1B; 2.&#x89E3;&#x538B;zip1$ unzip test.zip rar&#x6700;&#x597D;&#x4E0D;&#x8981;&#x7528;rar&#xFF0C;rar&#x538B;&#x7F29;&#x7B97;&#x6CD5;&#x4E0D;&#x662F;&#x5F00;&#x6E90;&#x7684;&#xFF0C;&#x6240;&#x4EE5;linux&#x4E2D;&#x9ED8;&#x8BA4;&#x53EF;&#x80FD;&#x6CA1;&#x6709;&#x5904;&#x7406;rar&#x7684;&#x5DE5;&#x5177;&#x3002;&#x5018;&#x82E5;&#x5F3A;&#x884C;&#x9700;&#x6C42;&#xFF0C;&#x53EF;&#x4EE5;&#x5148;&#x5B89;&#x88C5;rarubuntu&#x4E2D;&#x5B89;&#x88C5;&#x547D;&#x4EE4;&#x5982;&#x4E0B;&#xFF1A;1$ sudo apt-get install rar 1.&#x4F7F;&#x7528;rar&#x538B;&#x7F29;&#x6587;&#x4EF6;&#x6216;&#x6587;&#x4EF6;&#x5939;1$ rar a test.rar test &#x53EF;&#x4EE5;&#x5C06;test&#x6253;&#x5305;&#x538B;&#x7F29;&#x5E76;&#x751F;&#x4EA7;test.rar&#xFF0C;test&#x53EF;&#x4EE5;&#x662F;&#x6587;&#x4EF6;&#x5939;&#x4E5F;&#x53EF;&#x4EE5;&#x662F;&#x6587;&#x4EF6;&#xFF1B; 2.&#x89E3;&#x538B;rar1$ rar x test.rar &#x540E;&#x7F00;&#x540D;&#x8BF4;&#x660E;&#x4E00;&#x822C;&#x60C5;&#x51B5;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x540E;&#x7F00;&#x540D;&#x6765;&#x5224;&#x65AD;&#x9700;&#x8981;&#x7528;&#x4EC0;&#x4E48;&#x8F6F;&#x4EF6;&#x6765;&#x89E3;&#x538B;&#x3002;.tar.gz &#x6216;&#x8005;.tgz&#x7684;&#x540E;&#x7F00;&#x90FD;&#x662F;&#x7528;tar&#x64CD;&#x4F5C;&#x7684;&#x3002; &#x800C;.zip&#x540E;&#x7F00;&#x540D;&#x663E;&#x7136;&#x662F;zip&#x64CD;&#x4F5C;&#x7684;&#x3002; .rar&#x540E;&#x7F00;&#x540D;&#x663E;&#x7136;&#x662F;rar&#x64CD;&#x4F5C;&#x7684;&#x81EA;&#x5DF1;&#x6253;&#x5305;&#x538B;&#x7F29;&#x6587;&#x4EF6;&#x65F6;&#x5019;&#xFF0C;&#x4E00;&#x5B9A;&#x8981;&#x5199;&#x540E;&#x7F00;&#x540D;&#xFF0C;&#x5176;&#x4ED6;&#x4EBA;&#x770B;&#x5230;&#x540E;&#x7F00;&#x540D;&#x5C31;&#x53EF;&#x4EE5;&#x77E5;&#x9053;&#x5E94;&#x8BE5;&#x7528;&#x90A3;&#x4E2A;&#x89E3;&#x538B;&#x5DE5;&#x5177;&#x3002;","raw":null,"content":null,"categories":[{"name":"Linux工具及配置","slug":"Linux工具及配置","permalink":"http://sheng09.github.io/categories/Linux工具及配置/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://sheng09.github.io/tags/Linux/"}]},{"title":"Linux终端美化","slug":"fancy-terminal","date":"2016-06-08T15:29:05.000Z","updated":"2016-06-14T14:08:58.681Z","comments":true,"path":"2016/06/08/fancy-terminal/","link":"","permalink":"http://sheng09.github.io/2016/06/08/fancy-terminal/","excerpt":"&#x4E0D;&#x77E5;&#x9053;&#x4F60;&#x662F;&#x4E0D;&#x662F;&#x53D7;&#x591F;&#x4E86;Linux&#x7EC8;&#x7AEF;&#x7684;&#x4E11;&#x964B;&#x3002;&#x9ED1;&#x8272;&#x886C;&#x5E95;&#x914D;&#x4E0A;&#x523A;&#x773C;&#x7684;&#x989C;&#x8272;&#x548C;&#x5947;&#x602A;&#x7684;&#x5B57;&#x4F53;&#xFF0C;&#x662F;&#x9ED8;&#x8BA4;Linux&#x7684;&#x7EC8;&#x7AEF;&#x5916;&#x89C2;&#x3002;&#x5982;&#x679C;&#x4F60;&#x957F;&#x671F;&#x9700;&#x8981;&#x5728;Linux&#x4E0B;&#x4F5C;&#x4E1A;&#xFF0C;&#x90A3;&#x4E48;&#x4E00;&#x4E2A;&#x517B;&#x773C;&#x7684;&#x7EC8;&#x7AEF;&#x5E26;&#x6765;&#x7684;&#x5C06;&#x662F;&#x8EAB;&#x5FC3;&#x6109;&#x60A6;&#xFF0C;&#x6548;&#x7387;&#x7FFB;&#x500D;&#xFF0C;&#x6BD5;&#x7ADF;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x51E1;&#x4E8B;&#x770B;&#x8138;&#x7684;&#x65F6;&#x4EE3;&#xFF0C;&#x989C;&#x5373;&#x6B63;&#x4E49;&#x3002;","text":"&#x4E0D;&#x77E5;&#x9053;&#x4F60;&#x662F;&#x4E0D;&#x662F;&#x53D7;&#x591F;&#x4E86;Linux&#x7EC8;&#x7AEF;&#x7684;&#x4E11;&#x964B;&#x3002;&#x9ED1;&#x8272;&#x886C;&#x5E95;&#x914D;&#x4E0A;&#x523A;&#x773C;&#x7684;&#x989C;&#x8272;&#x548C;&#x5947;&#x602A;&#x7684;&#x5B57;&#x4F53;&#xFF0C;&#x662F;&#x9ED8;&#x8BA4;Linux&#x7684;&#x7EC8;&#x7AEF;&#x5916;&#x89C2;&#x3002;&#x5982;&#x679C;&#x4F60;&#x957F;&#x671F;&#x9700;&#x8981;&#x5728;Linux&#x4E0B;&#x4F5C;&#x4E1A;&#xFF0C;&#x90A3;&#x4E48;&#x4E00;&#x4E2A;&#x517B;&#x773C;&#x7684;&#x7EC8;&#x7AEF;&#x5E26;&#x6765;&#x7684;&#x5C06;&#x662F;&#x8EAB;&#x5FC3;&#x6109;&#x60A6;&#xFF0C;&#x6548;&#x7387;&#x7FFB;&#x500D;&#xFF0C;&#x6BD5;&#x7ADF;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x51E1;&#x4E8B;&#x770B;&#x8138;&#x7684;&#x65F6;&#x4EE3;&#xFF0C;&#x989C;&#x5373;&#x6B63;&#x4E49;&#x3002; &#x914D;&#x8272;&#x65B9;&#x6848; &#x63D0;&#x793A;&#x7B26; &#x7EC8;&#x7AEF;&#x80CC;&#x666F; &#x53C2;&#x8003; &#x914D;&#x8272;&#x65B9;&#x6848;&#x9ED8;&#x8BA4;&#x914D;&#x8272;&#x5927;&#x591A;&#x6307;&#x5411;16&#x4F4D;&#x8272;&#x5F69;&#x65B9;&#x6848;&#xFF0C;&#x5728;&#x5E26;&#x7ED9;&#x65B0;&#x4EBA;&#x4E00;&#x79CD;geek&#x7684;&#x611F;&#x89C9;&#x4E4B;&#x540E;&#xFF0C;&#x65F6;&#x523B;&#x51B2;&#x51FB;&#x7740;&#x7528;&#x6237;&#x89C6;&#x89C9;&#x795E;&#x7ECF;&#x3002;&#x90A3;&#x4E48;&#x6765;&#x8BD5;&#x8BD5;dircolors-solarized&#x5427;&#x3002; &#x5728;dircolors-solarized&#x9879;&#x76EE;&#x4E3B;&#x9875;&#x4E0B;&#x8F7D;&#x914D;&#x8272;&#x65B9;&#x6848;&#x3002;&#x89E3;&#x538B;&#x540E;&#x53EF;&#x4EE5;&#x53D1;&#x73B0;&#x6587;&#x4EF6;&#x5939;&#x5185;&#x5305;&#x542B;&#x4E86;&#x4E0D;&#x540C;&#x7684;&#x914D;&#x8272;&#x8BBE;&#x7F6E;&#x6587;&#x4EF6;&#xFF0C;&#x4EE5;&#x5176;&#x4E2D;&#x7684;dircolors.ansi-dark&#x4E3A;&#x4F8B;&#xFF0C;&#x5728;~/.basrc(&#x6216;&#x8005;~/.profile)&#x4E2D;&#x6DFB;&#x52A0;&#x4EE5;&#x4E0B;&#x5185;&#x5BB9;&#xFF1A; 1eval `dircolors /path/to/your/dircolors.ansi-dark` &#x5728;&#x7EC8;&#x7AEF;&#x4E2D;source&#x4E00;&#x4E0B;&#xFF0C;&#x6216;&#x8005;&#x5173;&#x95ED;&#x91CD;&#x542F;&#x4EE5;&#x4E0B;&#x7EC8;&#x7AEF;&#xFF0C;&#x914D;&#x8272;&#x662F;&#x4E0D;&#x662F;&#x53D8;&#x4E86;&#xFF1F; &#x63D0;&#x793A;&#x7B26;&#x5728;&#x7EC8;&#x7AEF;&#x91CC;&#xFF0C;&#x9ED8;&#x8BA4;&#x7684;&#x63D0;&#x793A;&#x7B26;&#x5305;&#x542B;&#x4E86;&#x5F53;&#x524D;&#x8DEF;&#x5F84;&#x53CA;&#x7528;&#x6237;&#x767B;&#x9646;&#x4FE1;&#x606F;&#xFF0C;&#x81C3;&#x80BF;&#x800C;&#x53C8;&#x96BE;&#x770B;&#x3002;&#x8BD5;&#x8BD5;&#x518D;~/.basrc(&#x6216;&#x8005;~/.profile)&#x4E2D;&#x6DFB;&#x52A0;&#x4EE5;&#x4E0B;&#x5185;&#x5BB9;&#xFF1A;1PS1=&apos;`a=$?;if [ $a -ne 0 ]; then a=&quot; &quot;$a; echo -ne &quot;\\[\\e[s\\e[1A\\e[$((COLUMNS-2))G\\e[31m\\e[0;41m${a:(-3)}\\e[u\\]\\[\\e[0m\\e[7m\\e[2m\\]&quot;; fi`\\[\\e[1;35m\\]Fa\\[\\e[1;33m\\]nc\\[\\e[1;32m\\]y \\[\\e[0m\\e[1;36m\\]\\u \\[\\e[0;34m\\]\\$ \\[\\e[0m\\]&apos; &#x5728;&#x7EC8;&#x7AEF;&#x4E2D;source&#x4E00;&#x4E0B;&#xFF0C;&#x6216;&#x8005;&#x5173;&#x95ED;&#x91CD;&#x542F;&#x4EE5;&#x4E0B;&#x7EC8;&#x7AEF;&#xFF0C;&#x770B;&#x4E00;&#x770B;&#x65B0;&#x7684;&#x63D0;&#x793A;&#x7B26;&#x3002;&#x4EE5;\\[\\e[1;35m\\]Fa&#x4E3A;&#x4F8B;&#xFF0C;&#x5B57;&#x6BB5;&#xFF0C;&#x5B57;&#x6BB5;1;35&#x5206;&#x522B;&#x58F0;&#x660E;&#x4E86;Fa&#x7684;&#x989C;&#x8272;&#x4E0E;&#x5B57;&#x4F53;&#x65B9;&#x6848;&#x3002;&#x9664;&#x4E86;&#x4F7F;&#x7528;&#x7C7B;&#x4F3C;&#x4E8E;Fa&#x7684;&#x666E;&#x901A;&#x6587;&#x672C;&#x5185;&#x5BB9;&#xFF0C;&#x8FD8;&#x6709;&#x4EE5;&#x4E0B;&#x7279;&#x6B8A;&#x7B26;&#x53F7;&#xFF1A;&#x3000;&#x3000;\\d :&#x4EE3;&#x8868;&#x65E5;&#x671F;&#xFF0C;&#x683C;&#x5F0F;&#x4E3A;weekday month date&#xFF0C;&#x4F8B;&#x5982;&#xFF1A;&#x201D;Mon Aug 1&#x201D;&#x3000;&#x3000;\\H :&#x5B8C;&#x6574;&#x7684;&#x4E3B;&#x673A;&#x540D;&#x79F0;&#x3002;&#x4F8B;&#x5982;&#xFF1A;&#x6211;&#x7684;&#x673A;&#x5668;&#x540D;&#x79F0;&#x4E3A;&#xFF1A;fc4.linux&#xFF0C;&#x5219;&#x8FD9;&#x4E2A;&#x540D;&#x79F0;&#x5C31;&#x662F;fc4.linux&#x3000;&#x3000;\\h :&#x4EC5;&#x53D6;&#x4E3B;&#x673A;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x540D;&#x5B57;&#xFF0C;&#x5982;&#x4E0A;&#x4F8B;&#xFF0C;&#x5219;&#x4E3A;fc4&#xFF0C;.linux&#x5219;&#x88AB;&#x7701;&#x7565;&#x3000;&#x3000;\\t :&#x663E;&#x793A;&#x65F6;&#x95F4;&#x4E3A;24&#x5C0F;&#x65F6;&#x683C;&#x5F0F;&#xFF0C;&#x5982;&#xFF1A;HH&#xFF1A;MM&#xFF1A;SS&#x3000;&#x3000;\\T :&#x663E;&#x793A;&#x65F6;&#x95F4;&#x4E3A;12&#x5C0F;&#x65F6;&#x683C;&#x5F0F;&#x3000;&#x3000;\\A :&#x663E;&#x793A;&#x65F6;&#x95F4;&#x4E3A;24&#x5C0F;&#x65F6;&#x683C;&#x5F0F;&#xFF1A;HH&#xFF1A;MM&#x3000;&#x3000;\\u :&#x5F53;&#x524D;&#x7528;&#x6237;&#x7684;&#x8D26;&#x53F7;&#x540D;&#x79F0;&#x3000;&#x3000;\\v :BASH&#x7684;&#x7248;&#x672C;&#x4FE1;&#x606F;&#x3000;&#x3000;\\w :&#x5B8C;&#x6574;&#x7684;&#x5DE5;&#x4F5C;&#x76EE;&#x5F55;&#x540D;&#x79F0;&#x3002;&#x5BB6;&#x76EE;&#x5F55;&#x4F1A;&#x4EE5; ~&#x4EE3;&#x66FF;&#x3000;&#x3000;\\W :&#x5229;&#x7528;basename&#x53D6;&#x5F97;&#x5DE5;&#x4F5C;&#x76EE;&#x5F55;&#x540D;&#x79F0;&#xFF0C;&#x6240;&#x4EE5;&#x53EA;&#x4F1A;&#x5217;&#x51FA;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x76EE;&#x5F55;&#x3000;&#x3000;\\# :&#x4E0B;&#x8FBE;&#x7684;&#x7B2C;&#x51E0;&#x4E2A;&#x547D;&#x4EE4;&#x3000;&#x3000;\\$ :&#x63D0;&#x793A;&#x5B57;&#x7B26;&#xFF0C;&#x5982;&#x679C;&#x662F;root&#x65F6;&#xFF0C;&#x63D0;&#x793A;&#x7B26;&#x4E3A;&#xFF1A;# &#xFF0C;&#x666E;&#x901A;&#x7528;&#x6237;&#x5219;&#x4E3A;&#xFF1A;$ &#x7EC8;&#x7AEF;&#x80CC;&#x666F;&#x7EC8;&#x7AEF;&#x80CC;&#x666F;&#x4E00;&#x822C;&#x9ED8;&#x8BA4;&#x7EAF;&#x8272;&#xFF0C;&#x4E14;&#x5927;&#x591A;&#x4E3A;&#x9ED1;&#x8272;&#x548C;&#x767D;&#x8272;&#x3002;&#x53EF;&#x4EE5;&#x518D;&#x7EC8;&#x7AEF;&#x7684;&#x201C;&#x8BBE;&#x7F6E;&#x201D;&#x4E2D;&#x5F00;&#x542F;&#x80CC;&#x666F;&#x900F;&#x660E;&#xFF0C;&#x5E76;&#x9009;&#x62E9;&#x5408;&#x9002;&#x7684;&#x900F;&#x660E;&#x5EA6;&#xFF0C;&#x518D;&#x6311;&#x9009;&#x4E00;&#x5F20;&#x7B80;&#x7EA6;&#x7684;&#x6DF1;&#x8272;&#x56FE;&#x7247;&#x505A;&#x684C;&#x9762;&#x80CC;&#x666F;&#x3002; &#x901A;&#x8FC7;&#x4EE5;&#x4E0A;&#x7684;&#x8BBE;&#x7F6E;&#xFF0C;&#x662F;&#x4E0D;&#x662F;&#x53D1;&#x73B0;&#x7EC8;&#x7AEF;&#x597D;&#x770B;&#x4E86;&#x5F88;&#x591A;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x6709;&#x5F97;&#x610F;&#x7684;&#x7F8E;&#x5316;&#x65B9;&#x6848;&#x914D;&#x7F6E;&#xFF0C;&#x8BF7;&#x81F4;&#x4FE1;wangsheng.cas@gmail.com&#x8BA8;&#x8BBA;&#x4EA4;&#x6D41;&#x3002; &#x53C2;&#x8003;linux PS1 &#x63D0;&#x793A;&#x7B26;&#x5B9A;&#x4E49;http://www.cnblogs.com/starspace/archive/2009/02/21/1395382.htmldircolors-solarized&#x9879;&#x76EE;&#x4E3B;&#x9875;https://github.com/seebi/dircolors-solarized","raw":null,"content":null,"categories":[{"name":"Linux工具及配置","slug":"Linux工具及配置","permalink":"http://sheng09.github.io/categories/Linux工具及配置/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://sheng09.github.io/tags/Linux/"},{"name":"Terminal","slug":"Terminal","permalink":"http://sheng09.github.io/tags/Terminal/"}]},{"title":"使用github和hexo搭建静态博客","slug":"install-and-config","date":"2016-06-08T14:48:22.000Z","updated":"2016-06-14T14:09:26.205Z","comments":true,"path":"2016/06/08/install-and-config/","link":"","permalink":"http://sheng09.github.io/2016/06/08/install-and-config/","excerpt":"Hello World","text":"Hello World github&#x6CE8;&#x518C;&#x53CA;&#x5EFA;&#x7ACB;&#x4ED3;&#x50A8; &#x5728;github&#x4E3B;&#x9875;&#x5B8C;&#x6210;&#x6CE8;&#x518C;; &#x9A8C;&#x8BC1;&#x90AE;&#x7BB1;; &#x521B;&#x5EFA;&#x4ED3;&#x50A8;&#xFF0C;&#x5176;&#x4E2D;repository name&#x5FC5;&#x987B;&#x4E3A;username.github.io; git&#x7684;&#x5B89;&#x88C5;&#x53CA;&#x6DFB;&#x52A0;ssh-key&#x5728;ubuntu&#x4E0B;&#xFF0C;&#x4F7F;&#x7528;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;&#x5B89;&#x88C5;git:123$ sudo apt-get install git$ git config --global user.email &quot;Your emaill address&quot;$ git config --global user.name &quot;Your username on github.com&quot; &#x4F7F;&#x7528;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;&#x751F;&#x4EA7;ssh-key1$ ssh-keygen -t rsa -C &quot;Your email address&quot;&#x3000;#&#x9700;&#x8981;&#x6307;&#x5B9A;key&#x6587;&#x4EF6;&#x540D;&#xFF0C;&#x4F7F;&#x7528;&#x9ED8;&#x8BA4;&#x5373;&#x53EF; &#x9ED8;&#x8BA4;&#x751F;&#x6210;&#x7684;ssh-key&#x6587;&#x4EF6;&#x4F4D;&#x4E8E;~/.ssh/&#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x5176;&#x4E2D;&#x7684;id_rsa&#x548C;id_rsa.pub&#x4E3A;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x7684;&#x6587;&#x4EF6;&#x3002;&#x5C06;id_rsa.pub&#x6587;&#x4EF6;&#x7684;&#x6587;&#x672C;&#x5185;&#x5BB9;&#x6DFB;&#x52A0;&#x5230;github&#x7684;ssh-key&#x4E2D;&#x3002;&#x4F7F;&#x7528;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;&#x6D4B;&#x8BD5;&#x662F;&#x5426;&#x6210;&#x529F;:1$ ssh -T git@github.com hexo&#x7684;&#x5B89;&#x88C5;1.&#x5B89;&#x88C5;nvm1$ wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh 2.&#x5B89;&#x88C5;node.js1234$ nvm install v3.3$ nvm ls #List installed versions$ nvm use 3.3$ nvm current #Display currently activated version 3.&#x5B89;&#x88C5;hexo1$ npm install -g hexo &#x672C;&#x5730;hexo&#x521D;&#x59CB;&#x5316;1.&#x521D;&#x59CB;&#x5316;hexo&#x76EE;&#x5F55;12$ hexo init ~/myblog$ npm install 2.&#x751F;&#x6210;&#x9759;&#x6001;&#x6587;&#x4EF6;1$ hexo g 3.&#x672C;&#x5730;&#x670D;&#x52A1;&#x5668;&#x9884;&#x89C8;1$ hexo s #&#x6253;&#x5F00;&#x6D4F;&#x89C8;&#x5668;&#x901A;&#x8FC7;http://0.0.0.0:4000/&#x8BBF;&#x95EE;&#x67E5;&#x770B; &#x53D1;&#x5E03;1.&#x5B89;&#x88C5;hexo-deployer-git1$ npm install hexo-cli -g 2.&#x5728;&#x535A;&#x5BA2;&#x76EE;&#x5F55;&#x4E0B;&#x627E;&#x5230;_config.yml&#x6587;&#x4EF6;&#xFF0C;&#x6DFB;&#x52A0;&#x6216;&#x4FEE;&#x6539;:12345deploy: type: git repo: git@github.com:USERNAME/USERNAME.github.io.git branch: master message: &quot;g&quot; &#x6CE8;&#x610F;&#xFF0C;&#x6240;&#x6709;&#x7684;&#x5192;&#x53F7;&#x540E;&#x9762;&#x5FC5;&#x987B;&#x6709;&#x7A7A;&#x683C;&#xFF01;&#xFF01;&#xFF01;3.&#x53D1;&#x5E03;12$ hexo g$ hexo d &#x9884;&#x89C8;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x4E2D;&#x6253;&#x5F00;http://USERNAME.github.io.git&#x9875;&#x9762;&#x8BBF;&#x95EE;&#x9759;&#x6001;&#x535A;&#x5BA2;&#x3002; &#x6DFB;&#x52A0;&#x535A;&#x5BA2;&#x6587;&#x7AE0;&#x5E76;&#x53D1;&#x5E03;&#x4F7F;&#x7528;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;&#x6DFB;&#x52A0;&#x65B0;&#x7684;&#x6587;&#x7AE0;&#x81F3;&#x76EE;&#x5F55;\\source\\_posts\\:1$ hexo new &quot;article1&quot; &#x968F;&#x540E;&#x53EF;&#x4EE5;&#x5728;&#x76EE;&#x5F55;\\source\\_posts\\&#x4E2D;&#x627E;&#x5230;markdown&#x683C;&#x5F0F;&#x6587;&#x4EF6;article1.md&#x3002;&#x53EF;&#x4EE5;&#x4E66;&#x5199;&#x5E76;&#x4FEE;&#x6539;&#x5176;&#x5185;&#x5BB9;&#xFF0C;&#x7136;&#x540E;&#x4F7F;&#x7528;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;&#x53D1;&#x5E03;:123$ hexo clean$ hexo g$ hexo d &#x4F7F;&#x7528;&#x6570;&#x5B66;&#x516C;&#x5F0F;&#x5B89;&#x88C5;hexo-math&#xFF0C;&#x968F;&#x540E;&#x5373;&#x53EF;&#x5728;&#x6587;&#x7AE0;&#x4E2D;&#x63D2;&#x5165;&#x516C;&#x5F0F;&#x3002;1npm install hexo-math --save &#x53EF;&#x4EE5;&#x5728;hexo-math&#x9879;&#x76EE;&#x4E3B;&#x9875;&#x627E;&#x5230;&#x5982;&#x4F55;&#x63D2;&#x5165;&#x516C;&#x5F0F;&#x3002;&#x914D;&#x7F6E;&#x8FC7;&#x7A0B;&#x4E2D;&#x9047;&#x5230;&#x7684;&#x95EE;&#x9898;&#xFF1A;How to config it to make it work? #26&#x6CE8;&#x610F;&#xFF0C;hexo-math&#x4FDD;&#x6301;&#x66F4;&#x65B0;&#xFF0C;&#x4E14;&#x4E0D;&#x540C;&#x7248;&#x672C;&#x7684;&#x5B89;&#x88C5;&#x4E0E;&#x914D;&#x7F6E;&#x5B58;&#x5728;&#x533A;&#x522B;&#xFF0C;&#x5728;Google&#x4E0A;&#x641C;&#x7D22;&#x5230;&#x7684;&#x7ED3;&#x679C;&#x53EF;&#x80FD;&#x5DF2;&#x7ECF;&#x5F03;&#x7528;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x4EE5;&#x9879;&#x76EE;&#x4E3B;&#x9875;&#x8BF4;&#x660E;&#x4E3A;&#x51C6;&#x3002; &#x53C2;&#x8003;github&#x6CE8;&#x518C;&#x4E0E;&#x5165;&#x95E8;http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000&#x642D;&#x5EFA;&#x9759;&#x6001;&#x535A;&#x5BA2;http://blog.wpeace.cn/2015/07/22/%E4%BD%BF%E7%94%A8github%E5%92%8Chexo%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/ERROR Deployer not found: githttp://github.com/hexojs/hexo/issues/1154","raw":null,"content":null,"categories":[{"name":"Hexo","slug":"Hexo","permalink":"http://sheng09.github.io/categories/Hexo/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://sheng09.github.io/tags/Hexo/"}]},{"title":"Ray Tracing (2) Pseudo Bending Method","slug":"pseudo-bending-method","date":"2015-10-26T14:26:07.000Z","updated":"2017-01-31T05:54:01.630Z","comments":true,"path":"2015/10/26/pseudo-bending-method/","link":"","permalink":"http://sheng09.github.io/2015/10/26/pseudo-bending-method/","excerpt":"","text":"This post is about the pseudo bending method provided by Junho Um and Clifford Thurber. Test and codes are provided. IntroThe key point of bending method is ray path calibration, which could be calculated according to $\\eqref{rt1}$. \\begin{eqnarray} \\frac{d^2x_i}{ds^2} = \\frac{1}{c} ( -\\frac{dc}{dx_i} + \\frac{dc}{ds}\\frac{dx_i}{ds} ) \\label{rt1}\\\\ % T = \\int_s \\frac{1}{c}ds \\label{rt2} \\end{eqnarray}In $\\eqref{rt1}$, the left side is the ray path curvature, while the right side states the velocity gradient component normal to the ray path. This ray path curvature direction gives the calibration direction for each points: \\begin{eqnarray} \\vec{n} = \\nabla c - \\frac{\\vec{dx}}{|\\vec{dx}|^2}\\nabla c \\cdot \\vec{dx} \\label{cur} \\end{eqnarray}The amount of calibration $R_c$ is obtained by minimizing the travel time. ComputationDiscretize the seismic ray and analyze a segment of it: The travel time for discretized ray path is: \\begin{eqnarray} T = \\sum_{k=2}^{N} |\\vec{X_k} - \\vec{X_{k-1}}| \\frac{c_k+c_{k-1}}{2} \\end{eqnarray}According to $\\eqref{cur}$, the curvature direction for segment ($X{k-1}X{k+1}$) should be: \\begin{eqnarray} \\vec{n} & = & \\nabla c - \\frac{\\vec{X}_{k+1}- \\vec{X}_{k-1}} {|\\vec{X}_{k+1}- \\vec{X}_{k-1}|^2}\\nabla c \\cdot (\\vec{X}_{k+1}- \\vec{X}_{k-1}) \\label{e1} \\end{eqnarray}After having the curvature direction, a initial point is required. The mid-point is choosed, and the ideal point is $X_k&#x2019;$. Calibration amount is obtained by minimizing the travel-time of segment $X{k-1} \\rightarrow X_k&#x2019; \\rightarrow X{k+1}$. \\begin{eqnarray} R_c & = & -\\frac{c_a c_{mid} + 1}{4c_a \\vec{n}_0 \\cdot \\nabla c_{mid}} + \\sqrt{ \\Big( \\frac{c_a c_{mid}+1}{4c_a \\vec{n}_0 \\cdot \\nabla c_mid} \\Big) + \\frac{ |\\vec{X}_{k+1} - \\vec{X}_{mid}|^2}{ 2c_a c_{mid} } } \\label{e2} \\\\ c_a & = & \\frac{1}{2} \\Big( \\frac{1}{c_{k-1}} + \\frac{1}{c_{k+1}} \\Big) \\\\ \\vec{n}_0 & = & \\frac{ \\vec{n} }{|\\vec{n}|} \\end{eqnarray}For each points of the seismic ray, apply $\\eqref{e1}$ and $\\eqref{e2}$ to acquire the new point. Repeat this procedure until the traveltime converges. Moreover, more ray path control points are require for traveltime convergence. Um and Thurber provides a flow chart: Codes &amp; Test1D constant gradient modelFor one-dimensional constant velocity gradient model, the analytic ray path is an arc, the red line presented bellow. Ray paths of iteration are presented in black lines, which finally converge to the analytic ray path. Codescodes 1234bash&gt; makebash&gt; ./main &gt; path.datbash&gt; ./plot.sh # &quot;path.jpg&quot; is the image of raypathbash&gt; ReferenceUm, J.,C.H. Thurber, A fast algorithm for two-point seismic ray tracing. Bull Seismol Soc Am.Bulletin of the Seismological Society of America, 1987. 77(3).","raw":null,"content":null,"categories":[{"name":"Seismic Tomography","slug":"Seismic-Tomography","permalink":"http://sheng09.github.io/categories/Seismic-Tomography/"}],"tags":[]},{"title":"Ray Tracing (1) Derivation","slug":"RayTracing","date":"2015-10-26T08:46:59.000Z","updated":"2017-01-29T14:31:32.138Z","comments":true,"path":"2015/10/26/RayTracing/","link":"","permalink":"http://sheng09.github.io/2015/10/26/RayTracing/","excerpt":"","text":"Give acoustic wave equation $\\eqref{acoustic_wave}$, consider the harmonic solution $\\eqref{harmonic_sol}$, where $c(x_i)$ is the velocity, $T(x_i)$ the travel time. \\begin{eqnarray} \\nabla^2\\phi & = & \\frac{1}{c^2(x_i)}\\phi \\label{acoustic_wave} \\end{eqnarray} \\begin{eqnarray} \\phi(x_i) & = & \\Phi(x_i)exp[-i\\omega(t-T(x_i))] \\label{harmonic_sol} \\end{eqnarray}Applying the high frequency approximation, eikonal equation$\\eqref{eikonal_eq}$ and transport equation $\\eqref{transport_eq}$ are derived. $\\textbf{p}$, the slowness vector, which is perpendicular to the wavefront, the contour of travel time $T$, declares the propagation direction of waves. \\begin{cases} \\begin{eqnarray} & & p_ip_i = \\frac{1}{c^2(x_i)} \\label{eikonal_eq} \\\\ & & p_i = (\\nabla T)_i \\\\ & & 2 \\nabla \\Phi \\cdot \\nabla T+ \\Phi \\nabla^2T = 0 \\label{transport_eq} \\end{eqnarray} \\end{cases}Build Hamilton equation for eikonal equation, where $s$ declares the ray path. \\begin{cases} \\begin{eqnarray} H(x_i, p_i) & = & (p_ip_i)^{1/2} - c^{-1}(x_i) \\label{hamilton_eq} \\\\ \\frac{dx_i}{ds} & = & \\frac{\\partial H}{\\partial p_i} \\\\ \\frac{dp_i}{ds} & = & \\frac{\\partial H}{\\partial x_i} \\\\ \\frac{dT}{d} & = & p_i \\frac{\\partial H}{\\partial p_i} \\end{eqnarray} \\end{cases}Derivation ends here. In the right side of $\\eqref{rt1}$, $\\frac{dc}{dx_i}$ is the velocity gradient, $\\frac{dc}{ds}\\frac{dx_i}{ds}$ the projection of velocity gradient along ray path. In the left side, $\\frac{d^2x_i}{ds^2}$ declares the curvature direction of ray path. Thus, the direction change of ray path can be calculated given the velocity gradient and ray path direction. Or, given a initial ray path direction, we could derive each segments of ray path. \\begin{eqnarray} \\frac{d^2x_i}{ds^2} = \\frac{1}{c} ( -\\frac{dc}{dx_i} + \\frac{dc}{ds}\\frac{dx_i}{ds} ) \\label{rt1}\\\\ % T = \\int_s \\frac{1}{c}ds \\label{rt2} \\end{eqnarray}However, the boundary condition problem, the two-point ray tracing problem, but not initial condition problem is much more prevalent. It could be solved using iteration, and the ray path is calibrated in each step according to $\\eqref{rt1}$. This is bending method. ReferenceCerveny, V.,M.G. Brown, Seismic Ray Theory. Applied Mechanics Reviews, 2002. 55(6): p.14.","raw":null,"content":null,"categories":[{"name":"Seismic Tomography","slug":"Seismic-Tomography","permalink":"http://sheng09.github.io/categories/Seismic-Tomography/"}],"tags":[]},{"title":"Const Reference in Function Parameters","slug":"const_reference","date":"2015-05-21T09:07:40.000Z","updated":"2017-02-02T07:55:18.654Z","comments":true,"path":"2015/05/21/const_reference/","link":"","permalink":"http://sheng09.github.io/2015/05/21/const_reference/","excerpt":"This post presents tips of using const reference in functions. Examples are presented for wrong using.","text":"This post presents tips of using const reference in functions. Examples are presented for wrong using. In Function Parameters In Class Methods Conclusions and Tips In Function Parametersreference is used to declare the formal parameters in a function, in order to speed up programs. However, a const argument may bepassed into this function, then compiling fails. This is because &#x201C;constructing a reference to a const variable&#x201D; is wrong. The resolutionis &#x201C;construting a const reference to a const variable&#x201D;, or &#x201C;construting a const reference to a whatever variable&#x201D;. eg:1234567891011121314void foo(int &amp; v) {}int v1 = 1;const int v2 = 2;foo(v1); // correctfoo(v2); // wrong, passing &quot;const int&quot; to &quot;int &amp;&quot;foo(3); // wrongvoid foo2(const int &amp; v) {}foo2(v1); // correctfoo2(v2); // correctfoo2(3); // correctint&amp; foo3(const int &amp; v) {return v;} //false, passing &quot;const int&amp;&quot; to &quot;int&amp;&quot; in returnconst int&amp; foo3(const int &amp; v) {return v;} //correct In Class MethodsWhen calling a method for a class instance through its const reference, this method should be declared to be const. In example below, compiler fails and error message is passing &quot;const XX&quot; as this argument of &quot;void XX::XX()&quot; discards qualifiers.This is because a non-const methods dosth() is called on a const object rt. In other words, a const rt is passinginto non-const parameter in TEST::dosth().123456789101112131415class TEST {public: TEST() {}; ~TEST() {}; void dosth() {} // fail //void dosth() const {} // using this };int main() { TEST t; const TEST &amp;rt = t; rt.dosth(); return 0;} Conclusions and Tips Use const reference in formal parameters if reference is required. Once using const reference in formal parameters, any operations to it should be const! Use pointer but not reference if you want to pass a big data set,such as a struct instance, into a function, and you will change it. 12345678910// tip 1void fun(const int &amp; v); // use const reference, don&apos;t change v // tip 2class TEST {/*...*/}; void fun(const TEST &amp; t); // do not call non-const method for t in fun()// tip 3class DAT {/*...*/};void pro(DAT *d); // use pointer if changes is made to d in pro()","raw":null,"content":null,"categories":[{"name":"Programming","slug":"Programming","permalink":"http://sheng09.github.io/categories/Programming/"}],"tags":[{"name":"c++","slug":"c","permalink":"http://sheng09.github.io/tags/c/"}]},{"title":"Const in C/C++","slug":"const","date":"2015-01-31T09:07:40.000Z","updated":"2017-02-02T07:54:57.758Z","comments":true,"path":"2015/01/31/const/","link":"","permalink":"http://sheng09.github.io/2015/01/31/const/","excerpt":"This post introduces usage of &#x201C;const&#x201D;, especially terms of &#x201C;top-level const&#x201D; and &#x201C;low-level const&#x201D;.","text":"This post introduces usage of &#x201C;const&#x201D;, especially terms of &#x201C;top-level const&#x201D; and &#x201C;low-level const&#x201D;. Const AssociatedAssociating pointers, const is used to declare that pointer is a const, or the object pointed by it is a const. This difference leads to &#x201C;top-level const&#x201D; and &#x201C;low-level const&#x201D;.123456789101112// top-level const and low-level constint x = 10, y = 20;int * const p1 = &amp;x; // p1 is a top-level const, p1 cannot be changed, but not the object it pointsconst int *p2 = &amp;x; // p2 is a low-level const, the object pointed by p2 cannot be changed, but not p2int const *p3 = &amp;x; // equal to &quot;const int&quot;const int *const p4 = &amp;x; // neither p4 nor the object pointed by p4 can be changed*p1 = 0;p1 = &amp;y; // wrong*p2 = 0; // wrongp2 = &amp;y; The pointer that points to a const object must be a low-level const123456const int x = 99;int y = 88;int *p1 = &amp;x; // wrongconst int *p2 = &amp;x; // correct*p2 = 80; // wrongp2 = &amp;y; // correct Const in Formal ParameterIn functions, declaring a formal parameter as const follows the principle of using const for variables. The top-level const is ignored whether it is in formal or actual parameters.123456789// top-level const in actual parametervoid fun1(int i) {}void fun2(int* p) {}const int x = 0;int y = 0;int *const p = &amp;y;fun1(x); // correct, it is like &quot;int tmp = x&quot;, so whether tmp should be const or not doesn&apos;t matterfun2(p); // correct, it is like &quot;int *tmp = p&quot;, 12345678//top-level const in formal parametervoid fun1(const int i) {}void fun2(int *const p) {}int x = 0;int *p = &amp;x;fun1(x); // correctfun2(p); // correct it is like &quot;int *const tmp = p&quot;, whether p is const or not doesn&apos;t matter In TemplatePrinciples described above apply to template as well. 12345// templatetemplate &lt;class T&gt; T f(T, T);int x;const int y;f(x,y); // call f(int, int); const is ignored","raw":null,"content":null,"categories":[{"name":"Programming","slug":"Programming","permalink":"http://sheng09.github.io/categories/Programming/"}],"tags":[{"name":"c++","slug":"c","permalink":"http://sheng09.github.io/tags/c/"}]},{"title":"Multidimensional Array in C/C++","slug":"multiArray","date":"2015-01-22T13:37:45.000Z","updated":"2017-02-02T07:54:42.390Z","comments":true,"path":"2015/01/22/multiArray/","link":"","permalink":"http://sheng09.github.io/2015/01/22/multiArray/","excerpt":"This post introduce methods of constructing and calling multidimensional array in C/C++.","text":"This post introduce methods of constructing and calling multidimensional array in C/C++. C A simple method Better method C++ Elegant method The key point of mutlidimensional array is using the pointer to pointers. For example, constructing two dimensional array requires a pointer array, each element of which points to an one dimensional array. CA simple method is: A simple method12345678910111213141516int** alloc_float2(int nx, int ny) { float **px = (float **) malloc (nx*sizeof(float**)); float *pdat = (float *) malloc (nx*ny*sizeof(float)); for(int ix = 0; ix &lt; nx; ++ix) px[ix] = pdat + ix * ny; return px;}void free_float2(float **p){ free(p[0]); free(p);}//usagefloat **m2 = alloc_float2(4,5);// calling to m2[i][j];//...free_float2(m2); However, this is a bad design since both malloc and free are called for twice. More over, forgetting to free the data scope (p[0]) often happens. Better methodA better method is put the pointer array and data scope array together. Thus, operations of malloc and free are called for only once. 123456789101112int** alloc_f2(int nx, int ny){ float **ptr = (float**) malloc (nx * sizeof(float*) + nx*ny*sizeof(float)); float *pdat = (float*) (ptr + nx); for(int ix = 0; ix &lt; nx; ++ix) ptr[ix] = pdat + ix * ny; return ptr;}//usagefloat **m2 = alloc_f2(10,10);// calling m2[i][j];free(m2); // C++It is disaster for constructing multi-dimensional array in C because of lots of types, such as int, float, double&#x2026; We need to write codes repeatedly for these types. However, C++ provides a nice method for simplify these, TEMPLATE! 12345678910111213template &lt;class T&gt;T** alloc2(std::size_t nx, std::size_t ny) { T** p_m2 = (T**) ( new char [sizeof(T)*nx*ny + sizeof(T*)*nx] ); T* pdat = p_m2 + nx; for(std::size_t ix = 0; ix &lt; nx; ++ix) p_m2[ix] = pdat + ix * ny; return p_m2;}// usagefloat **m = alloc2&lt;float&gt;(3,4);// call m[i][j];delete m; Elegant methodC++ provides class for us to packaging everything. Why not using it? 1234567891011121314template &lt;class T&gt;class MAT2{public: MAT2(std::size_t nx, std::size_t ny) : d_nx(nx), d_ny(ny) { dat = new T [nx*ny]; } ~MAT2() {delete dat; } T* operator[](std::size_t ix) { return (T+ix*ny); }private: std::size_t d_nx, d_ny; T* dat;};//usageMAT2&lt;double&gt; m(4,5);//... Example above is the simplest design for two dimensional array. More advanced design is gsw.","raw":null,"content":null,"categories":[{"name":"Programming","slug":"Programming","permalink":"http://sheng09.github.io/categories/Programming/"}],"tags":[{"name":"c++","slug":"c","permalink":"http://sheng09.github.io/tags/c/"}]}]}