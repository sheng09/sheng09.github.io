<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Multidimensional Array in C/C++]]></title>
      <url>http://sheng09.github.io/2017/01/22/multiArray/</url>
      <content type="html"><![CDATA[<p>This post introduce methods of constructing and calling multidimensional array in C/C++.</p>
<a id="more"></a>
<!-- toc -->
<ul>
<li><a href="#c">C</a><ul>
<li><a href="#a-simple-method">A simple method</a></li>
<li><a href="#better-method">Better method</a></li>
</ul>
</li>
<li><a href="#c">C++</a></li>
<li><a href="#elegant-method">Elegant method</a></li>
</ul>
<!-- tocstop -->
<p>The key point of mutlidimensional array is using the pointer to pointers. For example, constructing two dimensional array requires a pointer array, each element of which points to an one dimensional array. </p>
<hr>
<h2 id="c"><a href="#C" class="headerlink" title="C"></a>C</h2><p>A simple method is:</p>
<h3 id="a-simple-method"><a href="#A-simple-method" class="headerlink" title="A simple method"></a>A simple method</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span>** <span class="title">alloc_float2</span><span class="params">(<span class="keyword">int</span> nx, <span class="keyword">int</span> ny)</span> </span>{</span><br><span class="line">    <span class="keyword">float</span> **px  = (<span class="keyword">float</span> **) <span class="built_in">malloc</span> (nx*<span class="keyword">sizeof</span>(<span class="keyword">float</span>**));</span><br><span class="line">    <span class="keyword">float</span> *pdat = (<span class="keyword">float</span>  *) <span class="built_in">malloc</span> (nx*ny*<span class="keyword">sizeof</span>(<span class="keyword">float</span>));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> ix = <span class="number">0</span>; ix &lt; nx; ++ix)</span><br><span class="line">        px[ix] = pdat + ix * ny;</span><br><span class="line">    <span class="keyword">return</span> px;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">free_float2</span><span class="params">(<span class="keyword">float</span> **p)</span></span>{</span><br><span class="line">    <span class="built_in">free</span>(p[<span class="number">0</span>]); <span class="built_in">free</span>(p);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//usage</span></span><br><span class="line"><span class="keyword">float</span> **m2 = alloc_float2(<span class="number">4</span>,<span class="number">5</span>);</span><br><span class="line"><span class="comment">// calling to m2[i][j];</span></span><br><span class="line"><span class="comment">//...</span></span><br><span class="line">free_float2(m2);</span><br></pre></td></tr></table></figure>
<p>However, this is a bad design since both malloc and free are called for twice. More over, forgetting to free the data scope (<code>p[0]</code>) often happens.</p>
<h3 id="better-method"><a href="#Better-method" class="headerlink" title="Better method"></a>Better method</h3><p>A better method is put the pointer array and data scope array together. Thus, operations of malloc and free are called for only once.</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span>** <span class="title">alloc_f2</span><span class="params">(<span class="keyword">int</span> nx, <span class="keyword">int</span> ny)</span></span>{</span><br><span class="line">    <span class="keyword">float</span> **ptr  = (<span class="keyword">float</span>**) <span class="built_in">malloc</span> (nx * <span class="keyword">sizeof</span>(<span class="keyword">float</span>*) + nx*ny*<span class="keyword">sizeof</span>(<span class="keyword">float</span>));</span><br><span class="line">    <span class="keyword">float</span>  *pdat = (<span class="keyword">float</span>*) (ptr + nx);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> ix = <span class="number">0</span>; ix &lt; nx; ++ix)</span><br><span class="line">        ptr[ix] = pdat + ix * ny;</span><br><span class="line">    <span class="keyword">return</span> ptr;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">//usage</span></span><br><span class="line"><span class="keyword">float</span> **m2 = alloc_f2(<span class="number">10</span>,<span class="number">10</span>);</span><br><span class="line"><span class="comment">// calling m2[i][j];</span></span><br><span class="line"><span class="built_in">free</span>(m2); <span class="comment">//</span></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="c"><a href="#C-1" class="headerlink" title="C++"></a>C++</h2><p>It is disaster for constructing multi-dimensional array in C because of lots of types, such as <code>int</code>, <code>float</code>, <code>double</code>&#x2026; We need to write codes repeatedly for these types. However, C++ provides a nice method for simplify these, TEMPLATE!</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</span><br><span class="line"><span class="function">T** <span class="title">alloc2</span><span class="params">(<span class="built_in">std</span>::<span class="keyword">size_t</span> nx, <span class="built_in">std</span>::<span class="keyword">size_t</span> ny)</span> </span>{</span><br><span class="line">    T** p_m2 = (T**) ( <span class="keyword">new</span> <span class="keyword">char</span> [<span class="keyword">sizeof</span>(T)*nx*ny + <span class="keyword">sizeof</span>(T*)*nx] );</span><br><span class="line">    T*  pdat = p_m2 + nx;</span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">std</span>::<span class="keyword">size_t</span> ix = <span class="number">0</span>; ix &lt; nx; ++ix)</span><br><span class="line">        p_m2[ix] = pdat + ix * ny;</span><br><span class="line">    <span class="keyword">return</span> p_m2;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// usage</span></span><br><span class="line"><span class="keyword">float</span> **m = alloc2&lt;<span class="keyword">float</span>&gt;(<span class="number">3</span>,<span class="number">4</span>);</span><br><span class="line"><span class="comment">// call m[i][j];</span></span><br><span class="line"><span class="keyword">delete</span> m;</span><br></pre></td></tr></table></figure>
<h2 id="elegant-method"><a href="#Elegant-method" class="headerlink" title="Elegant method"></a>Elegant method</h2><p>C++ provides <code>class</code> for us to packaging everything. Why not using it?</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</span><br><span class="line"><span class="keyword">class</span> MAT2{</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    MAT2(<span class="built_in">std</span>::<span class="keyword">size_t</span> nx, <span class="built_in">std</span>::<span class="keyword">size_t</span> ny) : d_nx(nx), d_ny(ny) { dat = <span class="keyword">new</span> T [nx*ny]; }</span><br><span class="line">    ~MAT2() {<span class="keyword">delete</span> dat; }</span><br><span class="line">    T* <span class="keyword">operator</span>[](<span class="built_in">std</span>::<span class="keyword">size_t</span> ix) { <span class="keyword">return</span> (T+ix*ny); }</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="built_in">std</span>::<span class="keyword">size_t</span> d_nx, d_ny;</span><br><span class="line">    T* dat;</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="comment">//usage</span></span><br><span class="line">MAT2&lt;<span class="keyword">double</span>&gt; m(<span class="number">4</span>,<span class="number">5</span>);</span><br><span class="line"><span class="comment">//...</span></span><br></pre></td></tr></table></figure>
<p>Example above is the simplest design for two dimensional array. More advanced design is <a href="https://github.com/sheng09/sheng09.github.io.posts/_posts/multiArray" target="_blank" rel="external">gsw</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Const in C/C++]]></title>
      <url>http://sheng09.github.io/2017/01/21/const/</url>
      <content type="html"><![CDATA[<p>This post introduces usage of &#x201C;const&#x201D;, especially terms of &#x201C;top-level const&#x201D; and &#x201C;low-level const&#x201D;.</p>
<a id="more"></a>
<!--toc-->
<h2 id="const-associated"><a href="#Const-Associated" class="headerlink" title="Const Associated"></a>Const Associated</h2><p>Associating pointers, <code>const</code> is used to declare that pointer is a const, or the object pointed by it is a const. This difference leads to &#x201C;top-level const&#x201D; and &#x201C;low-level const&#x201D;.<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// top-level const and low-level const</span></span><br><span class="line"><span class="keyword">int</span> x = <span class="number">10</span>, y = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> * <span class="keyword">const</span> p1 = &amp;x; <span class="comment">// p1 is a top-level const, p1 cannot be changed, but not the object it points</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span>  *p2 = &amp;x; <span class="comment">// p2 is a low-level const, the object pointed by p2 cannot be changed, but not p2</span></span><br><span class="line"><span class="keyword">int</span> <span class="keyword">const</span>  *p3 = &amp;x; <span class="comment">// equal to &quot;const int&quot;</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> *<span class="keyword">const</span> p4 = &amp;x; <span class="comment">// neither p4 nor the object pointed by p4 can be changed</span></span><br><span class="line"></span><br><span class="line">*p1 = <span class="number">0</span>;</span><br><span class="line">p1 = &amp;y; <span class="comment">// wrong</span></span><br><span class="line">*p2 = <span class="number">0</span>; <span class="comment">// wrong</span></span><br><span class="line">p2 = &amp;y;</span><br></pre></td></tr></table></figure></p>
<p>The pointer that points to a const object must be a low-level const<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> x = <span class="number">99</span>;</span><br><span class="line"><span class="keyword">int</span> y = <span class="number">88</span>;</span><br><span class="line"><span class="keyword">int</span> *p1 = &amp;x; <span class="comment">// wrong</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> *p2 = &amp;x; <span class="comment">// correct</span></span><br><span class="line">*p2 = <span class="number">80</span>;     <span class="comment">// wrong</span></span><br><span class="line">p2 = &amp;y;      <span class="comment">// correct</span></span><br></pre></td></tr></table></figure></p>
<h2 id="const-in-formal-parameter"><a href="#Const-in-Formal-Parameter" class="headerlink" title="Const in Formal Parameter"></a>Const in Formal Parameter</h2><p>In functions, declaring a formal parameter as const follows the principle of using const for variables. The top-level const is ignored whether it is in formal or actual parameters.<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// top-level const in actual parameter</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun1</span><span class="params">(<span class="keyword">int</span> i)</span> </span>{}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun2</span><span class="params">(<span class="keyword">int</span>* p)</span> </span>{}</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> x = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> y = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> *<span class="keyword">const</span> p = &amp;y;</span><br><span class="line">fun1(x); <span class="comment">// correct, it is like &quot;int tmp = x&quot;, so whether tmp should be const or not doesn&apos;t matter</span></span><br><span class="line">fun2(p); <span class="comment">// correct, it is like &quot;int *tmp = p&quot;,</span></span><br></pre></td></tr></table></figure></p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//top-level const in formal parameter</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun1</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> i)</span> </span>{}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun2</span><span class="params">(<span class="keyword">int</span> *<span class="keyword">const</span> p)</span> </span>{}</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> x = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> *p = &amp;x;</span><br><span class="line">fun1(x); <span class="comment">// correct</span></span><br><span class="line">fun2(p); <span class="comment">// correct it is like &quot;int *const tmp = p&quot;, whether p is const or not doesn&apos;t matter</span></span><br></pre></td></tr></table></figure>
<h2 id="in-template"><a href="#In-Template" class="headerlink" title="In Template"></a>In Template</h2><p>Principles described above apply to template as well.</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// template</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt; <span class="function">T <span class="title">f</span><span class="params">(T, T)</span></span>;</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> y;</span><br><span class="line">f(x,y); <span class="comment">// call f(int, int); const is ignored</span></span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Const Reference in Function Parameters]]></title>
      <url>http://sheng09.github.io/2017/01/21/const_reference/</url>
      <content type="html"><![CDATA[<p>This post presents tips of using <code>const reference</code> in functions. Examples are presented for wrong using.</p>
<a id="more"></a>
<!-- toc -->
<ul>
<li><a href="#in-function-parameters">In Function Parameters</a></li>
<li><a href="#in-class-methods">In Class Methods</a></li>
<li><a href="#conclusions-and-tips">Conclusions and Tips</a></li>
</ul>
<!-- tocstop -->
<h2 id="in-function-parameters"><a href="#In-Function-Parameters" class="headerlink" title="In Function Parameters"></a>In Function Parameters</h2><p><code>reference</code> is used to declare the formal parameters in a function, in order to speed up programs. However, a <code>const</code> argument may be<br>passed into this function, then compiling fails. This is because &#x201C;constructing a <code>reference</code> to a const variable&#x201D; is wrong. The resolution<br>is &#x201C;construting a <code>const reference</code> to a const variable&#x201D;, or &#x201C;construting a <code>const reference</code> to a whatever variable&#x201D;.</p>
<p>eg:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">foo</span><span class="params">(<span class="keyword">int</span> &amp; v)</span> </span>{}</span><br><span class="line"><span class="keyword">int</span> v1 = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> v2 = <span class="number">2</span>;</span><br><span class="line">foo(v1);   <span class="comment">// correct</span></span><br><span class="line">foo(v2);   <span class="comment">// wrong, passing &quot;const int&quot; to &quot;int &amp;&quot;</span></span><br><span class="line">foo(<span class="number">3</span>);    <span class="comment">// wrong</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">foo2</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> &amp; v)</span> </span>{}</span><br><span class="line">foo2(v1);   <span class="comment">// correct</span></span><br><span class="line">foo2(v2);   <span class="comment">// correct</span></span><br><span class="line">foo2(<span class="number">3</span>);    <span class="comment">// correct</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span>&amp; <span class="title">foo3</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> &amp; v)</span> </span>{<span class="keyword">return</span> v;} <span class="comment">//false, passing &quot;const int&amp;&quot; to &quot;int&amp;&quot; in return</span></span><br><span class="line"><span class="function"><span class="keyword">const</span> <span class="keyword">int</span>&amp; <span class="title">foo3</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> &amp; v)</span> </span>{<span class="keyword">return</span> v;} <span class="comment">//correct</span></span><br></pre></td></tr></table></figure></p>
<h2 id="in-class-methods"><a href="#In-Class-Methods" class="headerlink" title="In Class Methods"></a>In Class Methods</h2><p>When calling a method for a class instance through its <code>const reference</code>, this method should be declared to be <code>const</code>.</p>
<p>In example below, compiler fails and error message is <code>passing &quot;const XX&quot; as this argument of &quot;void XX::XX()&quot; discards qualifiers</code>.<br>This is because a non-const methods <code>dosth()</code> is called on a const object <code>rt</code>. In other words, a const <code>rt</code> is passing<br>into  non-const parameter in <code>TEST::dosth()</code>.<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> TEST {</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    TEST() {};</span><br><span class="line">    ~TEST() {};</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">dosth</span><span class="params">()</span> </span>{}           <span class="comment">// fail</span></span><br><span class="line">  <span class="comment">//void dosth() const {}   // using this </span></span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    TEST t;</span><br><span class="line">    <span class="keyword">const</span> TEST &amp;rt = t;</span><br><span class="line">    rt.dosth();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
<h2 id="conclusions-and-tips"><a href="#Conclusions-and-Tips" class="headerlink" title="Conclusions and Tips"></a>Conclusions and Tips</h2><ul>
<li>Use <code>const reference</code> in formal parameters if <code>reference</code> is required.</li>
<li>Once using <code>const reference</code> in formal parameters, any operations to it should be const!</li>
<li>Use pointer but not reference if you want to pass a big data set,<br>such as a struct instance, into a function, and you will change it.</li>
</ul>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// tip 1</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> &amp; v)</span></span>; <span class="comment">// use const reference, don&apos;t change v </span></span><br><span class="line"></span><br><span class="line"><span class="comment">// tip 2</span></span><br><span class="line"><span class="keyword">class</span> TEST {<span class="comment">/*...*/</span>};  </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun</span><span class="params">(<span class="keyword">const</span> TEST &amp; t)</span></span>; <span class="comment">// do not call non-const method for t in fun()</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// tip 3</span></span><br><span class="line"><span class="keyword">class</span> DAT {<span class="comment">/*...*/</span>};</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pro</span><span class="params">(DAT *d)</span></span>; <span class="comment">// use pointer if changes is made to d in pro()</span></span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Finite Difference of Staggered Grid (2)]]></title>
      <url>http://sheng09.github.io/2016/10/18/finite-difference-staggerGrid2/</url>
      <content type="html"><![CDATA[<p>This post presents the asymmetric finite-difference scheme build in staggered grid. This asymmetric scheme works well for processing boundary points.</p>
<a id="more"></a>
<!-- toc -->
<ul>
<li><a href="#fx-in-2nd-order-accuracy">$f&#x2019;(x)$ in 2nd order accuracy</a><ul>
<li><a href="#point-0">point 0</a></li>
</ul>
</li>
<li><a href="#fx-in-2nth-order-accuracy">$f&#x2019;(x)$ in 2Nth order accuracy</a><ul>
<li><a href="#point-0">point 0</a></li>
<li><a href="#point-k-k0123n-1">point k $(k=0,1,2,3&#x2026;,N-1)$</a></li>
</ul>
</li>
<li><a href="#conclusion">Conclusion</a></li>
<li><a href="#examples">Examples</a></li>
</ul>
<!-- tocstop -->
<h2 id="fx-in-2nd-order-accuracy"><a href="#f&#x2019;-x-in-2nd-order-accuracy" class="headerlink" title="$f&#x2019;(x)$ in 2nd order accuracy"></a>$f&#x2019;(x)$ in 2nd order accuracy</h2><p><img src="/2016/10/18/finite-difference-staggerGrid2/2order.jpg" alt=""></p>
<h3 id="point-0"><a href="#point-0" class="headerlink" title="point 0"></a>point 0</h3><p>To calculate the first order derivates in the $\color{blue}{blue}$ grid points, values in $\color{red}{red}$ points are expanded.</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
    f(x+\frac{\delta}{2}) & = & f(x) + \frac{\delta}{2} f'(x)
                    + \frac{\delta^2}{2^2 2!}f''(x)
                    + O(\delta^3) \\
                    %+\frac{\delta^N}{2^N N!}f^{(N)}(x)
                    %+ O(\delta^{N+1}) \\
    f(x+\frac{3\delta}{2}) & = & f(x) + \frac{3\delta}{2} f'(x)
                    + \frac{3^2\delta^2}{2^2 2!}f''(x)
                    + O(\delta^3) \\
                    %+ ...
                    %+ \frac{3^N\delta^N}{2^N N!}f^{(N)}(x)
                    %+ O(\delta^{N+1}) \\
    f(x+\frac{5\delta}{2}) & = & f(x) + \frac{5\delta}{2} f'(x)
                    + \frac{5^2\delta^2}{2^2 2!}f''(x)
                    + O(\delta^3) \\
                    %+ ...
                    %+ \frac{5^N\delta^N}{2^N N!}f^{(N)}(x)
                    %+ O(\delta^{N+1})
\end{eqnarray}</script><p>thus, $f&#x2019;(x)$ are:</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
    f'(x) & = &  \frac{2 f(x+\frac{\delta}{2}) }{\delta}
                -\frac{2 f(x)}{\delta}
                    - \frac{\delta}{2 2!}f''(x)
                    + O(\delta^3) \\
                    %- ...
                    %-\frac{\delta^{N-1}}{2^{N-1} N!}f^{(N)}(x)
                    %+ O(\delta^{N}) \\
    f'(x) & = &  \frac{2 f(x+\frac{3\delta}{2}) }{3\delta}
                -\frac{2 f(x)  }{3\delta}
                    - \frac{3\delta }{2 2!}f''(x)
                    + O(\delta^3) \\
                    %- ...
                    %- \frac{3^{N-1}\delta^{N-1}}{2^{N-1} N!}f^{(N)}(x)
                    %+ O(\delta^{N}) \\
    f'(x) & = &  \frac{2 f(x+\frac{5\delta}{2}) }{5\delta}
                -\frac{2 f(x)  }{5\delta}
                    - \frac{5\delta }{2 2!}f''(x)
                    + O(\delta^3) \\
                    %- ...
                    %- \frac{5^{N-1}\delta^{N-1}}{2^{N-1} N!}f^{(N)}(x)
                    %+ O(\delta^{N})

\end{eqnarray}</script><p>add these $f&#x2019;(x)$ proportionally:</p>
<script type="math/tex; mode=display">
\begin{equation}
\begin{aligned}
f'(x) = & \frac{2}{\delta}
            \left[
                C^2_{00}            f(x + \frac{\delta}{2}) +
                C^2_{01}\frac{1}{3} f(x + \frac{3\delta}{2} )+
                C^2_{02}\frac{1}{5} f(x + \frac{5\delta}{2} )
            \right]\\
        & -\frac{2}{\delta}
            \left[
                           C^2_{00}+
                \frac{1}{3}C^2_{01}+
                \frac{1}{5}C^2_{02}
            \right] f(x)
          - \frac{\delta}{2 2!}
            \left[
                C^2_{00}+
                3C^2_{01}+
                5C^2_{02}
            \right]f''(x) + O(\delta^3)

\end{aligned}
\end{equation}</script><p>In order to have second order accuracy, $C^2_{0j}$ must satisfy the equation of:</p>
<script type="math/tex; mode=display">
\begin{equation}
    \begin{cases}
        C^2_{00} +  C^2_{01} + C^2_{02} = 1\\
        C^2_{00} + \frac{1}{3}C^2_{01} + \frac{1}{5}C^2_{02}  = 0\\
        C^2_{00} + 3C^2_{01} + 5C^2_{02}  = 0\\
    \end{cases}
    \Rightarrow
    \begin{cases}
        C^2_{00} =  -1           \\
        C^2_{01} =   \frac{9}{2} \\
        C^2_{02} =  -\frac{5}{2}
    \end{cases}
\end{equation}</script><h2 id="fx-in-2nth-order-accuracy"><a href="#f&#x2019;-x-in-2Nth-order-accuracy" class="headerlink" title="$f&#x2019;(x)$ in 2Nth order accuracy"></a>$f&#x2019;(x)$ in 2Nth order accuracy</h2><p><img src="/2016/10/18/finite-difference-staggerGrid2/2Norder.jpg" alt=""></p>
<h3 id="point-0"><a href="#point-0-1" class="headerlink" title="point 0"></a>point 0</h3><script type="math/tex; mode=display">
\begin{eqnarray}
    f(x+\frac{\delta}{2}) & = & f(x) + \frac{\delta}{2} f'(x)
                    + \frac{\delta^2}{2^2 2!}f''(x)
                    + ...
                    +\frac{\delta^{2N}}{2^{2N} (2N)!}f^{(2N)}(x)
                    + O(\delta^{2N+1}) \\
    f(x+\frac{3\delta}{2}) & = & f(x) + \frac{3\delta}{2} f'(x)
                    + \frac{3^2\delta^2}{2^2 2!}f''(x)
                    + ...
                    + \frac{3^{2N}\delta^{2N}}{2^{2N} {2N}!}f^{(2N)}(x)
                    + O(\delta^{2N+1})\\
        &...&\\
    f(x+\frac{l\delta}{2}) & = & f(x) + \frac{l\delta}{2}f'(x)
                    + \frac{l^2\delta^2}{2^2 2!}f''(x)
                    + ...
                    + \frac{l^{2N}\delta^{2N}}{2^{2N} (2N)!}f^{(2N)}(x)
                    + O(\delta^{2N+1})
\end{eqnarray}</script><p>thus, $f&#x2019;(x)$ are:</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
    f'(x) & = &  \frac{2 f(x+\frac{\delta}{2}) }{\delta}
                -\frac{2 f(x)}{\delta}
                - \frac{\delta}{2 2!}f''(x)
                - ...
                -\frac{\delta^{2N-1}}{2^{2N-1} (2N)!}f^{(2N)}(x)
                + O(\delta^{2N}) \\
    f'(x) & = &  \frac{2 f(x+\frac{3\delta}{2}) }{3\delta}
                -\frac{2 f(x)  }{3\delta}
                    - \frac{3\delta }{2 2!}f''(x)
                    - ...
                    - \frac{3^{2N-1}\delta^{2N-1}}{2^{2N-1} (2N)!}f^{(2N)}(x)
                    + O(\delta^{2N}) \\
    &...&\\
    f'(x) & = & \frac{2 f(x+\frac{l\delta}{2}) }{l\delta}
               -\frac{2 f(x) }{l\delta}
                    - \frac{l\delta}{2 2!}f''(x)
                    - ...
                    - \frac{l^{2N-1}\delta^{2N-1}}{2^{2N-1} (2N)!}f^{(2N)}(x)
                    + O(\delta^{2N}) \\
    \color{red}{(l=1,3,5,7,9...)}
\end{eqnarray}</script><p>add these $f&#x2019;(x)$ proportionally:</p>
<script type="math/tex; mode=display">
\begin{equation}
\begin{aligned}
f'(x) = & \frac{2}{\delta}
            \sum \limits_l
            \left[
                 f(x + \frac{l\delta}{2}) C^{2N}_{0(\frac{l-1}{2})}\frac{1}{l}
            \right]\\
        &-\frac{2}{\delta}f(x)
            \sum \limits_l
            \left[
                 C^{2i}_{0(\frac{l-1}{2})} \frac{1}{l}
            \right]
         -\frac{\delta}{2 2!} f''(x)
            \sum \limits_l
            \left[
                C^{2i}_{0(\frac{l-1}{2})} l
            \right]\\
        & -...
        -\frac{\delta^{2N-1}}{2^{2N-1} (2N)!} f^{2N}(x)
            \sum \limits_l
            \left[
                C^{2N}_{0(\frac{l-1}{2})} l^{2N-1}
            \right]
        +O(\delta^{2N})\\
        (l=1,3,5,7,9...)
\end{aligned}
\end{equation}</script><p>To have 2Nth order accuracy, , $C^{2N}_{0j}$ must satisfy the equation:</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
    \begin{bmatrix}
        1 & 1            & 1          & ... & 1           \\
        1 & \frac{1}{3}  & \frac{1}{5}& ... & \frac{1}{4N+1} \\
        1 & 3            & 5          & ... &  4N+1          \\
        1 & 3^2          & 5^2        & ... &  (4N+1)^2        \\
        ...\\
        1 & 3^{2N-1}      & 5^{2N-1}    & ... &  (4N+1)^{2N-1}    \\
    \end{bmatrix}
    \begin{bmatrix}
    C^{2N}_{00}      \\
    C^{2N}_{01}      \\
    C^{2N}_{02}      \\
    C^{2N}_{03}      \\
    ...\\
    C^{2N}_{0(2N)} \\
    \end{bmatrix}
    =
    \begin{bmatrix}
    1\\
    0\\
    0\\
    0\\
    ...\\
    0\\
    \end{bmatrix}
\end{eqnarray}</script><h3 id="point-k-k0123n-1"><a href="#point-k-k-0-1-2-3&#x2026;-N-1" class="headerlink" title="point k $(k=0,1,2,3&#x2026;,N-1)$"></a>point k $(k=0,1,2,3&#x2026;,N-1)$</h3><script type="math/tex; mode=display">
\begin{eqnarray}
    f(x+\frac{(1-2k)\delta}{2}) & = & f(x)
            +\frac{(1-2k)\delta}{2} f'(x)
            + \frac{(1-2k)^2\delta^2}{2^22!}f''(x)
            +...
            + \frac{(1-2k)^{2N}\delta^{2N}}{2^{2N}(2N)!}f^{(2N)}(x)
            + O(2N+1)
    \\
    ...
    \\
    f(x-\frac{\delta}{2}) & = & f(x) - \frac{\delta}{2}f'(x)
            + \frac{\delta^2}{2^22!}f''(x)
            + ...
            + \frac{(-1)^{2N}\delta^{2N}}{2^{2N} (2N)!}f^{(2N)}(x)
            + O(\delta^{2N+1})
                                    \\
    f(x+\frac{\delta}{2}) & = & f(x) + \frac{\delta}{2} f'(x)
            + \frac{\delta^2}{2^2 2!}f''(x)
            + ...
            +\frac{\delta^{2N}}{2^{2N} (2N)!}f^{(2N)}(x)
            + O(\delta^{2N+1}) \\
    f(x+\frac{3\delta}{2}) & = & f(x) + \frac{3\delta}{2} f'(x)
            + \frac{3^2\delta^2}{2^2 2!}f''(x)
            + ...
            + \frac{3^{2N}\delta^{2N}}{2^{2N} (2N)!}f^{(2N)}(x)
            + O(\delta^{2N+1})\\
        &...&\\
    f(x+\frac{l\delta}{2}) & = & f(x) + \frac{l\delta}{2}f'(x)
            + \frac{l^2\delta^2}{2^2 2!}f''(x)
            + ...
            + \frac{l^{2N}\delta^{2N}}{2^{2N} (2N)!}f^{(2N)}(x)
            + O(\delta^{2N+1})
\end{eqnarray}</script><p>thus, $f&#x2019;(x)$ are:</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
    f'(x) & = & \frac{2}{(1-2k)\delta} f(x+\frac{(1-2k)\delta}{2})
            - \frac{2}{(1-2k)\delta} f(x)
            - \frac{(1-2k)\delta}{2 2!}f''(x)
            - ...
            -\frac{(1-2k)^{2N-1}\delta^{2N-1}}{2^{2N-1} (2N)!}f^{(2N)}(x)
                    + O(\delta^{2N}) \\
    \\
    ...
    \\
    f'(x) & = & \frac{-2}{\delta} f(x-\frac{\delta}{2})
                 +\frac{2}{\delta} f(x)
                 + \frac{\delta^2}{22!}f''(x)
                 + ...
                 + \frac{(-1)^{2N-1}\delta^{2N-1}}{2^{2N-1} (2N)!}f^{(2N)}(x)
                                    + O(\delta^{2N})
                                    \\
    f'(x) & = & \frac{2}{\delta} f(x+\frac{\delta}{2})
                    - \frac{2}{\delta} f(x)
                    - \frac{\delta}{2 2!}f''(x)
                    - ...
                    -\frac{\delta^{2N-1}}{2^{2N-1} (2N)!}f^{(2N)}(x)
                    + O(\delta^{2N}) \\
    f'(x) & = & \frac{2}{3\delta} f(x+\frac{3\delta}{2})
                    -\frac{2}{3\delta}f(x)
                    - \frac{3\delta}{2 2!}f''(x)
                    - ...
                    - \frac{3^{2N-1}\delta^{2N-1}}{2^{2N-1} (2N)!}f^{(2N)}(x)
                    + O(\delta^{2N})\\
        &...&\\
    f'(x) & = & \frac{2}{l\delta} f(x+\frac{l\delta}{2})
                    -\frac{2}{l\delta} f(x)
                    - \frac{l\delta}{2 2!}f''(x)
                    - ...
                    - \frac{l^{2N-1}\delta^{2N-1}}{2^{2N-1} (2N)!}f^{(2N)}(x)
                    + O(\delta^{2N})
\end{eqnarray}</script><p>add these $f&#x2019;(x)$ proportionally:</p>
<script type="math/tex; mode=display">
\begin{equation}
\begin{aligned}
    f'(x) =  &
\frac{2}{\delta} \sum \limits_l
    \left[
        f( x+ \frac{ l\delta}{2} )C^{2N}_{k(\frac{l-1}{2})} \frac{1}{l}
    \right]
\\
&-\frac{2}{\delta}f(x) \sum \limits_l \frac{1}{l}    C^{2N}_{k(\frac{l-1}{2})}
-\frac{\delta}{22!}f''(x)         \sum \limits_l{l}  C^{2N}_{k(\frac{l-1}{2})}
-\frac{\delta^2}{2^23!}f^{(3)}(x) \sum \limits_l{l^2}C^{2N}_{k(\frac{l-1}{2})}
\\
&-\frac{\delta^3}{2^34!}f^{(4)}(x) \sum \limits_l{l^3}C^{2N}_{k(\frac{l-1}{2})}
-...
-\frac{\delta^{2N-1}}{2^{2N-1}(2N)!}f^{(2N)}(x) \sum \limits_l{l^{2N-1}}C^{2N}_{k(\frac{l-1}{2})}
+O({\delta^{2N}})
\\
&(l = 1-2k, 3-2k,...,-1,1,...)
\end{aligned}
\end{equation}</script><p>to have 2Nth order accuracy: $C^{2N}_{kj}$ must satisfy equation:</p>
<script type="math/tex; mode=display">
\begin{equation}
\begin{bmatrix}
    1 & 1              & 1                           & ... & 1 \\
    \frac{1}{1-2k} & \frac{1}{3-2k} & \frac{1}{5-2k} & ... & \frac{1}{4N-2k+1} \\
    1-2k           & 3-2k           & 5-2k           & ... & 4N-2k+1 \\
    (1-2k)^2       & (3-2k)^2       & (5-2k)^2       & ... & (4N-2k+1)^2 \\
    ...\\
    (1-2k)^{2N-1}  & (3-2k)^{2N-1}  & (5-2k)^{2N-1}  & ... & (4N-2k+1)^{2N-1}
\end{bmatrix}
\begin{bmatrix}
    C^{2N}_{k (-k)   } \\
    C^{2N}_{k (-k+1) } \\
    C^{2N}_{k (-k+2) } \\
    C^{2N}_{k (-k+3) } \\
    ...\\
    C^{2N}_{k (2N-k)}
\end{bmatrix}
=
\begin{bmatrix}
    1\\
    0\\
    0\\
    0\\
    ...\\
    0\\
    \end{bmatrix}
    \label{LA}
\end{equation}</script><h2 id="conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>For 2Nth order accuracy, for point k in the boundary region, value of $f&#x2019;(x)$ is:</p>
<script type="math/tex; mode=display">
\begin{equation}
f'(x) = 
\frac{2}{l\delta} \sum \limits_l
    \left[
        f( x+ \frac{l\delta}{2} )C^{2N}_{k(\frac{l-1}{2})}
    \right]
    \\
    (l=1-2k,3-2k,...,-1,1,...,4N-2k+1)
\end{equation}</script><p>while $C^{2N}_{kj}$ is solution of equation $\eqref{LA}$.</p>
<p>Or, in the form of:</p>
<script type="math/tex; mode=display">
\begin{equation}
\begin{cases}
f'(x) = 
\frac{1}{\delta} \sum \limits_l
    \left[
        f( x+ \frac{l\delta}{2} )c^{2N}_{k(\frac{l-1}{2})}
    \right]
    \\
    c^{2N}_{k(\frac{l-1}{2})}  = \frac{2}{l}C^{2N}_{k(\frac{l-1}{2})}
    \\
    (l=1-2k,3-2k,...,-1,1,...,4N-2k+1)
\end{cases}
\end{equation}</script><h2 id="examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h2><p>FD scheme corresponding to accuracy orders of 2,4,6,8,10,12 are implemented to $f(x)=sin(x)$, their FD results are ploted versus theoretical first order derivative of $f&#x2019;(x)=cos(x)$, as well as their error.</p>
<p><img src="/2016/10/18/finite-difference-staggerGrid2/compare.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Finite Difference of Staggered Grid (1)]]></title>
      <url>http://sheng09.github.io/2016/10/18/finite-difference-staggerGrid/</url>
      <content type="html"><![CDATA[<p>This post presents the central finite difference(FD) system build in stagger grid. Symmetric scheme are derived and examples are presented.</p>
<a id="more"></a>
<!-- toc -->
<ul>
<li><a href="#taylor-expansion">Taylor expansion</a></li>
<li><a href="#first-order-derivatives">First order derivatives</a></li>
<li><a href="#conclusion">Conclusion</a></li>
<li><a href="#examples">Examples</a></li>
</ul>
<!-- tocstop -->
<h2 id="taylor-expansion"><a href="#Taylor-expansion" class="headerlink" title="Taylor expansion"></a>Taylor expansion</h2><p>As always, we start the derivation from taylor expansion. For the $\color{red}{red}$ points in the below staggerd point, function value here have the form of taylor series expanded in the $\color{blue}{blue}$ point. This kind of stagger grid scheme is widely used in modeling.</p>
<p><img src="/2016/10/18/finite-difference-staggerGrid/img.jpg" alt=""></p>
<script type="math/tex; mode=display">
\begin{eqnarray}
f\left(x-\frac{i\delta}{2}\right) & = & f(x) - \frac{i\delta}{2}f'(x)
                                    + \frac{i^2\delta^2}{2^22!}f''(x)
                                    - \frac{i^3\delta^3}{2^33!}f^{(3)}(x)
                                    %+ \frac{i^4\delta^4}{2^44!}f^{(4)}(x)
                                    + ...
                                    + \frac{i^{2N}\delta^{2N}}{2^{2N}(2N)!}f^{(2N)}(x)
                                    + O(\delta^{2N+1})
                                    \\
& ... &\\
f\left(x-\frac{\delta}{2}\right) & = & f(x) - \frac{\delta}{2}f'(x)
                                    + \frac{\delta^2}{2^22!}f''(x)
                                    - \frac{\delta^3}{2^33!}f^{(3)}(x)
                                    %+ \frac{\delta^4}{2^44!}f^{(4)}(x)
                                    + ...
                                    + \frac{\delta^{2N}}{2^{2N}(2N)!}f^{(2N)}(x)
                                    + O(\delta^{2N+1})
                                    \\
f\left(x+\frac{\delta}{2}\right) & = & f(x) + \frac{\delta}{2}f'(x)
                                    + \frac{\delta^2}{2^22!}f''(x)
                                    + \frac{\delta^3}{2^33!}f^{(3)}(x)
                                    %+ \frac{\delta^4}{2^44!}f^{(4)}(x)
                                    + ...
                                    + \frac{\delta^{2N}}{2^{2N}(2N)!}f^{(2N)}(x)
                                    + O(\delta^{2N+1})
                                    \\
& ... &\\
f\left(x+\frac{i\delta}{2}\right) & = & f(x) + \frac{i\delta}{2}f'(x)
                                    + \frac{i^2\delta^2}{2^22!}f''(x)
                                    + \frac{i^3\delta^3}{2^33!}f^{(3)}(x)
                                    %+ \frac{i^4\delta^4}{2^44!}f^{(4)}(x)
                                    + ...
                                    + \frac{i^{2N}\delta^{2N}}{2^{2N}(2N)!}f^{(2N)}(x)
                                    + O(\delta^{2N+1})
\\
\color{red}{\left(i =1,3,5,7,9...\right)}
\\
\end{eqnarray}</script><h2 id="first-order-derivatives"><a href="#First-order-derivatives" class="headerlink" title="First order derivatives"></a>First order derivatives</h2><script type="math/tex; mode=display">
\begin{eqnarray}
\frac{f\left(x+\frac{\delta}{2}\right) - f\left(x-\frac{\delta}{2}\right)}{2}
    & = & \frac{\delta}{2}f'(x)
        + \frac{\delta^3}{2^33!}f^{(3)}(x)
        + ...
        + \frac{\delta^{2N-1}}{2^{2N-1}(2N-1)!}f^{(2N-1)}(x)
        + O(\delta^{2N+1})
        \\
&...&\\
\frac{ f\left(x+\frac{i\delta}{2}\right) - f\left(x-\frac{i\delta}{2}\right) }{2}
    & = & \frac{i\delta}{2}f'(x)
        + \frac{i^3\delta^3}{2^33!}f^{(3)}(x)
        + ...
        + \frac{i^{2N-1}\delta^{2N-1}}{2^{2N-1}(2N-1)!}f^{(2N-1)}(x)
        + O(\delta^{2N+1})
        \\
\color{red}{\left(i=1,3,5,7,9...\right)}
\\
\end{eqnarray}</script><p>or in the forms of:</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
f'(x) & = &
    \frac{f\left(x+\frac{\delta}{2}\right) - f\left(x-\frac{\delta}{2}\right)}{\delta}
        - \frac{\delta^2}{2^23!}f^{(3)}(x)
        - ...
        - \frac{\delta^{2N-2}}{2^{2N-2}(2N-1)!}f^{(2N-1)}(x)
        + O(\delta^{2N})
        \\
&...&\\
f'(x) & = &
\frac{ f\left(x+\frac{i\delta}{2}\right) - f\left(x-\frac{i\delta}{2}\right) }{i\delta}
        - \frac{i^2\delta^2}{2^23!}f^{(3)}(x)
        - ...
        - \frac{i^{2N-2}\delta^{2N-2}}{2^{2N-2}(2N-1)!}f^{(2N-1)}(x)
        + O(\delta^{2N})
        \\
\end{eqnarray}</script><p>adding all these $f&#x2019;(x)$ propotionally together:</p>
<script type="math/tex; mode=display">
\begin{equation}
\begin{aligned}
    f'(x) \sum \limits_{i} C_i
     = &\sum \limits_{i} C_i
            \frac{ f\left(x+\frac{i\delta}{2}\right) - f\left(x-\frac{i\delta}{2}\right) }{i\delta}\\
        &- \frac{\delta^2}{2^23!}f^{(3)}(x) \sum \limits_i i^2C_i
         - \frac{\delta^4}{2^45!}f^{(5)}(x) \sum \limits_i i^4C_i
         %- \frac{\delta^6}{2^67!}f^{(7)}(x) \sum \limits_i i^6C_i
         - \frac{\delta^{2N-2}}{2^{2N-2}(2N-1)!}f^{(2N-1)}(x) \sum \limits_i i^{2N-2}C_i
         + O(\delta^{2N})
\end{aligned}\label{fd1} \\
\color{red}{\left(i=1,3,5,7,9...,2N-1\right)}
\end{equation}</script><p>So, for $2N$th order accuracy, $C_k$ must be the solution of linear equation:</p>
<script type="math/tex; mode=display">
\begin{equation}
    \begin{bmatrix}
        1 & 1           & 1         & 1         & ... & 1\\
        1 & 3^2         & 5^2       & 7^2       & ... & (2N-1)^2     \\
        1 & 3^4         & 5^4       & 7^4       & ... & (2N-1)^4     \\
        ...\\
        1 & 3^{2N-2}    & 5^{2N-2}  & 7^{2N-2}  & ... & (2N-1)^{2N-2}\\
    \end{bmatrix}
    \begin{bmatrix}
        C_1\\
        C_3\\
        C_5\\
        ...\\
        C_{2N-1}\\
    \end{bmatrix}
    =
    \begin{bmatrix}
    1\\
    0\\
    0\\
    ...\\
    0\\
    \end{bmatrix}
    \label{LA}
\end{equation}</script><p>$\eqref{LA}$ is the <a href="http://sheng09.github.io/2016/10/15/vandermonde">vandermonde equation</a>, its augmented matrix corresponds to the upper triangular linear equation:</p>
<script type="math/tex; mode=display">
\begin{equation}
    \begin{bmatrix}
        1 & 1 & 1      & 1      & ... & 1      \\
        0 & 1 & a_{23} & a_{24} & ... & a_{2N} \\
        0 & 0 & 1      & a_{34} & ... & a_{3N} \\
        ...\\
        0 & 0 & 0      & 0      & ... & 1 \\
    \end{bmatrix}
    \begin{bmatrix}
        x_1\\
        x_2\\
        x_3\\
        ...\\
        x_N\\
    \end{bmatrix}
    =
    \begin{bmatrix}
    b_1\\
    b-2\\
    b-3\\
    ...\\
    b_N\\
    \end{bmatrix}
\end{equation}</script><p>while</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
    a_{ij} & = & \frac{ \left[ (2j-1)^2-(2i-3)^2    \right]
                    \left[  (2j-1)^2-(2i-5)^2   \right]
                    ...
                    \left[(2j-1)^2-1            \right]  }
                {   \left[ (2i-1)^2 - (2i-3)^2  \right]
                    \left[ (2i-1)^2 - (2i-5)^2  \right]
                    ...
                    \left[ (2i-1)^2 - 1         \right]  }
                (j \geq i)
    \\
    b_i & = & \frac
                    {   (-1)^{i-1}1^23^2...(2i-3)^2     }
                    {   \left[ (2i-1)^2 - (2i-3)^2  \right]
                    \left[ (2i-1)^2 - (2i-5)^2  \right]
                    ...
                    \left[ (2i-1)^2 - 1         \right]  }
\end{eqnarray}</script><p>Thus, $x_i$ have the value of:</p>
<script type="math/tex; mode=display">
\begin{equation}
\begin{cases}
    x_i= C_{2i-1} = b_i - \sum \limits_{j=i+1}^N a_{ij}x_j
    \\
    x_N = C_{2N-1} = b_N
\end{cases}
\end{equation}</script><h2 id="conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>From $\eqref{fd1}$, the FD scheme of 2Nth order accuracy is built:</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
    f'(x) & = &\sum \limits_{i} C_i
            \frac{ f\left(x+\frac{i\delta}{2}\right) - f\left(x-\frac{i\delta}{2}\right) }{i\delta}
\end{eqnarray}</script><p>or in the form of:</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
\begin{cases}
    f'(x) & = & \frac{1}{\delta} &\sum \limits_{i}
            c_i
            \left[
                f\left(x+\frac{i\delta}{2}\right)
                - f\left(x-\frac{i\delta}{2}\right)
            \right]
    \\
    c_i & = & \frac{C_i}{i}\\
    \color{red}{\left(i =1,3,5,7,9...\right)}
\end{cases}
\end{eqnarray}</script><p>Values of $c_i$ for different accuracy order are:</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>order</th>
<th>$c_1$</th>
<th>$c_2$</th>
<th>$c_3$</th>
<th>$c_4$</th>
<th>$c_5$</th>
<th>$c_6$</th>
</tr>
</thead>
<tbody>
<tr>
<td>2</td>
<td>$\frac{1}{1}$</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>4</td>
<td>$\frac{9}{8}$</td>
<td>$\frac{-1}{24}$</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>6</td>
<td>$\frac{75}{64}$</td>
<td>$\frac{-25}{384}$</td>
<td>$\frac{3}{640}$</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>8</td>
<td>$\frac{1225}{1024}$</td>
<td>$\frac{-245}{3072}$</td>
<td>$\frac{49}{5120}$</td>
<td>$\frac{-5}{7168}$</td>
<td></td>
<td></td>
</tr>
<tr>
<td>10</td>
<td>$\frac{19845}{16384}$</td>
<td>$\frac{-735}{8192}$</td>
<td>$\frac{567}{40960}$</td>
<td>$\frac{-405}{229376}$</td>
<td>$\frac{35}{294912}$</td>
<td></td>
</tr>
<tr>
<td>12</td>
<td>$\frac{160083}{131072}$</td>
<td>$\frac{-12705}{131072}$</td>
<td>$\frac{22869}{1310720}$</td>
<td>$\frac{-5445}{1835008}$</td>
<td>$\frac{847}{2359296}$</td>
<td>$\frac{-63}{2883584}$</td>
</tr>
</tbody>
</table>
</div>
<h2 id="examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h2><p>FD scheme corresponding to accuracy orders of 2,4,6,8,10,12 are implemented to $f(x) = sin(x)$, their FD results are ploted versus theoretical first order derivative of $f&#x2019;(x) = cos(x)$, as well as their error.<br><img src="/2016/10/18/finite-difference-staggerGrid/fd1_sym_staggered.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Asymmetric Finite Difference for Boundary Points]]></title>
      <url>http://sheng09.github.io/2016/10/17/finite-difference-asymmetric/</url>
      <content type="html"><![CDATA[<p>For $2i$th order accuracy finite difference(FD), symmetric scheme cannot apply to $i$ boundary points. Thus, asymmetric scheme are required.<br><img src="/2016/10/17/finite-difference-asymmetric/img.jpg" alt=""></p>
<a id="more"></a>
<!-- toc -->
<ul>
<li><a href="#2nd-order-accuracy">2nd order accuracy</a><ul>
<li><a href="#point-0">point 0</a></li>
</ul>
</li>
<li><a href="#2ith-order-accuracy">2ith order accuracy</a><ul>
<li><a href="#point-0">point 0</a></li>
<li><a href="#point-1">point 1</a></li>
<li><a href="#point-k-k01i-1">point k (k=0,1,&#x2026;,i-1)</a></li>
</ul>
</li>
<li><a href="#result">Result</a></li>
<li><a href="#examples">Examples</a></li>
</ul>
<!-- tocstop -->
<p>Let us take 2nd order FD as example:</p>
<h2 id="2nd-order-accuracy"><a href="#2nd-order-accuracy" class="headerlink" title="2nd order accuracy"></a>2nd order accuracy</h2><h3 id="point-0"><a href="#point-0" class="headerlink" title="point 0"></a>point 0</h3><script type="math/tex; mode=display">
\begin{eqnarray}
    f(x) & = & f(x)\\
    f(x+\delta ) & = & f(x) +  \delta  f'(x) +
                            \frac{\delta ^2}{2!}  f''(x)  +
                            \frac{\delta ^3}{3!}  f^{(3)} (x)  +
                            ... +
                            \frac{\delta ^n}{n!}  f^{(n)} (x)  +
                            O(\delta^{n+1})\\
    f(x+2\delta ) & = & f(x) +  2\delta  f'(x) +
                            \frac{2^2\delta ^2}{2!}  f''(x)  +
                            \frac{2^3\delta ^3}{3!}  f^{(3)} (x)  +
                            ... +
                            \frac{2^n\delta ^n}{n!}  f^{(n)} (x)  +
                            O(\delta^{n+1})\\
\end{eqnarray}</script><p>Thus, $f&#x2019;(x)$ is:</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
    f'(x;\delta) & = & \frac{f(x+\delta )- f(x) } {\delta}
                -\frac{\delta   }{2!}  f''(x)
                -\frac{\delta ^2}{3!}  f^{(3)} (x)
                -...
                -\frac{\delta ^{n-1}}{n!}  f^{(n)} (x)
                +O(\delta^{n})\\
    f'(x;2\delta) & = & \frac{f(x+2\delta )- f(x) } {2\delta}
                -\frac{2\delta   }{2!}  f''(x)
                -\frac{2^2\delta ^2}{3!}  f^{(3)} (x)
                -...
                -\frac{2^{n-1}\delta ^{n-1}}{n!}  f^{(n)} (x)
                +O(\delta^{n})\\
\end{eqnarray}</script><p>adding $f&#x2019;(x;\delta)$ and $f&#x2019;(x;2\delta)$ proportionally:</p>
<script type="math/tex; mode=display">
\begin{equation}
    \begin{cases}
    \begin{aligned}
        f'(x) = &    C_{21}\frac{f(x+\delta )- f(x) } {\delta}
                    +C_{22}\frac{f(x+2\delta )- f(x) } {2\delta} \\
                &-\frac{\delta  }{2!}f''(x) \left[ C_{21} + 2C_{22}\right]
                 -...
                 -\frac{\delta^{n-1}}{n!}f^{(n)}(x) \left[C_{21} +2^{n-1}C_{22}\right]
                 +O(\delta^{n})\\
        1 = & C_{21} + C_{22}
        \end{aligned}\\
    \end{cases}
\end{equation}</script><p>Thus, for 2nd order accuracy, item of $\delta$ should be eliminated, so:</p>
<script type="math/tex; mode=display">
\begin{equation}
\begin{cases}
    C_{21} + C_{22}  & = & 1 \\
    C_{21} + 2C_{22} & = & 0 \\
\end{cases}
\Rightarrow
\begin{cases}
    C_{21} & = & 2 \\
    C_{22} & = & -1 \\
\end{cases}
\end{equation}</script><h2 id="2ith-order-accuracy"><a href="#2ith-order-accuracy" class="headerlink" title="2ith order accuracy"></a>2ith order accuracy</h2><h3 id="point-0"><a href="#point-0-1" class="headerlink" title="point 0"></a>point 0</h3><p>For point 0, we have:</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
    f(x) & = & f(x)\\
    f(x+\delta ) & = & f(x) +  \delta  f'(x) +
                            \frac{\delta ^2}{2!}  f''(x)  +
                            \frac{\delta ^3}{3!}  f^{(3)} (x)  +
                            ... +
                            \frac{\delta ^{2i}}{(2i)!}  f^{(2i)} (x)  +
                            O(\delta^{2i+1})\\
    f(x+2\delta ) & = & f(x) +  2\delta  f'(x) +
                            \frac{2^2\delta ^2}{2!}  f''(x)  +
                            \frac{2^3\delta ^3}{3!}  f^{(3)} (x)  +
                            ... +
                            \frac{2^{2i}\delta ^{2i}}{(2i)!}  f^{(2i)} (x)  +
                            O(\delta^{2i+1})\\
    f(x+3\delta ) & = & f(x) +  3\delta  f'(x) +
                            \frac{3^2\delta ^2}{2!}  f''(x)  +
                            \frac{3^3\delta ^3}{3!}  f^{(3)} (x)  +
                            ... +
                            \frac{3^{2i}\delta ^{2i}}{(2i)!}  f^{(2i)} (x)  +
                            O(\delta^{2i+1})\\
    &...&\\
    f(x+2i\delta ) & = & f(x) +  2i\delta  f'(x) +
                            \frac{(2i)^2\delta ^2}{2!}  f''(x)  +
                            \frac{(2i)^3\delta ^3}{3!}  f^{(3)} (x)  +
                            ... +
                            \frac{(2i)^{2i}\delta ^{2i}}{(2i)!}  f^{(2i)} (x)  +
                            O(\delta^{2i+1})\\
\end{eqnarray}</script><p>Thus, $f&#x2019;(x)$ is:</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
    f'(x;\delta) & = & \frac {f(x+\delta ) - f(x)}{\delta}
                            -\frac{\delta   }{2!}  f''(x)
                            -\frac{\delta ^2}{3!}  f^{(3)} (x)
                            -...
                            -\frac{\delta ^{2i-1}}{(2i)!}  f^{(2i)} (x)
                            +O(\delta^{2i})\\
    f'(x;2\delta) & = & \frac {f(x+2\delta ) - f(x)}{2\delta}
                            -\frac{2  \delta  }{2!}  f''(x)
                            -\frac{2^2\delta ^2}{3!}  f^{(3)} (x)
                            -...
                            -\frac{2^{2i-1}\delta ^{2i-1}}{(2i)!}  f^{(2i)} (x)
                            +O(\delta^{2i})\\
    f'(x;3\delta) & = & \frac {f(x+3\delta ) -f(x)} {3\delta}
                            -\frac{3  \delta   }{2!}  f''(x)
                            -\frac{3^2\delta ^2}{3!}  f^{(3)} (x)
                            -...
                            -\frac{3^{2i-1}\delta ^{2i-1}}{(2i)!}  f^{(2i)} (x)
                            +O(\delta^{2i})\\
    &...&\\
    f'(x;2i\delta) & = & \frac{f(x+2i\delta ) - f(x)}{2i\delta  }
                            -\frac{ 2i \delta     }{2!}  f''(x)
                            -\frac{(2i)^2\delta ^2}{3!}  f^{(3)} (x)
                            -...
                            -\frac{(2i)^{2i-1}\delta ^{2i-1}}{(2i)!}  f^{(2i)} (x)
                            + O(\delta^{2i})\\
\end{eqnarray}</script><p>adding $f&#x2019;(x;\delta), f&#x2019;(x;2\delta),&#x2026;,f&#x2019;(x;2i\delta)$ proportionally:</p>
<script type="math/tex; mode=display">
\begin{equation}
\begin{aligned}
    f'(x) = & \sum \limits_{j=1}^{2i} C_{(2i)j} \frac { f(x+j\delta) -f(x) }{j\delta} \\
            & -  \frac{\delta       }{ 2!}f''(x) \sum \limits_{j=1}^{2i}C_{(2i)j}j
              -  \frac{\delta^2     }{ 3!}f^{(3)}(x) \sum \limits_{j=1}^{2i}C_{(2i)j}j^2
              - ...
              -  \frac{\delta^{2i-1}}{(2i)!}f^{(2i)}(x)\sum \limits_{j=1}^{2i}C_{(2i)j}j^{2i-1}
              + O(\delta^{2i})\\

\end{aligned}
\end{equation}</script><p>Thus, for 2ith order accuracy, item of $\delta,\delta^2,&#x2026;,\delta^{2i-1}$ should be eliminated, so:</p>
<script type="math/tex; mode=display">
% \begin{eqnarray}
% \begin{cases}
%     \sum \limits_{j=1}^{2i} C_{(2i)j}    = 1 \\
%     \sum \limits_{j=1}^{2i} C_{(2i)j}j   = 0 \\
%     \sum \limits_{j=1}^{2i} C_{(2i)j}j^2 = 0 \\
%     ...\\
%     \sum \limits_{j=1}^{2i} C_{(2i)j}j^{2i-1} = 0 \\
% \end{cases}
% \end{eqnarray}</script><!-- or in matrix form: -->
<script type="math/tex; mode=display">
\begin{eqnarray}
    \begin{bmatrix}
        1 & 1        & 1        & 1        & ... & 1           \\
        1 & 2        & 3        & 4        & ... & 2i          \\
        1 & 2^2      & 3^2      & 4^2      & ... & (2i)^2      \\
        ...\\
        1 & 2^{2i-1} & 3^{2i-1} & 4^{2i-1} & ... & (2i)^{2i-1} \\
    \end{bmatrix}
    \begin{bmatrix}
        C_{(2i)1}\\
        C_{(2i)2}\\
        C_{(2i)3}\\
        ...\\
        C_{(2i)(2i)}\\
    \end{bmatrix}
    =
    \begin{bmatrix}
    1\\
    0\\
    0\\
    ...\\
    0\\
    \end{bmatrix}
\end{eqnarray}</script><script type="math/tex; mode=display">
%\begin{eqnarray}
%    \begin{bmatrix}
%        1 & 1        & 1        & 1        & ... & 1           \\
%        1 & 2        & 3        & 4        & ... & N          \\
%        1 & 2^2      & 3^2      & 4^2      & ... & N^2      \\
%        ...\\
%        1 & 2^{N-1} & 3^{N-1} & 4^{N-1} & ... & N^{N-1} \\
%    \end{bmatrix}
%    \begin{bmatrix}
%        C_{N1}\\
%        C_{N2}\\
%        C_{N3}\\
%        ...\\
%        C_{NN}\\
%    \end{bmatrix}
%    =
%    \begin{bmatrix}
%    1\\
%    0\\
%    0\\
%    ...\\
%    0\\
%    \end{bmatrix}
%\end{eqnarray}</script><h3 id="point-1"><a href="#point-1" class="headerlink" title="point 1"></a>point 1</h3><p>&#x2026;</p>
<h3 id="point-k-k01i-1"><a href="#point-k-k-0-1-&#x2026;-i-1" class="headerlink" title="point k (k=0,1,&#x2026;,i-1)"></a>point k (k=0,1,&#x2026;,i-1)</h3><p>For point k, we have:</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
    f(x-k\delta) & = & f(x) - k\delta f'(x) +
                        \frac{ (-k)^2\delta^2 }{2!} f''(x) +
                        ... +
                        \frac{(-k)^{2i}\delta^{2i}}{(2i)!}  f^{(2i)} (x)  +
                        O(\delta^{2i+1})\\
    ...\\
    f(x-\delta ) & = & f(x) -  \delta  f'(x) +
                        \frac{(-1)^2\delta ^2}{2!}  f''(x)  +
                        ... +
                        \frac{(-1)^{2i}\delta^{2i}}{(2i)!}  f^{(2i)} (x)  +
                        O(\delta^{2i+1})\\
    f(x) & = & f(x)\\
    f(x+\delta ) & = & f(x) +  \delta  f'(x) +
                            \frac{\delta ^2}{2!}  f''(x)  +
                            %\frac{\delta ^3}{3!}  f^{(3)} (x)  +
                            ... +
                            \frac{\delta ^{2i}}{(2i)!}  f^{(2i)} (x)  +
                            O(\delta^{2i+1})\\
    ...\\
    f(x+(2i-k)\delta) & = & f(x) +  (2i-k)\delta  f'(x) +
                            \frac{(2i-k)^2 \delta ^2}{2!}  f''(x)  +
                            %\frac{(2i-k)^3 \delta ^3}{3!}  f^{(3)} (x)  +
                            ... +
                            \frac{(2i-k)^{2i}\delta ^{2i}}{(2i)!}  f^{(2i)} (x)  +
                            O(\delta^{2i+1})\\
\end{eqnarray}</script><p>Thus, $f&#x2019;(x)$ is:</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
    f'(x) & = & \frac{f(x-k\delta) - f(x)}{- k\delta }
                        -\frac{ (-k)\delta }{2!} f''(x) -
                        ...
                        -\frac{(-k)^{2i-1}\delta^{2i-1}}{(2i)!}  f^{(2i)} (x)  +
                        O(\delta^{2i})\\
    ...\\
    f'(x) & = & \frac{f(x-\delta ) - f(x)}{-  \delta  }
                        -\frac{-\delta}{2!}  f''(x)  -
                        ...-
                        -\frac{(-1)^{2i-1}\delta^{2i-1}}{(2i)!}  f^{(2i)} (x)  +
                        O(\delta^{2i})\\
    f'(x) & = & \frac{f(x+\delta ) - f(x)}{\delta  }
                            -\frac{\delta}{2!}  f''(x)
                            - ...
                            - \frac{\delta ^{2i-1}}{(2i)!}  f^{(2i)} (x)  +
                            O(\delta^{2i})\\
    ...\\
    f'(x) & = & \frac{f(x+(2i-k)\delta)-f(x)}{(2i-k)\delta  }
                            -\frac{(2i-k) \delta }{2!}  f''(x)
                            -...
                            -\frac{(2i-k)^{2i-1}\delta ^{2i-1}}{(2i)!}  f^{(2i)} (x)  +
                            O(\delta^{2i})\\
\end{eqnarray}</script><p>adding all these $f&#x2019;(x)$ proportionally:</p>
<script type="math/tex; mode=display">
\begin{equation}
    \begin{aligned}
        f'(x) = & \sum \limits_{j=-k}^{2i-k} C^k_{(2i)j} \frac{ f(x+j\delta)-f(x) }{j\delta}\\
                &-   \frac{\delta}{2!}f''(x) \sum\limits_{j=-k}^{2i-k}jC^k_{(2i)j}
                 -   \frac{\delta^2}{3!}f^{(3)}(x) \sum\limits_{j=-k}^{2i-k}j^2C^k_{(2i)j}
                 -   ...
                 -   \frac{\delta^{2i-1}}{(2i)!}f^{(2i)}(x) \sum \limits_{j=-k}^{2i-k}j^{2i-1}C^k_{(2i)j}
    \end{aligned}
\end{equation}</script><p>Thus, for 2ith order accuracy, item of $\delta,\delta^2,&#x2026;,\delta^{2i-1}$ should be eliminated, so:</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
    \begin{bmatrix}
        1      & 1       &... &   1    &  1  & ... & 1                \\
        -k     & -k+1    &... &  -1    &  1  & ... & 2i-k             \\
        (-k)^2 &(-k+1)^2 &... & (-1)^2 & 1^2 & ... & (2i-k)^2         \\
        (-k)^3 &(-k+1)^3 &... & (-1)^2 & 1^3 & ... & (2i-k)^3         \\
        ...\\
        (-k)^{2i-1} & (-k+1)^{2i-1} & ... &(-1)^{2i-1} & 1^{2i-1} & ... & (2i-k)^{2i-1}
    \end{bmatrix}
    \begin{bmatrix}
    C^k_{(2i)(-k)}   \\
    C^k_{(2i)(-k+1)} \\
    C^k_{(2i)(-k+2)} \\
    ...\\
    C^k_{(2i)(-1)}   \\
    C^k_{(2i)1}      \\
    ...\\
    C^k_{(2i)(2i-k)}
    \end{bmatrix}
    =
    \begin{bmatrix}
    1\\
    0\\
    0\\
    ...\\
    0\\
    \end{bmatrix}
    \label{LA}
\end{eqnarray}</script><h2 id="result"><a href="#Result" class="headerlink" title="Result"></a>Result</h2><p>For $2i$th order FD accuracy, the $k$th$(k=0,1,2,&#x2026;,i-1)$ boundary points, $C^k_{(2i)(j)}$ $(j=-k,-k+1,&#x2026;,-1,1,&#x2026;,2i-k)$ is the solution of $\eqref{LA}$, while</p>
<script type="math/tex; mode=display">
\begin{equation}
    \begin{aligned}
        f'(x) = & \sum \limits_{j=-k}^{2i-k} C^k_{(2i)j} \frac{ f(x+j\delta)-f(x) }{j\delta}\\
    \end{aligned}
\end{equation}</script><h2 id="examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h2><p>FD scheme corresponding to accuracy orders of 2,4,6,8,10,12 are implemented to $f(x) = sin(x)$, their FD results are ploted versus theoretical first order derivative of $f&#x2019;(x) = cos(x)$, as well as their error.<br><img src="/2016/10/17/finite-difference-asymmetric/fd1_asym.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Solving Vandermonde Equation for FD]]></title>
      <url>http://sheng09.github.io/2016/10/15/vandermonde/</url>
      <content type="html"><![CDATA[<p>This post presents how to solve vandermonde equation in finite-difference.&#x3000;For 2N order accuracy <a href="http://sheng09.github.io/2016/10/13/finite-difference/#conclusion">finite-difference of derivatives</a>, $C_k(k=1,2,&#x2026;,N)$ is the solution of a vandermonde equation:</p>
<script type="math/tex; mode=display">
\begin{equation}
    \begin{bmatrix}
        1        & 1        & 1        & ... & 1        \\
        1^2      & 2^2      & 3^2      & ... & N^2      \\
        1^4      & 2^4      & 3^4      & ... & N^4      \\
        1^6      & 2^6      & 3^6      & ... & N^6      \\
        ... \\
        1^{2N-2} & 2^{2N-2} & 3^{2N-2} & ... & N^{2N-2}
    \end{bmatrix}
    \begin{bmatrix}
        C_1 \\ C_2 \\ C_3 \\ C_4 \\ ... \\ C_N
    \end{bmatrix}
    =
    \begin{bmatrix}
        1 \\ 0 \\ 0 \\ 0 \\ ... \\ 0
    \end{bmatrix}
    \label{equ}
\end{equation}</script><a id="more"></a>
<!-- toc -->
<ul>
<li><a href="#gaussian-elimination">Gaussian Elimination</a><ul>
<li><a href="#step-1">Step 1</a></li>
<li><a href="#step-2">Step 2</a></li>
<li><a href="#step-3">Step 3</a></li>
<li><a href="#step-k">Step k</a></li>
<li><a href="#step-n-1">Step N-1</a></li>
</ul>
</li>
<li><a href="#result">Result</a></li>
<li><a href="#value-and-program">Value and Program</a></li>
</ul>
<!-- tocstop -->
<h2 id="gaussian-elimination"><a href="#Gaussian-Elimination" class="headerlink" title="Gaussian Elimination"></a>Gaussian Elimination</h2><p>This linear equation could be solved by gaussian elimination.<br>Augmented matrix of linear equation $\eqref{equ}$ is:</p>
<script type="math/tex; mode=display">
\begin{equation}
    \begin{bmatrix}
        1^0 & 2^0 & 3^0 & 4^0 & 5^0 & 6^0 & ... & N^0 & 1\\
        1^2 & 2^2 & 3^2 & 4^2 & 5^2 & 6^2 & ... & N^2 & 0\\
        1^4 & 2^4 & 3^4 & 4^4 & 5^4 & 6^4 & ... & N^4 & 0\\
        1^6 & 2^6 & 3^6 & 4^6 & 5^6 & 6^6 & ... & N^6 & 0\\
        1^8 & 2^8 & 3^8 & 4^8 & 5^8 & 6^8 & ... & N^8 & 0\\
        ... \\
        1^{2N-2} & 2^{2N-2} & 3^{2N-2} & ... & ...& ...& ... & N^{2N-2} & 0 \\
    \end{bmatrix}
\end{equation}</script><p>An upper triangular matrix could be obtained by subtracting the row $(i+1)$  from row $i$:</p>
<h3 id="step-1"><a href="#Step-1" class="headerlink" title="Step 1"></a>Step 1</h3><p>$row(i+1) - row(i) [i=1,2,3,4,5,&#x2026;,N-1] $</p>
<script type="math/tex; mode=display">
\begin{equation}
    \begin{bmatrix}
        1^0 & 2^0              & 3^0                 & ... & N^0            & 1   \\
        0   & 2^2-1            & 3^2-1               & ... & N^2-1          &-1   \\
        0   & 2^2(2^2-1)       & 3^2(3^2-1)          & ... & N^2(N^2-1)     & 0   \\
        0   & 2^4(2^2-1)       & 3^4(3^2-1)          & ... & N^4(N^2-1)     & 0   \\
        0   & 2^6(2^2-1)       & 3^6(3^2-1)          & ... & N^6(N^2-1)     & 0   \\
        ... \\
        0   & 2^{2N-4}(2^2-1)  & 3^{2N-4}(3^2-1) 　& ... & N^{2N-4}(N^2-1)& 0   \\
    \end{bmatrix}
\end{equation}</script><h3 id="step-2"><a href="#Step-2" class="headerlink" title="Step 2"></a>Step 2</h3><p>$row(i+1) - 2^2row(i) [i=2,3,4,5,&#x2026;,N-1] $</p>
<script type="math/tex; mode=display">
\begin{equation}
    \begin{bmatrix}
        1 & 1     & 1                        & ... &  1                        & 1   \\
        0 & 2^2-1 &              3^2-1       & ... &               N^2-1       & -1  \\
        0 & 0     &    (3^2-2^2)(3^2-1)      & ... &     (N^2-2^2)(N^2-1)      & 2^2 \\
        0 & 0     & 3^2(3^2-2^2)(3^2-1)      & ... &  N^2(N^2-2^2)(N^2-1)      & 0   \\
        0 & 0     & 3^4(3^2-2^2)(3^2-1)      & ... &  N^4(N^2-2^2)(N^2-1)      & 0   \\
        ...\\
        0 & 0     & 3^{2N-6}(3^2-2^2)(3^2-1) & ... &  N^{2N-6}(N^2-2^2)(N^2-1) & 0   \\
    \end{bmatrix}
\end{equation}</script><h3 id="step-3"><a href="#Step-3" class="headerlink" title="Step 3"></a>Step 3</h3><p>$row(i+1) - 3^2row(i) [i=3,4,5,&#x2026;,N-1] $</p>
<script type="math/tex; mode=display">
\begin{equation}
    \begin{bmatrix}
        1 & 1     & 1                   & ... &   1                                & 1         \\
        0 & 2^2-1 &              3^2-1  & ... &                        N^2-1       & -1        \\
        0 & 0     &    (3^2-2^2)(3^2-1) & ... &              (N^2-2^2)(N^2-1)      & 2^2       \\
        0 & 0     & 0                   & ... &     (N^2-3^2)(N^2-2^2)(N^2-1)      & -2^23^2   \\
        0 & 0     & 0                   & ... &  N^2(N^2-3^2)(N^2-2^2)(N^2-1)      & 0         \\
        ...\\
        0 & 0     & 0                   & ... &  N^{2N-8}(N^2-3^2)(N^2-2^2)(N^2-1) & 0         \\
    \end{bmatrix}
\end{equation}</script><h3 id="step-k"><a href="#Step-k" class="headerlink" title="Step k"></a>Step k</h3><p>$row(i+1) - k^2row(i) [i=k,k+1,&#x2026;,N-1] $<br>&#x2026;</p>
<h3 id="step-n-1"><a href="#Step-N-1" class="headerlink" title="Step N-1"></a>Step N-1</h3><p>$row(i+1) - k^2row(i) [i=N-1] $</p>
<p>Detail derivations are presented in <a href="/exam/fd_coef_vandermonde.pdf">fd_coef_vandermonde.pdf</a>.</p>
<h2 id="result"><a href="#Result" class="headerlink" title="Result"></a>Result</h2><p>Finally, the augmented matrix is:</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
    \begin{bmatrix}
        1 & a_{12} & a_{13} & a_{14}  & ... & a_{1N} 　　　　　& b_1  \\
        0 & 1      & a_{23} & a_{24}  & ... & a_{2N} 　　　　　& b_2  \\
        0 & 0      & 1      & a_{34}  & ... & a_{3N} 　　　　　& b_3  \\
        ...\\
        0 & 0      &0       & 0       & ... & 1      　　　　　& b_4  \\
    \end{bmatrix}\\

\end{eqnarray}</script><script type="math/tex; mode=display">
\begin{eqnarray}
    a_{ij} & = & \frac  { i (j+i-1)! } { j(2i-1)!(j-i)! } (j>i)\\
    b_i    & = & \frac  { (-1)^{i-1}  (i-1)! i! } { (2i-1)! } \\
\end{eqnarray}</script><p>Thus:</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
    C_i & = & b_i - \sum \limits_{j=i+1}^N a_{ij}C_j = \frac{ (-1)^{i-1}  (i-1)! i! } { (2i-1)! }
                                                        - \sum \limits_{j=i+1}^N \frac  { i (j+i-1)! } { j(2i-1)!(j-i)! } C_i \\
    C_N & = & \frac  { (-1)^{N-1}  (N-1)! N! } { (2N-1)! } \\
        %& = &  \sum \limits_{i=k+1}^N \frac{1}{N-k} \frac { (-1)^{k-1}  (k-1)! k! (i-k)!i } { i(2k-1)! (i-k)! }
        %     - \sum \limits_{i=k+1}^N  \frac  { k (i+k-1)! } { i(2k-1)!(i-k)! } C_i \\
        %& = &  \sum \limits_{i=k+1}^N \frac{1}{ i(2k-1)!(i-k)! }
        %        \left[ \frac{ (-1)^{k-1}  (k-1)! k! (i-k)!i }{N-k} - { k (i+k-1)! } C_i \right]
\end{eqnarray}</script><h2 id="value-and-program"><a href="#Value-and-Program" class="headerlink" title="Value and Program"></a>Value and Program</h2><p>Values of $C_i$ are calculated by <a href="/exam/fd_coef.py">fd_coef.py</a>.</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>order</th>
<th>$C_{1}$</th>
<th>$C_{2}$</th>
<th>$C_{3}$</th>
<th>$C_{4}$</th>
<th>$C_{5}$</th>
<th>$C_{6}$</th>
</tr>
</thead>
<tbody>
<tr>
<td>2</td>
<td>$1$</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>4</td>
<td>$4/3$</td>
<td>$-1/3$</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>6</td>
<td>$3/2$</td>
<td>$-3/5$</td>
<td>$1/10$</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>8</td>
<td>$8/5$</td>
<td>$-4/5$</td>
<td>$8/35$</td>
<td>$-1/35$</td>
<td></td>
<td></td>
</tr>
<tr>
<td>10</td>
<td>$5/3$</td>
<td>$-20/21$</td>
<td>$5/14$</td>
<td>$-5/63$</td>
<td>$1/126$</td>
<td></td>
</tr>
<tr>
<td>12</td>
<td>$12/7$</td>
<td>$-15/14$</td>
<td>$10/21$</td>
<td>$-1/7$</td>
<td>$2/77$</td>
<td>$-1/462$</td>
</tr>
</tbody>
</table>
</div>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Central Finite Difference of Derivatives(中心有限差分)]]></title>
      <url>http://sheng09.github.io/2016/10/13/finite-difference/</url>
      <content type="html"><![CDATA[<p>This post derived the method of central finite difference for calculating derivatives, especially for first and second order derivatives, and finally arrive at perfect results. Example are provided to verify the results.</p>
<a id="more"></a>
<!-- toc -->
<ul>
<li><a href="#taylor-expansion">Taylor expansion</a></li>
<li><a href="#derivatives">Derivatives</a><ul>
<li><a href="#1-first-order-derivative">(1) First order derivative</a></li>
<li><a href="#2-second-order-derivative">(2) Second order derivative</a></li>
</ul>
</li>
<li><a href="#higher-order-accuracy">Higher Order Accuracy</a><ul>
<li><a href="#1-fx">(1) $f&#x2019;(x)$</a></li>
<li><a href="#2-fx">(2) $f&#x2019;&#x2019;(x)$</a></li>
</ul>
</li>
<li><a href="#conclusion">Conclusion</a></li>
<li><a href="#examples">Examples</a></li>
<li><a href="#whats-more">What&#x2019;s more</a></li>
</ul>
<!-- tocstop -->
<h2 id="taylor-expansion"><a href="#Taylor-expansion" class="headerlink" title="Taylor expansion"></a>Taylor expansion</h2><p>According to Taylor expansion, we have:</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
    f(x+\delta ) & = & f(x) +  \delta  f'(x) +
                            \frac{\delta ^2}{2!}  f''(x)  +
                            \frac{\delta ^3}{3!}  f^{(3)} (x)  +
                            ... +
                            \frac{\delta ^i}{i!}  f^{(i)} (x)  +
                            \frac{\delta ^n}{n!}  f^{(n)} (x)  +
                            O(\delta^{n+1})\\
    f(x-\delta ) & = & f(x) -  \delta  f'(x) +
                        \frac{\delta ^2}{2!}  f''(x)  -
                        \frac{\delta ^3}{3!}  f^{(3)} (x)  +
                        ... +
                        \frac{(-\delta)^i}{i!}  f^{(i)} (x)  +
                        \frac{(-\delta)^n}{n!}  f^{(n)} (x)  +
                        O(\delta^{n+1})
\end{eqnarray}</script><h2 id="derivatives"><a href="#Derivatives" class="headerlink" title="Derivatives"></a>Derivatives</h2><p>In physical field, it is first and second order derivatives, as well as other boundary(initial) functions or constants, that compose the differential control equations. So we only pay attention to the first and second order derivatives.<br>Adding and subtraction of $f(x+\delta)$ and $f(x-\delta)$ lead to:</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
    \frac{f(x+\delta) + f(x-\delta)}{2} & = & f(x) +    \frac{\delta^2}{2!} f''(x) +
                                                        \frac{\delta^4}{4!} f^{(4)}(x) +
                                                        \frac{\delta^{2i}}{(2i)!} f^{(2i)}(x) +
                                                        O( \delta^{2i+2})
                                                        \label{second} \\
    \frac{f(x+\delta) - f(x-\delta)}{2} & = & \delta f'(x) +
                                            \frac{\delta^3}{3!} f^{(3)}(x) +
                                            \frac{\delta^5}{5!} f^{(5)}(x) +
                                            \frac{\delta^{2i-1}}{(2i-1)!} f^{(2i-1)}(x) +
                                            O(\delta^{2i+1})
                                            \label{first}

\end{eqnarray}</script><h3 id="1-first-order-derivative"><a href="#1-First-order-derivative" class="headerlink" title="(1) First order derivative"></a>(1) First order derivative</h3><p>According to $\eqref{first}$, $f&#x2019;(x)$ should be:</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
    f'(x;\delta) = \frac{f(x+\delta) - f(x-\delta)}{2\delta}
                                                        - \frac{\delta^2}{3!} f^{(3)}(x)
                                                        - \frac{\delta^4}{5!} f^{(5)}(x)
                                                        - \frac{\delta^{2i-2}}{(2i-1)!} f^{(2i-1)}(x)
                                                        + O(\delta^{2i})
\end{eqnarray}</script><p>omitting tail items leads to $f&#x2019;(x) = \frac{f(x+\delta) - f(x-\delta)}{2\delta}$. The accuracy is $O(\delta^2)$, known as second order accuracy.</p>
<h3 id="2-second-order-derivative"><a href="#2-Second-order-derivative" class="headerlink" title="(2) Second order derivative"></a>(2) Second order derivative</h3><p>In the same way, $f&#x2019;&#x2019;(x)$ is derived from $\eqref{second}$</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
 f''(x;\delta)  = \frac{f(x+\delta) + f(x-\delta) - 2f(x)}{ \delta^2}
                                                    - \frac{2\delta^2}{4!} f^{(4)}(x)
                                                    - \frac{2\delta^4}{6!} f^{(6)}(x)
                                                    - \frac{2\delta^{2i-2}}{(2i)!} f^{(2i)}(x)
                                                    + O( \delta^{2i})
\end{eqnarray}</script><p>omitting tail items leads to $f&#x2019;&#x2019;(x) = \frac{f(x+\delta) + f(x-\delta) - 2f(x)}{ \delta^2}$. The accuracy is $O(\delta^2)$, also know as second order accuaray.</p>
<h2 id="higher-order-accuracy"><a href="#Higher-Order-Accuracy" class="headerlink" title="Higher Order Accuracy"></a>Higher Order Accuracy</h2><p>To increase the accuracy, $f&#x2019;(x;\delta)$, $f&#x2019;(x;2\delta)$, $f&#x2019;(x;3\delta)$&#x2026;etc are could be added together by appropriate ratios to counteract the items of $\delta^2$,$\delta^4$,$\delta^6$&#x2026;etc. This method works for $f&#x2019;&#x2019;(x)$ as well.</p>
<h3 id="1-fx"><a href="#1-f&#x2019;-x" class="headerlink" title="(1) $f&#x2019;(x)$"></a>(1) $f&#x2019;(x)$</h3><p>For step of $\delta$, $2\delta$, $3\delta$&#x2026;etc, we have:</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
    \begin{cases}
        f'(x; \delta) & = & \frac{f(x+\delta) - f(x-\delta)}{2\delta}
                                        - \frac{\delta^2}{3!} f^{(3)}(x)
                                        - \frac{\delta^4}{5!} f^{(5)}(x)
                                        - \frac{\delta^{2i-2}}{(2i-1)!}  f^{(2i-1)}(x)
                                        + O(\delta^{2i})\\
        f'(x;2\delta) & = & \frac{f(x+2\delta) - f(x-2\delta)}{2 (2\delta)}
                                        - \frac{2^2\delta^2}{3!}  f^{(3)}(x)
                                        - \frac{2^4\delta^4}{5!}  f^{(5)}(x)
                                        - \frac{2^{2i-2}\delta^{2i-2}}{(2i-1)!}  f^{(2i-1)}(x)
                                        + O(\delta^{2i}) \\
        f'(x;3\delta) & = & \frac{f(x+3\delta) - f(x-3\delta)}{2 (3\delta)}
                                        - \frac{3^2\delta^2}{3!}  f^{(3)}(x)
                                        - \frac{3^4\delta^4}{5!}  f^{(5)}(x)
                                        - \frac{3^{2i-2}\delta^{2i-2}}{(2i-1)!}  f^{(2i-1)}(x)
                                        + O(\delta^{2i}) \\
        ...\\
        f'(x;N\delta) & = & \frac{f(x+N\delta) - f(x-N\delta)}{2 (N\delta)}
                                        - \frac{N^2\delta^2}{3!}  f^{(3)}(x)
                                        - \frac{N^4\delta^4}{5!}  f^{(5)}(x)
                                        - \frac{N^{2i-2}\delta^{2i-2}}{(2i-1)!}  f^{(2i-1)}(x)
                                        + O(\delta^{2i}) \\
    \end{cases}
\end{eqnarray}</script><p>summing all these items proportionally from $f&#x2019;(x;\delta)$ to $f&#x2019;(x;N\delta)$ leads to:</p>
<script type="math/tex; mode=display">
\begin{equation}
\begin{aligned}
    f'(x) = &\sum \limits_{k=1}^N {C_k \frac{ f(x+k\delta) - f(x-k\delta) }{2k\delta} } + O(\delta^{2i}) \\
            & - \frac{\delta^2 f^{(3)}(x) }{3!} \sum \limits_{k=1}^N {C_k k^2}
              - \frac{\delta^4 f^{(5)}(x) }{5!} \sum \limits_{k=1}^N {C_k k^4}
              - ...
              - \frac{\delta^{2i-2} f^{(2i-1)}(x) }{5!} \sum \limits_{k=1}^N {C_k k^{2i-2}}
\end{aligned}
\end{equation}</script><script type="math/tex; mode=display">
\begin{equation}
C_1+C_2+C_3+...+C_N = 1
\end{equation}</script><p>so, if we want to have 2ith order accuracy, all item coefficients of $\sum \limits_{k=1}^N {C_k k^{**}}$ must have value of zero. Besides, to determine the value of $C_1,C_2,&#x2026;,C_N$, $i$ should equals to $N$. So we arrive at a linear equation of $C$:</p>
<script type="math/tex; mode=display">
\begin{equation}
    \begin{bmatrix}
        1        & 1        & 1        & ... & 1        \\
        1^2      & 2^2      & 3^2      & ... & N^2      \\
        1^4      & 2^4      & 3^4      & ... & N^4      \\
        1^6      & 2^6      & 3^6      & ... & N^6      \\
        ... \\
        1^{2N-2} & 2^{2N-2} & 3^{2N-2} & ... & N^{2N-2}
    \end{bmatrix}
    \begin{bmatrix}
        C_1 \\ C_2 \\ C_3 \\ C_4 \\ ... \\ C_N
    \end{bmatrix}
    =
    \begin{bmatrix}
        1 \\ 0 \\ 0 \\ 0 \\ ... \\ 0
    \end{bmatrix}
    \label{M_C}
\end{equation}</script><p>By calculation, $C_1,C_2,C_3,&#x2026;,C_N$ have the value of:</p>
<h3 id="2-fx"><a href="#2-f&#x2019;&#x2019;-x" class="headerlink" title="(2) $f&#x2019;&#x2019;(x)$"></a>(2) $f&#x2019;&#x2019;(x)$</h3><p>For step of $\delta$, $2\delta$, $3\delta$&#x2026;etc, we have:</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
    \begin{cases}
        f''(x; \delta)  & = & \frac{f(x+\delta) + f(x-\delta) - 2f(x)}{ \delta^2}
                                                            - \frac{2\delta^2}{4!} f^{(4)}(x)
                                                            - \frac{2\delta^4}{6!} f^{(6)}(x)
                                                            - \frac{2\delta^{2i-2}}{(2i)!} f^{(2i)}(x)
                                                            + O( \delta^{2i}) \\
f''(x;2\delta)  & = & \frac{f(x+2\delta) + f(x-2\delta) - 2f(x)}{ 2^2\delta^2}
                                                    - 2^2     \frac{2 \delta^2}{4!} f^{(4)}(x)
                                                    - 2^4     \frac{2 \delta^4}{6!} f^{(6)}(x)
                                                    - 2^{2i-2}\frac{2 \delta^{2i-2}}{(2i)!} f^{(2i)}(x)
                                                    + O( \delta^{2i}) \\
f''(x;3\delta)  & = & \frac{f(x+3\delta) + f(x-3\delta) - 2f(x)}{3^2 \delta^2}
                                                    - 3^2     \frac{2 \delta^2}{4!} f^{(4)}(x)
                                                    - 3^4     \frac{2 \delta^4}{6!} f^{(6)}(x)
                                                    - 3^{2i-2}\frac{2 \delta^{2i-2}}{(2i)!} f^{(2i)}(x)
                                                    + O( \delta^{2i}) \\
f''(x;N\delta)  & = & \frac{f(x+N\delta) + f(x-N\delta) - 2f(x)}{N^2 \delta^2}
                                                    - N^2     \frac{2 \delta^2}{4!} f^{(4)}(x)
                                                    - N^4     \frac{2 \delta^4}{6!} f^{(6)}(x)
                                                    - N^{2i-2}\frac{2 \delta^{2i-2}}{(2i)!} f^{(2i)}(x)
                                                    + O( \delta^{2i})
    \end{cases}
\end{eqnarray}</script><p>summing all these items proportionally from $f&#x2019;(x;\delta)$ to $f&#x2019;(x;N\delta)$ leads to:</p>
<script type="math/tex; mode=display">
\begin{equation}
    \begin{aligned}
        f''(x) = & \sum \limits_{k=1}^N F_k \frac{ f(x+k\delta) - f(x-k\delta) -2f(x) }{k^2 \delta^2} +O( \delta^{2i}) \\
                & - \frac{2 \delta^2}{4!} f^{(4)}(x) \sum \limits_{k=1}^N F_k k^2
                  - \frac{2 \delta^4}{6!} f^{(6)}(x) \sum \limits_{k=1}^N F_k k^4
                  ...
                  - \frac{2 \delta^{2i-2}}{(2i)!} f^{(2i)}(x) \sum \limits_{k=1}^N F_k k^{2i-2}
    \end{aligned}
\end{equation}</script><script type="math/tex; mode=display">
\begin{equation}
F_1+F_2+F_3+...+F_N = 1
\end{equation}</script><p>so, if we want to have 2ith order accuracy, all item coefficients of $\sum \limits_{k=1}^N {F_k k^{**}}$ must have value of zero. Besides, to determine the value of $F_1,F_2,&#x2026;,F_N$, $i$ should equals to $N$. So we arrive at a linear equation of $F$, which is same as $\eqref{M_C}$.</p>
<script type="math/tex; mode=display">
\begin{equation}
    \begin{bmatrix}
        1        & 1        & 1        & ... & 1        \\
        1^2      & 2^2      & 3^2      & ... & N^2      \\
        1^4      & 2^4      & 3^4      & ... & N^4      \\
        1^6      & 2^6      & 3^6      & ... & N^6      \\
        ... \\
        1^{2N-2} & 2^{2N-2} & 3^{2N-2} & ... & N^{2N-2}
    \end{bmatrix}
    \begin{bmatrix}
        F_1 \\ F_2 \\ F_3 \\ F_4 \\ ... \\ F_N
    \end{bmatrix}
    =
    \begin{bmatrix}
        1 \\ 0 \\ 0 \\ 0 \\ ... \\ 0
    \end{bmatrix}
    \label{M_F}
\end{equation}</script><h2 id="conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>To sum up, finite difference of 2Nth order accuracy for first or second order derivative are:</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
D  [f(x)]   & = & \sum \limits_{k=1}^N {C_k \frac{ f(x+k\delta) - f(x-k\delta) }{2k\delta} } \\
D^2[f(x)]   & = & \sum \limits_{k=1}^N C_k \frac{ f(x+k\delta) - f(x-k\delta) -2f(x) }{k^2 \delta^2} \\
%C_k         & = &
\end{eqnarray}</script><p>Values of $C_k$ are obtained by <a href="http://sheng09.github.io/2016/10/15/vandermonde/">solving vandermonde equation</a>.</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
    \begin{cases}
    C_i & = & \frac{ (-1)^{i-1}  (i-1)! i! } { (2i-1)! } - \sum \limits_{j=i+1}^N \frac  { i (j+i-1)! } { j(2i-1)!(j-i)! } C_i \\
    %\left[ i= 1,2,3...,N-1 \right]\\
    C_N & = & \frac  { (-1)^{N-1}  (N-1)! N! } { (2N-1)! } \\
    \end{cases}
\end{eqnarray}</script><p>by simplifying:</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
D  [f(x)]   & = & \sum \limits_{k=1}^N  \frac{c_k}{\delta}   \left[f(x+k\delta) - f(x-k\delta)         \right] \\
D^2[f(x)]   & = & \sum \limits_{k=1}^N  \frac{f_k}{\delta^2} \left[f(x+k\delta) - f(x-l\delta) - 2f(x) \right]  \\
c_k         & = & \frac{C_k}{2k} \\
f_k         & = & \frac{C_k}{k^2}
\end{eqnarray}</script><p>Values of $C_k$, $c_k$ and $f_k$ are:</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>order</th>
<th>$C_{1}$</th>
<th>$C_{2}$</th>
<th>$C_{3}$</th>
<th>$C_{4}$</th>
<th>$C_{5}$</th>
<th>$C_{6}$</th>
</tr>
</thead>
<tbody>
<tr>
<td>2</td>
<td>$1$</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>4</td>
<td>$4/3$</td>
<td>$-1/3$</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>6</td>
<td>$3/2$</td>
<td>$-3/5$</td>
<td>$1/10$</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>8</td>
<td>$8/5$</td>
<td>$-4/5$</td>
<td>$8/35$</td>
<td>$-1/35$</td>
<td></td>
<td></td>
</tr>
<tr>
<td>10</td>
<td>$5/3$</td>
<td>$-20/21$</td>
<td>$5/14$</td>
<td>$-5/63$</td>
<td>$1/126$</td>
<td></td>
</tr>
<tr>
<td>12</td>
<td>$12/7$</td>
<td>$-15/14$</td>
<td>$10/21$</td>
<td>$-1/7$</td>
<td>$2/77$</td>
<td>$-1/462$</td>
</tr>
</tbody>
</table>
</div>
<div class="table-container">
<table>
<thead>
<tr>
<th>order</th>
<th>$c_{1}$</th>
<th>$c_{2}$</th>
<th>$c_{3}$</th>
<th>$c_{4}$</th>
<th>$c_{5}$</th>
<th>$c_{6}$</th>
</tr>
</thead>
<tbody>
<tr>
<td>2</td>
<td>$0.5$</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>4</td>
<td>$2/3$</td>
<td>$-1/12$</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>6</td>
<td>$3/4$</td>
<td>$-3/20$</td>
<td>$1/60$</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>8</td>
<td>$4/5$</td>
<td>$-1/5$</td>
<td>$4/105$</td>
<td>$-1/280$</td>
<td></td>
<td></td>
</tr>
<tr>
<td>10</td>
<td>$5/6$</td>
<td>$-5/21$</td>
<td>$5/84$</td>
<td>$-5/504$</td>
<td>$1/1260$</td>
<td></td>
</tr>
<tr>
<td>12</td>
<td>$6/7$</td>
<td>$-15/56$</td>
<td>$5/63$</td>
<td>$-1/56$</td>
<td>$1/385$</td>
<td>$-1/5544$</td>
</tr>
</tbody>
</table>
</div>
<div class="table-container">
<table>
<thead>
<tr>
<th>order</th>
<th>$f_{1}$</th>
<th>$f_{2}$</th>
<th>$f_{3}$</th>
<th>$f_{4}$</th>
<th>$f_{5}$</th>
<th>$f_{6}$</th>
</tr>
</thead>
<tbody>
<tr>
<td>2</td>
<td>$1.0$</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>4</td>
<td>$4/3$</td>
<td>$-1/12$</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>6</td>
<td>$3/2$</td>
<td>$-3/20$</td>
<td>$1/90$</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>8</td>
<td>$8/5$</td>
<td>$-1/5$</td>
<td>$8/315$</td>
<td>$-1/560$</td>
<td></td>
<td></td>
</tr>
<tr>
<td>10</td>
<td>$5/3$</td>
<td>$-5/21$</td>
<td>$5/126$</td>
<td>$-5/1008$</td>
<td>$1/3150$</td>
<td></td>
</tr>
<tr>
<td>12</td>
<td>$12/7$</td>
<td>$-15/56$</td>
<td>$10/189$</td>
<td>$-1/112$</td>
<td>$2/1925$</td>
<td>$-1/16632$</td>
</tr>
</tbody>
</table>
</div>
<h2 id="examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h2><p>Applying finite-difference method to calculate the first and second derivatives of $f(x)=sin(x)$, results of 2nd, 4th, 6th order accuracy are presented below, as well as their error.<br><a href="/exam/fd_eg.m">Codes</a><br><img src="/2016/10/13/finite-difference/1st.jpg" alt=""><br><img src="/2016/10/13/finite-difference/2nd.jpg" alt=""></p>
<h2 id="whats-more"><a href="#What&#x2019;s-more" class="headerlink" title="What&#x2019;s more"></a>What&#x2019;s more</h2><p>Method presented above applies to collocated grid and symmetric points only. Find method for staggered grid, and <a href="http://sheng09.github.io/2016/10/17/finite-difference-asymmetric/">method for processing boundary points(asymmetric method)</a>.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[组合]]></title>
      <url>http://sheng09.github.io/2016/10/12/combination/</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[快速排列]]></title>
      <url>http://sheng09.github.io/2016/10/11/fast-permutation/</url>
      <content type="html"><![CDATA[<p>&#x5229;&#x7528;&#x4F4D;&#x8FD0;&#x7B97;&#xFF0C;&#x5FEB;&#x901F;&#x5B9E;&#x73B0;&#x6392;&#x5217;&#x3002;<br><a id="more"></a></p>
<!-- toc -->
<ul>
<li><a href="#&#x6DF1;&#x5EA6;&#x641C;&#x7D22;">&#x6DF1;&#x5EA6;&#x641C;&#x7D22;</a></li>
<li><a href="#&#x4F18;&#x5316;&#x6DF1;&#x5EA6;&#x641C;&#x7D22;">&#x4F18;&#x5316;&#x6DF1;&#x5EA6;&#x641C;&#x7D22;</a></li>
<li><a href="#&#x4F4D;&#x4F18;&#x5316;">&#x4F4D;&#x4F18;&#x5316;</a></li>
<li><a href="#&#x5FEB;&#x901F;&#x4F4D;">&#x5FEB;&#x901F;&#x4F4D;</a></li>
<li><a href="#&#x66F4;&#x591A;&#x4F18;&#x5316;">&#x66F4;&#x591A;&#x4F18;&#x5316;</a></li>
<li><a href="#codes">Codes</a></li>
</ul>
<!-- tocstop -->
<h2 id="&#x6DF1;&#x5EA6;&#x641C;&#x7D22;"><a href="#&#x6DF1;&#x5EA6;&#x641C;&#x7D22;" class="headerlink" title="&#x6DF1;&#x5EA6;&#x641C;&#x7D22;"></a>&#x6DF1;&#x5EA6;&#x641C;&#x7D22;</h2><p>&#x5229;&#x7528;&#x9012;&#x5F52;&#xFF0C;&#x6BCF;&#x4E00;&#x6B21;&#x653E;&#x7F6E;&#xFF0C;&#x9996;&#x5148;&#x68C0;&#x67E5;&#x5176;&#x662F;&#x5426;&#x4E0E;&#x524D;&#x9762;&#x7684;&#x6570;&#x91CD;&#x5408;&#x3002;<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> n, end, count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> *sol = <span class="keyword">new</span> <span class="keyword">int</span> [n] {};</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>; i &lt; n; ++i) <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; sol[i];</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;;&quot;</span> &lt;&lt; count &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">permutation</span><span class="params">( <span class="keyword">int</span> pos )</span> </span>{</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) {</span><br><span class="line">        <span class="keyword">bool</span> ok = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j =<span class="number">0</span>; j &lt; pos; ++j) {</span><br><span class="line">            <span class="keyword">if</span>(i == sol[j]) {</span><br><span class="line">                ok = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>( ok ) {</span><br><span class="line">            <span class="keyword">if</span>(pos == end) {</span><br><span class="line">                count++;</span><br><span class="line">                <span class="comment">//print();</span></span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span> {</span><br><span class="line">                sol[pos] = i;</span><br><span class="line">                permutation(pos+<span class="number">1</span>);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</span> </span>{</span><br><span class="line">    n = <span class="built_in">std</span>::stoi(argv[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">if</span>( argc == <span class="number">3</span>)</span><br><span class="line">        end = <span class="built_in">std</span>::stoi(argv[<span class="number">2</span>]) - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        end = n - <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">std</span>::<span class="keyword">clock_t</span> tic = <span class="built_in">std</span>::clock();</span><br><span class="line">    permutation(<span class="number">0</span>);</span><br><span class="line">    <span class="built_in">std</span>::<span class="keyword">clock_t</span> toc = <span class="built_in">std</span>::clock();</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Solution: &quot;</span> &lt;&lt; count &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; <span class="keyword">float</span>(toc - tic) / CLOCKS_PER_SEC &lt;&lt; <span class="string">&quot;s\n&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
<h2 id="&#x4F18;&#x5316;&#x6DF1;&#x5EA6;&#x641C;&#x7D22;"><a href="#&#x4F18;&#x5316;&#x6DF1;&#x5EA6;&#x641C;&#x7D22;" class="headerlink" title="&#x4F18;&#x5316;&#x6DF1;&#x5EA6;&#x641C;&#x7D22;"></a>&#x4F18;&#x5316;&#x6DF1;&#x5EA6;&#x641C;&#x7D22;</h2><p>&#x5229;&#x7528;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#x6765;&#x6807;&#x8BB0;&#x54EA;&#x4E9B;&#x6570;&#x5DF2;&#x7ECF;&#x88AB;&#x5360;&#x7528;&#x4E86;&#xFF1A;<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> n, end, count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">bool</span> *avai = <span class="keyword">new</span> <span class="keyword">bool</span> [n] {};</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">permutation</span><span class="params">( <span class="keyword">int</span> pos )</span> </span>{</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) {</span><br><span class="line">        <span class="keyword">if</span>( !avai[i] ) {</span><br><span class="line">            <span class="keyword">if</span> (pos == end) {</span><br><span class="line">                count++;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span> {</span><br><span class="line">                avai[i] = <span class="literal">true</span>;</span><br><span class="line">                permutation(pos+<span class="number">1</span>);</span><br><span class="line">                avai[i] = <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
<h2 id="&#x4F4D;&#x4F18;&#x5316;"><a href="#&#x4F4D;&#x4F18;&#x5316;" class="headerlink" title="&#x4F4D;&#x4F18;&#x5316;"></a>&#x4F4D;&#x4F18;&#x5316;</h2><p>&#x5229;&#x7528;&#x4F4D;&#x6765;&#x6807;&#x8BB0;&#x54EA;&#x4E9B;&#x6570;&#x5DF2;&#x7ECF;&#x88AB;&#x5360;&#x7528;&#x4E86;&#xFF1A;<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> n, end, count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> avai = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">permutation</span><span class="params">( <span class="keyword">int</span> pos )</span> </span>{</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) {</span><br><span class="line">        <span class="keyword">if</span>( ( avai &amp; (<span class="number">1</span>&lt;&lt;i) ) == <span class="number">0</span> ) {</span><br><span class="line">            <span class="keyword">if</span> (pos == end) {</span><br><span class="line">                count++;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span> {</span><br><span class="line">                avai ^= (<span class="number">1</span>&lt;&lt;i);</span><br><span class="line">                permutation(pos+<span class="number">1</span>);</span><br><span class="line">                avai ^= (<span class="number">1</span>&lt;&lt;i);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
<h2 id="&#x5FEB;&#x901F;&#x4F4D;"><a href="#&#x5FEB;&#x901F;&#x4F4D;" class="headerlink" title="&#x5FEB;&#x901F;&#x4F4D;"></a>&#x5FEB;&#x901F;&#x4F4D;</h2><p>&#x5229;&#x7528;&#x4F4D;&#x6765;&#x6807;&#x8BB0;&#x54EA;&#x4E9B;&#x6570;&#x5DF2;&#x7ECF;&#x88AB;&#x5360;&#x7528;&#x4E86;&#xFF0C;&#x5E76;&#x4E14;&#x6BCF;&#x4E00;&#x6B21;&#x8FED;&#x4EE3;&#x76F4;&#x63A5;&#x53D6;&#x51FA;&#x672A;&#x5360;&#x7528;&#x7684;&#x6570;&#xFF1A;<br><code>x &amp; -x</code>&#x53EF;&#x4EE5;&#x53D6;&#x51FA;&#x6700;&#x53F3;&#x8FB9;&#x4E3A;1&#x7684;&#x90A3;&#x4E00;&#x4F4D;&#x3002;<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> n, end, count = <span class="number">0</span>, avai = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">permutation</span><span class="params">( <span class="keyword">int</span> pos )</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> empty =  ((<span class="number">1</span>&lt;&lt;n)<span class="number">-1</span>) &amp; ~avai; <span class="comment">// acquire the available bits and set them to 1.(eg 01110110)</span></span><br><span class="line">    <span class="keyword">while</span>( empty != <span class="number">0</span> ) {</span><br><span class="line">        <span class="keyword">int</span> p = empty &amp; (-empty);<span class="comment">//pick the most right bit that equals 1.(eg 00000010)</span></span><br><span class="line">        empty ^= p; <span class="comment">//set this bit to be 0, which means occupied. (eg 01110100)</span></span><br><span class="line">        <span class="keyword">if</span> (pos == end) {</span><br><span class="line">            count++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> {</span><br><span class="line">            avai ^= p;</span><br><span class="line">            permutation(pos+<span class="number">1</span>);</span><br><span class="line">            avai ^= p;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
<h2 id="&#x66F4;&#x591A;&#x4F18;&#x5316;"><a href="#&#x66F4;&#x591A;&#x4F18;&#x5316;" class="headerlink" title="&#x66F4;&#x591A;&#x4F18;&#x5316;"></a>&#x66F4;&#x591A;&#x4F18;&#x5316;</h2><p>&#x589E;&#x52A0;&#x51FD;&#x6570;&#x53C2;&#x6570;&#xFF0C;&#x51CF;&#x5C11;&#x8FD0;&#x7B97;&#x91CF;&#xFF1A;<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> n, end, count = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">permutation</span><span class="params">( <span class="keyword">int</span> pos, <span class="keyword">int</span> avai )</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> empty =  ((<span class="number">1</span>&lt;&lt;n)<span class="number">-1</span>) &amp; ~avai;</span><br><span class="line">    <span class="keyword">while</span>( empty != <span class="number">0</span> ) {</span><br><span class="line">        <span class="keyword">int</span> p = empty &amp; (-empty);</span><br><span class="line">        empty ^= p;</span><br><span class="line">        <span class="keyword">if</span> (pos == end) {</span><br><span class="line">            count++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span>  {</span><br><span class="line">            permutation(pos+<span class="number">1</span>, avai^p);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
<h2 id="codes"><a href="#Codes" class="headerlink" title="Codes"></a>Codes</h2><p><a href="/exam/fast-permutation.tgz">Download</a><br><a href="https://github.com/sheng09/sheng09.github.io.posts/tree/master/_posts/fast-permutation" target="_blank" rel="external">GitHub</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[位运算--快速判断奇偶性]]></title>
      <url>http://sheng09.github.io/2016/10/10/even-odd/</url>
      <content type="html"><![CDATA[<p>&#x5229;&#x7528;&#x4F4D;&#x8FD0;&#x7B97;&#xFF0C;&#x53EF;&#x4EE5;&#x5FEB;&#x901F;&#x7684;&#x5224;&#x65AD;&#x6574;&#x6570;&#x7684;&#x5947;&#x5076;&#x6027;&#x3002;<br><a id="more"></a><br>&#x6574;&#x6570;&#x4F4D;&#x5B58;&#x50A8;&#x65F6;&#xFF0C;&#x6700;&#x4F4E;&#x4F4D;&#x5982;&#x679C;&#x662F;0&#xFF0C;&#x90A3;&#x4E48;&#x5BF9;&#x5E94;&#x4E8E;&#x5076;&#x6570;&#xFF0C;&#x5982;&#x679C;&#x662F;1&#xFF0C;&#x5219;&#x5BF9;&#x5E94;&#x4E8E;&#x5947;&#x6570;&#x3002;&#xFF08;&#x6CE8;&#x610F;&#x8D1F;&#x6570;&#x7684;&#x8865;&#x7801;&#xFF09;<br>&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ISODD(x) ((x)&amp;1)</span></span><br></pre></td></tr></table></figure>
<p>&#x6D4B;&#x8BD5;&#xFF1A;<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//test.cpp</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ISODD(x) ((x)&amp;1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>** argv)</span> </span>{</span><br><span class="line">  <span class="keyword">int</span>    x[<span class="number">5</span>] = {<span class="number">0</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">-10</span>, <span class="number">-13</span>};</span><br><span class="line">  <span class="keyword">long</span>   l[<span class="number">4</span>] = {<span class="number">10</span>, <span class="number">11</span>, <span class="number">-10</span>, <span class="number">-13</span>};</span><br><span class="line">  <span class="keyword">short</span>  s[<span class="number">4</span>] = {<span class="number">10</span>, <span class="number">11</span>, <span class="number">-120</span>, <span class="number">-17</span>};</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; ++i) {</span><br><span class="line">    <span class="keyword">if</span>( ISODD(x[i]) )</span><br><span class="line">      <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;int:&quot;</span> &lt;&lt; x[i] &lt;&lt; <span class="string">&quot;: odd\n&quot;</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;int:&quot;</span> &lt;&lt; x[i] &lt;&lt; <span class="string">&quot;: even\n&quot;</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i) {</span><br><span class="line">    <span class="keyword">if</span>( ISODD(l[i]) )</span><br><span class="line">      <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;long:&quot;</span> &lt;&lt; l[i] &lt;&lt; <span class="string">&quot;: odd\n&quot;</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;long:&quot;</span> &lt;&lt; l[i] &lt;&lt; <span class="string">&quot;: even\n&quot;</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i) {</span><br><span class="line">    <span class="keyword">if</span>( ISODD(s[i]) )</span><br><span class="line">      <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;short:&quot;</span> &lt;&lt; s[i] &lt;&lt; <span class="string">&quot;: odd\n&quot;</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;short:&quot;</span> &lt;&lt; s[i] &lt;&lt; <span class="string">&quot;: even\n&quot;</span>;</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
<p>&#x8FD0;&#x884C;&#xFF1A;<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">bash&gt; g++ test.cpp -o <span class="built_in">test</span>  <span class="comment">#compile</span></span><br><span class="line">bash&gt; ./<span class="built_in">test</span></span><br><span class="line">int:0: even</span><br><span class="line">int:10: even</span><br><span class="line">int:11: odd</span><br><span class="line">int:-10: even</span><br><span class="line">int:-13: odd</span><br><span class="line">long:10: even</span><br><span class="line">long:11: odd</span><br><span class="line">long:-10: even</span><br><span class="line">long:-13: odd</span><br><span class="line">short:10: even</span><br><span class="line">short:11: odd</span><br><span class="line">short:-120: even</span><br><span class="line">short:-17: odd</span><br><span class="line">base&gt;</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[位运算]]></title>
      <url>http://sheng09.github.io/2016/10/07/BitComputing/</url>
      <content type="html"><![CDATA[<p>1&#x4E2A;Byte&#x7531;8&#x4E2A;Bit&#x6784;&#x6210;&#xFF0C;&#x6BCF;&#x4E00;&#x4E2A;Bit&#x4E3A;0&#x6216;1&#x3002;&#x9488;&#x5BF9;&#x8FD9;&#x4E00;&#x7279;&#x6027;&#xFF0C;&#x5229;&#x7528;&#x4F4D;&#x6765;&#x5B58;&#x50A8;&#x6570;&#x636E;&#xFF0C;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x7A7A;&#x95F4;&#x6700;&#x4F18;&#x5316;&#x3002;&#x6B64;&#x5916;&#xFF0C;&#x7531;&#x4E8E;CPU&#x6307;&#x4EE4;&#x96C6;&#x53EF;&#x4EE5;&#x4E00;&#x6B21;&#x6027;&#x64CD;&#x4F5C;&#x591A;&#x4E2A;Bit&#xFF0C;&#x6545;&#x8FD9;&#x4E00;&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x907F;&#x514D;&#x5BF9;&#x6570;&#x636E;&#x5143;&#x7D20;&#x7684;&#x5FAA;&#x73AF;&#x904D;&#x5386;&#x64CD;&#x4F5C;&#xFF0C;&#x4ECE;&#x800C;&#x5B9E;&#x73B0;&#x52A0;&#x901F;&#x3002;</p>
<a id="more"></a>
<!-- toc -->
<ul>
<li><a href="#&#x4F4D;">&#x4F4D;</a></li>
<li><a href="#&#x4F4D;&#x64CD;&#x4F5C;">&#x4F4D;&#x64CD;&#x4F5C;</a><ul>
<li><a href="#&#x4F4D;&#x903B;&#x8F91;&#x8FD0;&#x7B97;-~">&#x4F4D;&#x903B;&#x8F91;&#x8FD0;&#x7B97;<code>&amp; | ~ ^</code></a></li>
<li><a href="#&#x79FB;&#x4F4D;&#x8FD0;&#x7B97;">&#x79FB;&#x4F4D;&#x8FD0;&#x7B97; <code>&lt;&lt;</code> <code>&gt;&gt;</code></a></li>
<li><a href="#bit-mask">bit mask</a></li>
</ul>
</li>
</ul>
<!-- tocstop -->
<h2 id="&#x4F4D;"><a href="#&#x4F4D;" class="headerlink" title="&#x4F4D;"></a>&#x4F4D;</h2><p>&#x9488;&#x5BF9;&#x67D0;&#x4E00;&#x6570;&#x636E;&#xFF0C;&#x83B7;&#x53D6;&#x5176;&#x4F4D;&#x6570;&#x636E;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x4EE5;&#x4E0B;&#x51FD;&#x6570;<code>getBits()</code>&#xFF1A;<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//getBits.cpp</span></span><br><span class="line"><span class="comment">//Compile: g++ getBits.cpp -c -std=c++11 -o getBits</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt; <span class="built_in">std</span>::<span class="function"><span class="built_in">string</span> <span class="title">getBits</span><span class="params">(T _x)</span></span><br><span class="line"></span>{</span><br><span class="line">  <span class="keyword">long</span> len   = <span class="keyword">sizeof</span>(T) * <span class="number">8</span> - <span class="number">1</span>;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">string</span> str = <span class="string">&apos;[&apos;</span> + <span class="built_in">std</span>::to_string(len+<span class="number">1</span>) + <span class="string">&quot;bits]&quot;</span>;</span><br><span class="line">  <span class="keyword">long</span> x = *( (<span class="keyword">long</span>*)(&amp;_x) );</span><br><span class="line">  <span class="keyword">while</span>( len-- != <span class="number">0</span> ) {</span><br><span class="line">    <span class="keyword">if</span>( (x &gt;&gt; len) &amp; <span class="number">1</span> )</span><br><span class="line">      str+= <span class="string">&apos;1&apos;</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      str+= <span class="string">&apos;0&apos;</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">return</span> str;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
<h2 id="&#x4F4D;&#x64CD;&#x4F5C;"><a href="#&#x4F4D;&#x64CD;&#x4F5C;" class="headerlink" title="&#x4F4D;&#x64CD;&#x4F5C;"></a>&#x4F4D;&#x64CD;&#x4F5C;</h2><h3 id="&#x4F4D;&#x903B;&#x8F91;&#x8FD0;&#x7B97;-~"><a href="#&#x4F4D;&#x903B;&#x8F91;&#x8FD0;&#x7B97;-amp" class="headerlink" title="&#x4F4D;&#x903B;&#x8F91;&#x8FD0;&#x7B97;&amp; | ~ ^"></a>&#x4F4D;&#x903B;&#x8F91;&#x8FD0;&#x7B97;<code>&amp; | ~ ^</code></h3><p>&#x4E0D;&#x540C;&#x4E8E;&#x903B;&#x8F91;&#x8FD0;&#x7B97;&#x7B26;&#x4E2D;&#x7684;&#x201C;&#x4E0E;&#x201D;&#x201C;&#x6216;&#x201D;&#x201C;&#x975E;&#x201D;&#x201C;&#x4EA6;&#x6216;&#x201D;&#xFF0C;&#x4F4D;&#x903B;&#x8F91;&#x8FD0;&#x7B97;&#x5E76;&#x4E0D;&#x5BF9;&#x6570;&#x636E;&#x7684;&#x201C;TRUE&#x201D;&#x6216;&#x201C;FALSE&#x201D;&#xFF0C;&#x800C;&#x662F;&#x9488;&#x5BF9;&#x6BCF;&#x4E00;&#x4F4D;&#x7684;&#x201C;0&#x201D;&#x6216;&#x201C;1&#x201D;&#x505A;&#x903B;&#x8F91;&#x64CD;&#x4F5C;&#x3002;&#x4F8B;&#x5982;&#xFF1A;</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">00010100 &amp; 00001100 = 00000100</span><br><span class="line">00010100 | 00001100 = 00000100</span><br><span class="line">00010100 ^ 00001100 = 00011000</span><br><span class="line">~00000010 = 11111101</span><br></pre></td></tr></table></figure>
<h3 id="&#x79FB;&#x4F4D;&#x8FD0;&#x7B97;"><a href="#&#x79FB;&#x4F4D;&#x8FD0;&#x7B97;-lt-lt-gt-gt" class="headerlink" title="&#x79FB;&#x4F4D;&#x8FD0;&#x7B97; &lt;&lt; &gt;&gt;"></a>&#x79FB;&#x4F4D;&#x8FD0;&#x7B97; <code>&lt;&lt;</code> <code>&gt;&gt;</code></h3><p><code>&lt;&lt;</code> <code>&gt;&gt;</code>&#x5206;&#x522B;&#x8868;&#x793A;&#x5C06;&#x6570;&#x636E;&#x4F4D;&#x6574;&#x4F53;&#x5DE6;&#x79FB;&#x548C;&#x53F3;&#x79FB;&#x3002;&#x4F8B;&#x5982;&#xFF1A;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(00000001 &lt;&lt; 2) = 00000100</span><br><span class="line">(00001000 &gt;&gt; 3) = 00000001</span><br></pre></td></tr></table></figure></p>
<p>&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x53F3;&#x79FB;&#x8FD0;&#x7B97;&#x7B26;&#x53F7;&#x6D89;&#x53CA;&#x5230;&#x7B26;&#x53F7;&#x4F4D;&#x79FB;&#x52A8;&#x7684;&#x5904;&#x7406;&#xFF0C;&#x5206;&#x4E3A;&#x903B;&#x8F91;&#x79FB;&#x4F4D;&#x4E0E;&#x7B97;&#x672F;&#x79FB;&#x4F4D;&#x3002;&#x4E0D;&#x540C;&#x6570;&#x636E;&#x7684;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;&#xFF0C;&#x8BF7;&#x53C2;&#x8003;&#x5BF9;&#x5E94;&#x6807;&#x51C6;&#x3002;</p>
<h3 id="bit-mask"><a href="#bit-mask" class="headerlink" title="bit mask"></a>bit mask</h3><p>&#x6784;&#x5EFA;&#x4E00;&#x4E2A;&#x503C;A&#xFF0C;&#x5176;&#x67D0;&#x4E9B;&#x4F4D;&#x4E3A;0&#xFF0C;&#x67D0;&#x4E9B;&#x4F4D;&#x4E3A;1&#x3002;&#x90A3;&#x4E48;&#x5C06;&#x6570;&#x636E;&#x4E0E;A&#x505A;&#x4F4D;&#x8FD0;&#x7B97;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x5BF9;&#x6570;&#x636E;&#x7279;&#x5B9A;&#x4F4D;&#x7684;&#x4FEE;&#x6539;&#x3002;</p>
<p>&#x63D0;&#x53D6;&#x6570;&#x636E;&#x7684;&#x7B2C;1&#x4F4D;&#xFF1A; <code>dat &amp; 00000010</code>;<br>&#x8BBE;&#x7F6E;&#x6570;&#x636E;&#x7B2C;3&#x4F4D;&#x4E3A;0: <code>dat &amp;= 11110111</code>;<br>&#x8BBE;&#x7F6E;&#x6570;&#x636E;&#x7B2C;3&#x4F4D;&#x4E3A;1&#xFF1A;<code>dat |= 00001000</code>;<br>&#x6570;&#x636E;&#x7B2C;3&#x4F4D;&#x53D6;&#x53CD;&#xFF1A;<code>dat ^= 00001000</code>;<br>&#x63D0;&#x53D6;&#x6570;&#x636E;&#x6700;&#x53F3;&#x8FB9;&#x4E3A;1&#x7684;&#x90A3;&#x4E00;&#x4F4D;&#xFF1A;<code>dat &amp; -dat</code>;</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Test</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</span> </span>{</span><br><span class="line">  <span class="keyword">char</span> a = <span class="number">95</span>;</span><br><span class="line">  <span class="keyword">char</span> index = <span class="number">1</span>;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a:&quot;</span> &lt;&lt; getBits(a) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a &amp; 00000001:&quot;</span> &lt;&lt; getBits( (<span class="keyword">char</span>)( a &amp; index   ) ) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a &amp; 11111110:&quot;</span> &lt;&lt; getBits( (<span class="keyword">char</span>)( a &amp; (~index)) ) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a | 00000001:&quot;</span> &lt;&lt; getBits( (<span class="keyword">char</span>)( a | index   ) ) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a ^ a       :&quot;</span> &lt;&lt; getBits( (<span class="keyword">char</span>)( a ^ a   ) ) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a &amp;-a       :&quot;</span> &lt;&lt; getBits( (<span class="keyword">char</span>)( a &amp;-a   ) ) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">  a = <span class="number">90</span>;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a:&quot;</span> &lt;&lt; getBits(a) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a &amp; 00000001:&quot;</span> &lt;&lt; getBits( (<span class="keyword">char</span>)( a &amp; index   ) ) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a &amp; 11111110:&quot;</span> &lt;&lt; getBits( (<span class="keyword">char</span>)( a &amp; (~index)) ) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a | 00000001:&quot;</span> &lt;&lt; getBits( (<span class="keyword">char</span>)( a | index   ) ) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a ^ a       :&quot;</span> &lt;&lt; getBits( (<span class="keyword">char</span>)( a ^ a   ) ) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a &amp;-a       :&quot;</span> &lt;&lt; getBits( (<span class="keyword">char</span>)( a &amp;-a   ) ) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[PML边界-一阶声波方程有线差分模拟在二维下的实现]]></title>
      <url>http://sheng09.github.io/2016/09/17/fd-2d-PML/</url>
      <content type="html"><![CDATA[<p>&#x672C;&#x6587;&#x4ECB;&#x7ECD;&#x4E86;&#x4E8C;&#x7EF4;&#x4E0B;&#x58F0;&#x6CE2;&#x65B9;&#x7A0B;PML&#x5438;&#x6536;&#x8FB9;&#x754C;&#x7684;&#x6709;&#x9650;&#x5DEE;&#x5206;&#x5B9E;&#x73B0;&#x3002;<br><img src="/2016/09/17/fd-2d-PML/wave_field.jpg" width="600px"><br><a id="more"></a></p>
<!-- toc -->
<ul>
<li><a href="#pml&#x533A;&#x57DF;&#x63A7;&#x5236;&#x65B9;&#x7A0B;">PML&#x533A;&#x57DF;&#x63A7;&#x5236;&#x65B9;&#x7A0B;</a></li>
<li><a href="#dx&#x7684;&#x9009;&#x62E9;">$d(x)$&#x7684;&#x9009;&#x62E9;</a></li>
<li><a href="#&#x4EA4;&#x9519;&#x7F51;&#x683C;">&#x4EA4;&#x9519;&#x7F51;&#x683C;</a></li>
<li><a href="#&#x4E8C;&#x9636;&#x7CBE;&#x5EA6;&#x6709;&#x73B0;&#x5DEE;&#x5206;&#x5B9E;&#x73B0;">&#x4E8C;&#x9636;&#x7CBE;&#x5EA6;&#x6709;&#x73B0;&#x5DEE;&#x5206;&#x5B9E;&#x73B0;</a><ul>
<li><a href="#q_x&#x9012;&#x63A8;">$q_x$&#x9012;&#x63A8;</a></li>
<li><a href="#q_z&#x9012;&#x63A8;">$q_z$&#x9012;&#x63A8;</a></li>
<li><a href="#p_x&#x9012;&#x63A8;">$p_x$&#x9012;&#x63A8;</a></li>
<li><a href="#p_z&#x9012;&#x63A8;">$p_z$&#x9012;&#x63A8;</a></li>
</ul>
</li>
<li><a href="#&#x9012;&#x63A8;&#x6C47;&#x603B;">&#x9012;&#x63A8;&#x6C47;&#x603B;</a></li>
<li><a href="#implementation">Implementation</a></li>
</ul>
<!-- tocstop -->
<h2 id="pml&#x533A;&#x57DF;&#x63A7;&#x5236;&#x65B9;&#x7A0B;"><a href="#PML&#x533A;&#x57DF;&#x63A7;&#x5236;&#x65B9;&#x7A0B;" class="headerlink" title="PML&#x533A;&#x57DF;&#x63A7;&#x5236;&#x65B9;&#x7A0B;"></a>PML&#x533A;&#x57DF;&#x63A7;&#x5236;&#x65B9;&#x7A0B;</h2><p>&#x4E8C;&#x7EF4;&#x4E0B;&#x4E0D;&#x8003;&#x8651;&#x8F93;&#x51FA;&#x6E90;&#xFF0C;&#x4E8C;&#x9636;&#x58F0;&#x6CE2;&#x65B9;&#x7A0B;&#x4E3A;&#xFF1A;</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
    \frac{\partial^2 p}{\partial x^2} +
        \frac{\partial^2 p}{\partial z^2} & = &
        \frac{1}{v^2} \frac{\partial^2 p}{\partial t^2} \\
\end{eqnarray}</script><p>&#x5BF9;&#x5E94;&#x7684;&#x4E00;&#x9636;&#x538B;&#x5F3A;-&#x901F;&#x5EA6;&#x65B9;&#x7A0B;&#x53EF;&#x4EE5;&#x5199;&#x6210;&#xFF1A;</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
    \begin{cases}
        p & = & p_x + p_z\\
        \frac{\partial p_x}{\partial t} & = & -\rho v^2
            \frac{\partial q_x}{\partial x}\\
        \frac{\partial p_z}{\partial_t} & = & -\rho v^2
            \frac{\partial q_z}{\partial z}\\
        \frac{\partial q_x}{\partial t} & = &
            - \frac{1}{\rho} \frac{\partial (p_x+p_z)}{\partial x}\\
        \frac{\partial q_z}{\partial t} & = &
            - \frac{1}{\rho} \frac{\partial (p_x+p_z)}{\partial z}
    \end{cases}
\end{eqnarray}</script><p>&#x9488;&#x5BF9;PML&#x533A;&#x57DF;&#xFF1A;</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
    \begin{cases}
        p & = & p_x + p_z \\
        \frac{\partial p_x}{\partial t} + d(x)p_x & = & -\rho v^2
            \frac{\partial q_x}{\partial x}\\
        \frac{\partial p_z}{\partial_t} + d(z)p_z & = & -\rho v^2
            \frac{\partial q_z}{\partial z}\\
        \frac{\partial q_x}{\partial t} + d(x)q_x & = &
            - \frac{1}{\rho} \frac{\partial (p_x+p_z)}{\partial x}\\
        \frac{\partial q_y}{\partial t} + d(z)q_z & = &
            - \frac{1}{\rho} \frac{\partial (p_x+p_z)}{\partial z}
    \end{cases}
\end{eqnarray}</script><h2 id="dx&#x7684;&#x9009;&#x62E9;"><a href="#d-x-&#x7684;&#x9009;&#x62E9;" class="headerlink" title="$d(x)$&#x7684;&#x9009;&#x62E9;"></a>$d(x)$&#x7684;&#x9009;&#x62E9;</h2><script type="math/tex; mode=display">
d(x) = log(\frac{1}{R}) \frac{3v}{2\delta}(\frac{x}{\delta})^2</script><p>$R$&#x63A8;&#x8350;&#x53D6;0.001&#xFF0C;$\delta$&#x4E3A;PML&#x5C42;&#x539A;[<a href="http://library.seg.org/doi/abs/10.1190/1.1444908" target="_blank" rel="external">Collino and Tsogka 2001</a>]&#x3002;</p>
<h2 id="&#x4EA4;&#x9519;&#x7F51;&#x683C;"><a href="#&#x4EA4;&#x9519;&#x7F51;&#x683C;" class="headerlink" title="&#x4EA4;&#x9519;&#x7F51;&#x683C;"></a>&#x4EA4;&#x9519;&#x7F51;&#x683C;</h2><p>&#x6784;&#x5EFA;&#x4E8C;&#x7EF4;&#x4E0B;&#x7684;&#x4EA4;&#x9519;&#x7F51;&#x683C;&#x3002;<br><img src="/2016/09/17/fd-2d-PML/grid1.jpg" width="400"></p>
<p>&#x5BF9;&#x4E8E;&#x4EA4;&#x9519;&#x8282;&#x70B9;&#xFF0C;$p$,$q_x$,$q_z$&#x9012;&#x63A8;&#x5173;&#x7CFB;&#x5982;&#x4E0B;&#x56FE;&#xFF1A;</p>
<table>
    <tr>
      <td><img src="/2016/09/17/fd-2d-PML/p1.jpg" width="200"></td>
      <td><img src="/2016/09/17/fd-2d-PML/q_x1.jpg" width="200"></td>
      <td><img src="/2016/09/17/fd-2d-PML/q_z1.jpg" width="200"></td>
    </tr>
</table>

<h2 id="&#x4E8C;&#x9636;&#x7CBE;&#x5EA6;&#x6709;&#x73B0;&#x5DEE;&#x5206;&#x5B9E;&#x73B0;"><a href="#&#x4E8C;&#x9636;&#x7CBE;&#x5EA6;&#x6709;&#x73B0;&#x5DEE;&#x5206;&#x5B9E;&#x73B0;" class="headerlink" title="&#x4E8C;&#x9636;&#x7CBE;&#x5EA6;&#x6709;&#x73B0;&#x5DEE;&#x5206;&#x5B9E;&#x73B0;"></a>&#x4E8C;&#x9636;&#x7CBE;&#x5EA6;&#x6709;&#x73B0;&#x5DEE;&#x5206;&#x5B9E;&#x73B0;</h2><script type="math/tex; mode=display">
\begin{eqnarray}
    \begin{cases}
        p & = & p_x + p_z \\

        \frac{\partial p_x}{\partial t} + d(x)p_x & = & -\rho v^2
            \frac{\partial q_x}{\partial x}\\

        \frac{\partial p_z}{\partial_t} + d(z)p_z & = & -\rho v^2
            \frac{\partial q_z}{\partial z}\\

        \frac{\partial q_x}{\partial t} + d(x)q_x & = &
            - \frac{1}{\rho} \frac{\partial (p_x+p_z)}{\partial x}\\

        \frac{\partial q_y}{\partial t} + d(z)q_z & = &
            - \frac{1}{\rho} \frac{\partial (p_x+p_z)}{\partial z}
    \end{cases}
    \Rightarrow
    \begin{cases}
        p & = & p_x + p_z \\
        D_t p_x + d(x)p_x & = & -\rho v^2 D_x q_x \\
        D_t p_z + d(z)p_z & = & -\rho v^2 D_z q_z \\
        D_t q_x + d(x)q_x & = & - \frac{1}{\rho}  D_x (p_x+p_z)\\
        D_t q_z + d(z)q_z & = & - \frac{1}{\rho}  D_z (p_x+p_z)
    \end{cases}
\end{eqnarray}</script><h3 id="q_x&#x9012;&#x63A8;"><a href="#q-x-&#x9012;&#x63A8;" class="headerlink" title="$q_x$&#x9012;&#x63A8;"></a>$q_x$&#x9012;&#x63A8;</h3><p><img src="/2016/09/17/fd-2d-PML/q_x1.jpg" width="200"></p>
<script type="math/tex; mode=display">
\begin{eqnarray}
    D_t q_x(A) + d(A) q_x(A) & = & - \frac{1}{\rho}  D_x p(A)
\end{eqnarray}</script><script type="math/tex; mode=display">
\begin{eqnarray}
    \frac{1}{\Delta t}[q_x(D) - q_x(C)] + \frac{d(A)}{2} [q_x(D) + q_x(C)] & = & - \frac{1}{\rho \Delta x} [p(F) - p(E)]
\end{eqnarray}</script><script type="math/tex; mode=display">
\begin{eqnarray}
\begin{aligned}
    \frac{1}{\Delta t}[q_x(x_{i+1/2},z_{j},t_{m+1} )  - & q_x(x_{i+1/2},z_j,t_{m})] + \\
    \frac{d(x_{i+1/2},z_j,t_{m+1/2})}{2}    [q_x(x_{i+1/2},z_{j},t_{m+1} )  + & q_x(x_{i+1/2},z_j,t_{m})] \\
    = - \frac{1}{\rho \Delta x} [ p(&x_{i+1},z_j,t_{m+1/2}) - p(x_{i},z_j,t_{m+1/2}) ]
\end{aligned}
\end{eqnarray}</script><script type="math/tex; mode=display">
\begin{eqnarray}
    \begin{aligned}
    q_x(x_{i+1/2},z_{j},t_{m+1} )  = & c_{qx1} q_x(x_{i+1/2},z_j,t_{m}) \\ &+ c_{qx2} [ p(x_{i+1},z_j,t_{m+1/2}) - p(x_{i},z_j,t_{m+1/2}) ] \\
    \end{aligned}
\end{eqnarray}</script><script type="math/tex; mode=display">
\begin{eqnarray}
    \begin{aligned}
      \begin{cases}
        c_{qx1}  =  \frac{ 2- \Delta t d(x_{i+1/2},z_j,t_{m+1/2})  }{2 + \Delta t d(x_{i+1/2},z_j,t_{m+1/2}) } \\
        c_{qx2}  =  -\frac{2 \Delta t}{\rho \Delta x [2 + \Delta t d(x_{i+1/2},z_j,t_{m+1/2})]}
      \end{cases}
    \end{aligned}
\end{eqnarray}</script><h3 id="q_z&#x9012;&#x63A8;"><a href="#q-z-&#x9012;&#x63A8;" class="headerlink" title="$q_z$&#x9012;&#x63A8;"></a>$q_z$&#x9012;&#x63A8;</h3><p><img src="/2016/09/17/fd-2d-PML/q_z1.jpg" width="200"></p>
<script type="math/tex; mode=display">
\begin{eqnarray}
    D_t q_z(B) + d(B)q_z(B) & = & - \frac{1}{\rho}  D_z p(B)
\end{eqnarray}</script><script type="math/tex; mode=display">
\begin{eqnarray}
    \frac{1}{\Delta t}[q_z(J) - q_z(H)] + \frac{d(B)}{2}[q_z(J) + q_z(H)] & = & - \frac{1}{\rho \Delta z} [p(G) - p(E)]
\end{eqnarray}</script><script type="math/tex; mode=display">
\begin{eqnarray}
\begin{aligned}
    \frac{1}{\Delta t}[q_z(x_{i},z_{j+1/2},t_{m+1} ) - & q_z(x_{i},z_{j+1/2},t_{m})]\\ +
    \frac{d(x_{i},z_{j+1/2},t_{m+1/2} )}{2}[q_z(x_{i},z_{j+1/2},t_{m+1} ) + & q_z(x_{i},z_{j+1/2},t_{m})] \\
    = - \frac{1}{\rho \Delta z} [ p(&x_i,z_{j+1},t_{m+1/2}) - p(x_{i},z_j,t_{m+1/2}) ]
\end{aligned}
\end{eqnarray}</script><script type="math/tex; mode=display">
\begin{eqnarray}
\begin{aligned}
    q_z(x_{i},z_{j+1/2},t_{m+1} ) = & c_{qz1} q_z(x_{i},z_{j+1/2},t_{m}) \\
    &+c_{qz2} [ p(x_i,z_{j+1},t_{m+1/2}) - p(x_{i},z_j,t_{m+1/2}) ]
\end{aligned}
\end{eqnarray}</script><script type="math/tex; mode=display">
\begin{eqnarray}
    \begin{aligned}
      \begin{cases}
        c_{qz1}  =  \frac{ 2- \Delta t d(x_{i},z_{j+1/2},t_{m+1/2})  }{2 + \Delta t d(x_{i},z_{j+1/2},t_{m+1/2}) } \\
        c_{qz2}  =  -\frac{2 \Delta t}{\rho \Delta z [2 + \Delta t d(x_{i},z_{j+1/2},t_{m+1/2})]}
      \end{cases}
    \end{aligned}
\end{eqnarray}</script><h3 id="p_x&#x9012;&#x63A8;"><a href="#p-x-&#x9012;&#x63A8;" class="headerlink" title="$p_x$&#x9012;&#x63A8;"></a>$p_x$&#x9012;&#x63A8;</h3><p><img src="/2016/09/17/fd-2d-PML/p1.jpg" width="400"></p>
<script type="math/tex; mode=display">
\begin{eqnarray}
    D_t p_x + d(x)p_x & = & -\rho v^2 D_x q_x
\end{eqnarray}</script><script type="math/tex; mode=display">
\begin{eqnarray}
\begin{aligned}
    \frac{1}{\Delta t} [p_x(x_i,z_j,t_{m+1/2}) - & p_x(x_i,z_j,t_{m-1/2})]  \\
    +\frac{d(x_i,z_j,t_m)}{2} [p_x(x_i,z_j,t_{m+1/2}) + & p_x(x_i,z_j,t_{m-1/2})] \\
    = - &\frac{\rho v^2}{\Delta x} [ q_x(x_{i+1/2},z_j,t_m) - q_x(x_{i-1/2,z_j,t_m}) ]\\
\end{aligned}
\end{eqnarray}</script><script type="math/tex; mode=display">
\begin{eqnarray}
\begin{aligned}
    p_x(x_i,z_j,t_{m+1/2}) = & c_{px1} p_x(x_i,z_j,t_{m-1/2})\\
    &  +c_{px2} [ q_x(x_{i+1/2},z_j,t_m) - q_x(x_{i-1/2,z_j,t_m}) ]\\
\end{aligned}
\end{eqnarray}</script><script type="math/tex; mode=display">
\begin{eqnarray}
    \begin{aligned}
      \begin{cases}
        c_{px1}  =  \frac{ 2- \Delta t d(x_i,z_j,t_m)  }
                         {2 + \Delta t d(x_i,z_j,t_m) } \\
        c_{px2}  =  -\frac{2 \rho v^2 \Delta t}{\Delta x [2 + \Delta t d(x_i,z_j,t_m)]}
      \end{cases}
    \end{aligned}
\end{eqnarray}</script><h3 id="p_z&#x9012;&#x63A8;"><a href="#p-z-&#x9012;&#x63A8;" class="headerlink" title="$p_z$&#x9012;&#x63A8;"></a>$p_z$&#x9012;&#x63A8;</h3><p><img src="/2016/09/17/fd-2d-PML/p1.jpg" width="400"></p>
<script type="math/tex; mode=display">
\begin{eqnarray}
    D_t p_z + d(z)p_z & = & -\rho v^2 D_z q_z
\end{eqnarray}</script><script type="math/tex; mode=display">
\begin{eqnarray}
\begin{aligned}
    \frac{1}{\Delta t}      [p_z(x_i,z_j,t_{m+1/2}) - & p_z(x_i,z_j,t_{m-1/2})] \\
    \frac{d(x_i,z_j,t_m)}{2}[p_z(x_i,z_j,t_{m+1/2}) + & p_z(x_i,z_j,t_{m-1/2})] \\
    = -&\frac{\rho v^2}{\Delta x} [ q_z(x_i,z_{j+1/2},t_m) - q_z(x_i,z_{j-1/2},t_m) ]\\
\end{aligned}
\end{eqnarray}</script><script type="math/tex; mode=display">
\begin{eqnarray}
\begin{aligned}
    p_z(x_i,z_j,t_{m+1/2}) = & c_{pz1} p_z(x_i,z_j,t_{m-1/2}) \\
    &  +c_{pz2} [ q_z(x_i,z_{j+1/2},t_m) - q_z(x_i,z_{j-1/2},t_m) ]\\
\end{aligned}
\end{eqnarray}</script><script type="math/tex; mode=display">
\begin{eqnarray}
    \begin{aligned}
      \begin{cases}
        c_{pz1}  =  \frac{ 2- \Delta t d(x_i,z_j,t_m)  }
                         {2 + \Delta t d(x_i,z_j,t_m) } \\
        c_{pz2}  =  -\frac{2 \rho v^2 \Delta t}{\Delta z [2 + \Delta t d(x_i,z_j,t_m)]}
      \end{cases}
    \end{aligned}
\end{eqnarray}</script><h2 id="&#x9012;&#x63A8;&#x6C47;&#x603B;"><a href="#&#x9012;&#x63A8;&#x6C47;&#x603B;" class="headerlink" title="&#x9012;&#x63A8;&#x6C47;&#x603B;"></a>&#x9012;&#x63A8;&#x6C47;&#x603B;</h2><script type="math/tex; mode=display">
\begin{eqnarray}
    \begin{aligned}
        \begin{cases}
            q_x(x_{i+1/2},z_{j},t_{m+1} ) & = & c_{qx1} q_x(x_{i+1/2},z_j,t_{m}) \\
            &&+ c_{qx2} [ p(x_{i+1},z_j,t_{m+1/2}) - p(x_{i},z_j,t_{m+1/2}) ] \\

            q_z(x_{i},z_{j+1/2},t_{m+1} )& = & c_{qz1} q_z(x_{i},z_{j+1/2},t_{m}) \\
            &&+c_{qz2} [ p(x_i,z_{j+1},t_{m+1/2}) - p(x_{i},z_j,t_{m+1/2}) ] \\

            p_x(x_i,z_j,t_{m+1/2}) & = & c_{px1} p_x(x_i,z_j,t_{m-1/2})\\
            &&+c_{px2} [ q_x(x_{i+1/2},z_j,t_m) - q_x(x_{i-1/2,z_j,t_m}) ]\\

            p_z(x_i,z_j,t_{m+1/2}) & = & c_{pz1} p_z(x_i,z_j,t_{m-1/2}) \\
            &&+c_{pz2} [ q_z(x_i,z_{j+1/2},t_m) - q_z(x_i,z_{j-1/2},t_m) ]\\
        \end{cases}
    \end{aligned}
\end{eqnarray}</script><script type="math/tex; mode=display">
\begin{eqnarray}
    \begin{aligned}
      \begin{cases}
        c_{qx1}  &= &  \frac{ 2- \Delta t d(x_{i+1/2},z_j,t_{m+1/2})  }{2 + \Delta t d(x_{i+1/2},z_j,t_{m+1/2}) } \\
        c_{qx2}  &= &  -\frac{2 \Delta t}{\rho \Delta x [2 + \Delta t d(x_{i+1/2},z_j,t_{m+1/2})]}\\
        c_{qz1}  &= &  \frac{ 2- \Delta t d(x_{i},z_{j+1/2},t_{m+1/2})  }{2 + \Delta t d(x_{i},z_{j+1/2},t_{m+1/2}) } \\
        c_{qz2}  &= &  -\frac{2 \Delta t}{\rho \Delta z [2 + \Delta t d(x_{i},z_{j+1/2},t_{m+1/2})]}\\
        c_{px1}  &= &  \frac{ 2- \Delta t d(x_i,z_j,t_m)  } {2 + \Delta t d(x_i,z_j,t_m) } \\
        c_{px2}  &= &  -\frac{2 \rho v^2 \Delta t}{\Delta x [2 + \Delta t d(x_i,z_j,t_m)]}\\
        c_{pz1}  &= &  \frac{ 2- \Delta t d(x_i,z_j,t_m)  } {2 + \Delta t d(x_i,z_j,t_m) } \\
        c_{pz2}  &= &  -\frac{2 \rho v^2 \Delta t}{\Delta z [2 + \Delta t d(x_i,z_j,t_m)]}\\
      \end{cases}
    \end{aligned}
\end{eqnarray}</script><p>&#x6545;&#x800C;&#xFF0C;&#x6CE2;&#x573A;&#x9012;&#x63A8;&#x5173;&#x7CFB;&#x4E3A;&#xFF1A;</p>
<script type="math/tex; mode=display">
\begin{equation}
    \begin{cases}
        q_x(t=0)\\
        q_z(t=0)\\
        p(t=\Delta /2)
    \end{cases}
    \Rightarrow
    \begin{cases}
        \color{red}{q_x(t=\Delta t)}\\
        \color{red}{q_z(t=\Delta t)}\\
    \end{cases}
    \\
    \Rightarrow
    \begin{cases}
        \color{red}{q_x(t=\Delta t)}\\
        \color{red}{q_z(t=\Delta t)}\\
        p(t=\Delta /2)
    \end{cases}
    \Rightarrow
        \color{blue}{p(t=3\Delta /2)}
    \\
    \Rightarrow
    \begin{cases}
        \color{red}{q_x(t=\Delta t)}\\
        \color{red}{q_z(t=\Delta t)}\\
        \color{blue}{p(t=3\Delta /2)}
    \end{cases}
    \Rightarrow
    \begin{cases}
        \color{green}{q_x(t=2\Delta t)}\\
        \color{green}{q_z(t=2\Delta t)}\\
    \end{cases}
    \\
    \Rightarrow
    \begin{cases}
        \color{green}{q_x(t=2\Delta t)}\\
        \color{green}{q_z(t=2\Delta t)}\\
        \color{blue}{p(t=3\Delta /2)}
    \end{cases}
    \Rightarrow
    ............
    \\ \\
    ... ...
\end{equation}</script><h2 id="implementation"><a href="#Implementation" class="headerlink" title="Implementation"></a>Implementation</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">%Matlab</span><br><span class="line">    close all;clear;clc;</span><br><span class="line">    %Parameters</span><br><span class="line">    n_pml = 10;</span><br><span class="line">    nx = 320; nz = 320; dx = 5.0; dz = 5.0;</span><br><span class="line">    x  = (-n_pml:nx-1-n_pml) *dx; %(1:11) and (310:320) are PML zone</span><br><span class="line">    z  = (-n_pml:nx-1-n_pml) *dz;</span><br><span class="line">    dt = 1.0e-3; nt = 2000; t  = (0:nt-1)*dt;</span><br><span class="line">    v = zeros(nx,nz) + 800.0; rho = 1000.0;</span><br><span class="line">    R = 0.001; delta = n_pml * dx; d_const = (3.0/2.0/delta)*log(1.0/R) /(delta*    delta);</span><br><span class="line"></span><br><span class="line">    %d(x) and d(z)</span><br><span class="line">    d_pxLeft  = ( (-n_pml:0)*dx ).^2 * d_const;</span><br><span class="line">    d_pxRight = ( (0:n_pml)*dx  ).^2 * d_const;</span><br><span class="line">    d_qxLeft  = ( (-n_pml:-1)*dx +dx/2 ).^2 * d_const;</span><br><span class="line">    d_qxRight = ( (1:n_pml)*dx   -dx/2 ).^2 * d_const;</span><br><span class="line">    d_px      = [d_pxLeft zeros(1,nx-2*n_pml-2) d_pxRight];</span><br><span class="line">    d_qx      = [d_qxLeft zeros(1,nx-2*n_pml-1) d_qxRight];</span><br><span class="line">    d_pzLeft  = ( (-n_pml:0)*dz ) .^2 * d_const;</span><br><span class="line">    d_pzRight = ( (0:n_pml)*dz  ) .^2 * d_const;</span><br><span class="line">    d_qzLeft  = ( (-n_pml:-1)*dz +dz/2 ) .^2 *  d_const;</span><br><span class="line">    d_qzRight = ( (1:n_pml)*dz   -dz/2 ) .^2 *  d_const;</span><br><span class="line">    d_pz      = [d_pzLeft zeros(1,nx-2*n_pml-2) d_pzRight];</span><br><span class="line">    d_qz      = [d_qzLeft zeros(1,nx-2*n_pml-1) d_qzRight];</span><br><span class="line">    p   = zeros(nx,nz); p_x = zeros(nx,nz); p_z = zeros(nx,nz);</span><br><span class="line">    q_x = zeros(nx-1,nz); q_z = zeros(nx,nz-1);</span><br><span class="line"></span><br><span class="line">    $Source</span><br><span class="line">    src = [ 2.0*mexihat(-5,5,200) zeros(1,nt)];</span><br><span class="line">    ix_src = 161; iz_src = 161;</span><br><span class="line"></span><br><span class="line">    %Main loop</span><br><span class="line">    figure</span><br><span class="line">    for it = 1:nt</span><br><span class="line">        %</span><br><span class="line">        %     1   2   3   4   5</span><br><span class="line">        %   --q---q---q---q---q--...</span><br><span class="line">        %   p---p---p---p---p---p...</span><br><span class="line">        %   1   2   3   4   5   6</span><br><span class="line">        %</span><br><span class="line"></span><br><span class="line">        p_x(ix_src, iz_src) = p_x(ix_src,iz_src) + src(it)/2.0;</span><br><span class="line">        p_z(ix_src, iz_src) = p_z(ix_src,iz_src) + src(it)/2.0;</span><br><span class="line">        p(  ix_src, iz_src) = p(  ix_src,iz_src) + src(it)/2.0;</span><br><span class="line">        %q_x</span><br><span class="line">        for ix = 1:nx-1</span><br><span class="line">            for iz = 1:nz</span><br><span class="line">                deno  = (2.0 + dt * d_qx(ix)*v(ix,iz));</span><br><span class="line">                c_qx1 = (2.0 - dt * d_qx(ix)*v(ix,iz) ) / deno;</span><br><span class="line">                c_qx2 = -2.0*dt / rho / dx / deno;</span><br><span class="line">                q_x(ix,iz) = c_qx1 * q_x(ix,iz) + c_qx2 *( p(ix+1,iz) - p(ix,iz) );</span><br><span class="line">            end</span><br><span class="line">        end</span><br><span class="line">        %q_z</span><br><span class="line">        for iz = 1:nz-1</span><br><span class="line">            for ix = 1:nx</span><br><span class="line">                deno  = (2.0 + dt * d_qz(iz)*v(ix,iz) );</span><br><span class="line">                c_qz1 = (2.0 - dt * d_qz(iz)*v(ix,iz) )/ deno;</span><br><span class="line">                c_qz2 = -2.0*dt/rho/ dz / deno;</span><br><span class="line">                q_z(ix,iz) = c_qz1 * q_z(ix,iz) + c_qz2 *( p(ix,iz+1) - p(ix,iz) );</span><br><span class="line">            end</span><br><span class="line">        end</span><br><span class="line"></span><br><span class="line">        %p_x</span><br><span class="line">        for ix = 2:nx-1</span><br><span class="line">            for iz = 2:nz-1</span><br><span class="line">                deno  =  (2.0 + dt * d_px(ix)*v(ix,iz) );</span><br><span class="line">                c_px1 =  (2.0 - dt * d_px(ix)*v(ix,iz) ) / deno;</span><br><span class="line">                c_px2 = -2.0*rho*v2(ix,iz)*dt/dx / deno;</span><br><span class="line">                deno  =  (2.0 + dt * d_pz(iz)*v(ix,iz) );</span><br><span class="line">                c_pz1 =  (2.0 - dt * d_pz(iz)*v(ix,iz) ) / deno;</span><br><span class="line">                c_pz2 = -2.0*rho*v2(ix,iz)*dt/dz /deno;</span><br><span class="line">                p_x(ix,iz) = c_px1 * p_x(ix,iz) + c_px2 * ( q_x(ix,iz) - q_x(ix-    1,iz) );</span><br><span class="line">                p_z(ix,iz) = c_pz1 * p_z(ix,iz) + c_pz2 * ( q_z(ix,iz) - q_z(ix,iz- 1) );</span><br><span class="line">                p(ix,iz)   = p_x(ix,iz) + p_z(ix,iz);</span><br><span class="line">            end</span><br><span class="line">        end</span><br><span class="line"></span><br><span class="line">        pmax = max(max( abs(p) ));</span><br><span class="line">        imagesc(x, z, p/pmax );</span><br><span class="line">        colormap(&apos;gray&apos;);</span><br><span class="line">        axis square;</span><br><span class="line">        pause(0.001);</span><br><span class="line">    end</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[一阶声波方程有线差分模拟在二维下的实现]]></title>
      <url>http://sheng09.github.io/2016/09/15/fd-2d/</url>
      <content type="html"><![CDATA[<p>&#x672C;&#x6587;&#x4ECB;&#x7ECD;&#x4E86;&#x4E00;&#x9636;&#x58F0;&#x6CE2;&#x65B9;&#x7A0B;&#x5728;&#x4E8C;&#x7EF4;&#x4E0B;&#x7684;&#x6709;&#x9650;&#x5DEE;&#x5206;&#x6A21;&#x62DF;&#x3002;<br><img src="/2016/09/15/fd-2d/wave_field.jpg" width="600px"><br><a id="more"></a></p>
<!-- toc -->
<ul>
<li><a href="#&#x63A7;&#x5236;&#x65B9;&#x7A0B;">&#x63A7;&#x5236;&#x65B9;&#x7A0B;</a></li>
<li><a href="#&#x4EA4;&#x9519;&#x7F51;&#x683C;">&#x4EA4;&#x9519;&#x7F51;&#x683C;</a></li>
<li><a href="#&#x4E8C;&#x9636;&#x7CBE;&#x5EA6;&#x6709;&#x73B0;&#x5DEE;&#x5206;&#x5B9E;&#x73B0;">&#x4E8C;&#x9636;&#x7CBE;&#x5EA6;&#x6709;&#x73B0;&#x5DEE;&#x5206;&#x5B9E;&#x73B0;</a><ul>
<li><a href="#q_x&#x9012;&#x63A8;">$q_x$&#x9012;&#x63A8;</a></li>
<li><a href="#q_z&#x9012;&#x63A8;">$q_z$&#x9012;&#x63A8;</a></li>
<li><a href="#p_x&#x9012;&#x63A8;">$p_x$&#x9012;&#x63A8;</a></li>
<li><a href="#p_z&#x9012;&#x63A8;">$p_z$&#x9012;&#x63A8;</a></li>
</ul>
</li>
<li><a href="#&#x9012;&#x63A8;&#x6C47;&#x603B;">&#x9012;&#x63A8;&#x6C47;&#x603B;</a></li>
<li><a href="#implementation">Implementation</a></li>
</ul>
<!-- tocstop -->
<h2 id="&#x63A7;&#x5236;&#x65B9;&#x7A0B;"><a href="#&#x63A7;&#x5236;&#x65B9;&#x7A0B;" class="headerlink" title="&#x63A7;&#x5236;&#x65B9;&#x7A0B;"></a>&#x63A7;&#x5236;&#x65B9;&#x7A0B;</h2><p>&#x4E8C;&#x7EF4;&#x4E0B;&#x4E0D;&#x8003;&#x8651;&#x8F93;&#x51FA;&#x6E90;&#xFF0C;&#x4E8C;&#x9636;&#x58F0;&#x6CE2;&#x65B9;&#x7A0B;&#x4E3A;&#xFF1A;</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
    \frac{\partial^2 p}{\partial x^2} +
        \frac{\partial^2 p}{\partial z^2} & = &
        \frac{1}{v^2} \frac{\partial^2 p}{\partial t^2} \\
\end{eqnarray}</script><p>&#x5BF9;&#x5E94;&#x7684;&#x4E00;&#x9636;&#x538B;&#x5F3A;-&#x901F;&#x5EA6;&#x65B9;&#x7A0B;&#x53EF;&#x4EE5;&#x5199;&#x6210;&#xFF1A;</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
    \begin{cases}
        \frac{\partial p}{\partial t} & = & -\rho v^2(
            \frac{\partial q_x}{\partial x} +
            \frac{\partial q_z}{\partial z}
            )\\
        \frac{\partial q_x}{\partial t} & = &
            - \frac{1}{\rho} \frac{\partial p}{\partial x}\\
        \frac{\partial q_z}{\partial t} & = &
            - \frac{1}{\rho} \frac{\partial p}{\partial z}
    \end{cases}
\end{eqnarray}</script><p>&#x5C06;&#x538B;&#x5F3A;$p$&#x5199;&#x4F5C;$p_x+p_y$&#xFF0C;&#x53EF;&#x4EE5;&#x83B7;&#x5F97;&#xFF1A;</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
    \begin{cases}
        p & = & p_x + p_z\\
        \frac{\partial p_x}{\partial t} & = & -\rho v^2
            \frac{\partial q_x}{\partial x}\\
        \frac{\partial p_z}{\partial_t} & = & -\rho v^2
            \frac{\partial q_z}{\partial z}\\
        \frac{\partial q_x}{\partial t} & = &
            - \frac{1}{\rho} \frac{\partial (p_x+p_z)}{\partial x}\\
        \frac{\partial q_z}{\partial t} & = &
            - \frac{1}{\rho} \frac{\partial (p_x+p_z)}{\partial z}
    \end{cases}
\end{eqnarray}</script><h2 id="&#x4EA4;&#x9519;&#x7F51;&#x683C;"><a href="#&#x4EA4;&#x9519;&#x7F51;&#x683C;" class="headerlink" title="&#x4EA4;&#x9519;&#x7F51;&#x683C;"></a>&#x4EA4;&#x9519;&#x7F51;&#x683C;</h2><p>&#x6784;&#x5EFA;&#x4E8C;&#x7EF4;&#x4E0B;&#x7684;&#x4EA4;&#x9519;&#x7F51;&#x683C;&#x3002;<br><img src="/2016/09/15/fd-2d/grid1.jpg" width="400"></p>
<p>&#x5BF9;&#x4E8E;&#x4EA4;&#x9519;&#x8282;&#x70B9;&#xFF0C;$p$,$q_x$,$q_z$&#x9012;&#x63A8;&#x5173;&#x7CFB;&#x5982;&#x4E0B;&#x56FE;&#xFF1A;</p>
<table>
    <tr>
      <td><img src="/2016/09/15/fd-2d/p1.jpg" width="200"></td>
      <td><img src="/2016/09/15/fd-2d/q_x1.jpg" width="200"></td>
      <td><img src="/2016/09/15/fd-2d/q_z1.jpg" width="200"></td>
    </tr>
</table>

<h2 id="&#x4E8C;&#x9636;&#x7CBE;&#x5EA6;&#x6709;&#x73B0;&#x5DEE;&#x5206;&#x5B9E;&#x73B0;"><a href="#&#x4E8C;&#x9636;&#x7CBE;&#x5EA6;&#x6709;&#x73B0;&#x5DEE;&#x5206;&#x5B9E;&#x73B0;" class="headerlink" title="&#x4E8C;&#x9636;&#x7CBE;&#x5EA6;&#x6709;&#x73B0;&#x5DEE;&#x5206;&#x5B9E;&#x73B0;"></a>&#x4E8C;&#x9636;&#x7CBE;&#x5EA6;&#x6709;&#x73B0;&#x5DEE;&#x5206;&#x5B9E;&#x73B0;</h2><script type="math/tex; mode=display">
\begin{eqnarray}
    \begin{cases}
        p & = & p_x + p_z\\
        \frac{\partial p_x}{\partial t} & = & -\rho v^2
            \frac{\partial q_x}{\partial x}\\
        \frac{\partial p_z}{\partial_t} & = & -\rho v^2
            \frac{\partial q_z}{\partial z}\\
        \frac{\partial q_x}{\partial t} & = &
            - \frac{1}{\rho} \frac{\partial (p_x+p_z)}{\partial x}\\
        \frac{\partial q_z}{\partial t} & = &
            - \frac{1}{\rho} \frac{\partial (p_x+p_z)}{\partial z}
    \end{cases}
    \Rightarrow
    \begin{cases}
        p & = & p_x + p_z \\
        D_t p_x & = & -\rho v^2 D_x q_x \\
        D_t p_z & = & -\rho v^2 D_z q_z \\
        D_t q_x & = & - \frac{1}{\rho}  D_x (p_x+p_z)\\
        D_t q_z & = & - \frac{1}{\rho}  D_z (p_x+p_z)
    \end{cases}
\end{eqnarray}</script><h3 id="q_x&#x9012;&#x63A8;"><a href="#q-x-&#x9012;&#x63A8;" class="headerlink" title="$q_x$&#x9012;&#x63A8;"></a>$q_x$&#x9012;&#x63A8;</h3><p><img src="/2016/09/15/fd-2d/q_x1.jpg" width="200"></p>
<script type="math/tex; mode=display">
\begin{eqnarray}
    D_t q_x(A) & = & - \frac{1}{\rho}  D_x p(A)
\end{eqnarray}</script><script type="math/tex; mode=display">
\begin{eqnarray}
    \frac{1}{\Delta t}[q_x(D) - q_x(C)] & = & - \frac{1}{\rho \Delta x} [p(F) - p(E)]
\end{eqnarray}</script><script type="math/tex; mode=display">
\begin{eqnarray}
\begin{aligned}
    \frac{1}{\Delta t}[q_x(x_{i+1/2},z_{j},t_{m+1} )  - & q_x(x_{i+1/2},z_j,t_{m})] \\& =
    - \frac{1}{\rho \Delta x} [ p(x_{i+1},z_j,t_{m+1/2}) - p(x_{i},z_j,t_{m+1/2}) ]
\end{aligned}
\end{eqnarray}</script><script type="math/tex; mode=display">
\begin{eqnarray}
    \begin{aligned}
        q_x(x_{i+1/2},z_{j},t_{m+1} ) = & q_x(x_{i+1/2},z_j,t_{m}) \\
        &- \frac{\Delta t}{\rho \Delta x} [ p(x_{i+1},z_j,t_{m+1/2}) - p(x_{i},z_j,t_{m+1/2}) ]
    \end{aligned}
\end{eqnarray}</script><h3 id="q_z&#x9012;&#x63A8;"><a href="#q-z-&#x9012;&#x63A8;" class="headerlink" title="$q_z$&#x9012;&#x63A8;"></a>$q_z$&#x9012;&#x63A8;</h3><p><img src="/2016/09/15/fd-2d/q_z1.jpg" width="200"></p>
<script type="math/tex; mode=display">
\begin{eqnarray}
    D_t q_z(B) & = & - \frac{1}{\rho}  D_z p(B)
\end{eqnarray}</script><script type="math/tex; mode=display">
\begin{eqnarray}
    \frac{1}{\Delta t}[q_z(J) - q_z(H)] & = & - \frac{1}{\rho \Delta z} [p(G) - p(E)]
\end{eqnarray}</script><script type="math/tex; mode=display">
\begin{eqnarray}
\begin{aligned}
    \frac{1}{\Delta t}[q_z(x_{i},z_{j+1/2},t_{m+1} ) - & q_z(x_{i},z_{j+1/2},t_{m})] \\& =
    - \frac{1}{\rho \Delta z} [ p(x_i,z_{j+1},t_{m+1/2}) - p(x_{i},z_j,t_{m+1/2}) ]
\end{aligned}
\end{eqnarray}</script><script type="math/tex; mode=display">
\begin{eqnarray}
\begin{aligned}
    q_z(x_{i},z_{j+1/2},t_{m+1} ) = & q_z(x_{i},z_{j+1/2},t_{m}) \\
    &- \frac{\Delta t}{\rho \Delta z} [ p(x_i,z_{j+1},t_{m+1/2}) - p(x_{i},z_j,t_{m+1/2}) ]
\end{aligned}
\end{eqnarray}</script><h3 id="p_x&#x9012;&#x63A8;"><a href="#p-x-&#x9012;&#x63A8;" class="headerlink" title="$p_x$&#x9012;&#x63A8;"></a>$p_x$&#x9012;&#x63A8;</h3><p><img src="/2016/09/15/fd-2d/p1.jpg" width="400"></p>
<script type="math/tex; mode=display">
\begin{eqnarray}
    D_t p_x & = & -\rho v^2 D_x q_x
\end{eqnarray}</script><script type="math/tex; mode=display">
\begin{eqnarray}
\begin{aligned}
    \frac{1}{\Delta t} [p_x(x_i,z_j,t_{m+1/2}) - & p_x(x_i,z_j,t_{m-1/2})] \\
    & = -\frac{\rho v^2}{\Delta x} [ q_x(x_{i+1/2},z_j,t_m) - q_x(x_{i-1/2,z_j,t_m}) ]\\
\end{aligned}
\end{eqnarray}</script><script type="math/tex; mode=display">
\begin{eqnarray}
\begin{aligned}
    p_x(x_i,z_j,t_{m+1/2}) = & p_x(x_i,z_j,t_{m-1/2})\\
    &  -\frac{\rho v^2\Delta t}{\Delta x} [ q_x(x_{i+1/2},z_j,t_m) - q_x(x_{i-1/2,z_j,t_m}) ]\\
\end{aligned}
\end{eqnarray}</script><h3 id="p_z&#x9012;&#x63A8;"><a href="#p-z-&#x9012;&#x63A8;" class="headerlink" title="$p_z$&#x9012;&#x63A8;"></a>$p_z$&#x9012;&#x63A8;</h3><p><img src="/2016/09/15/fd-2d/p1.jpg" width="400"></p>
<script type="math/tex; mode=display">
\begin{eqnarray}
    D_t p_z & = & -\rho v^2 D_z q_z
\end{eqnarray}</script><script type="math/tex; mode=display">
\begin{eqnarray}
\begin{aligned}
    \frac{1}{\Delta t} [p_z(x_i,z_j,t_{m+1/2}) - & p_z(x_i,z_j,t_{m-1/2})] \\
    & = -\frac{\rho v^2}{\Delta z} [ q_z(x_i,z_{j+1/2},t_m) - q_z(x_i,z_{j-1/2},t_m) ]\\
\end{aligned}
\end{eqnarray}</script><script type="math/tex; mode=display">
\begin{eqnarray}
\begin{aligned}
    p_z(x_i,z_j,t_{m+1/2}) = & p_z(x_i,z_j,t_{m-1/2}) \\
    &  -\frac{\rho v^2\Delta t}{\Delta z} [ q_z(x_i,z_{j+1/2},t_m) - q_z(x_i,z_{j-1/2},t_m) ]\\
\end{aligned}
\end{eqnarray}</script><h2 id="&#x9012;&#x63A8;&#x6C47;&#x603B;"><a href="#&#x9012;&#x63A8;&#x6C47;&#x603B;" class="headerlink" title="&#x9012;&#x63A8;&#x6C47;&#x603B;"></a>&#x9012;&#x63A8;&#x6C47;&#x603B;</h2><script type="math/tex; mode=display">
\begin{eqnarray}
    \begin{aligned}
        \begin{cases}
            q_x(x_{i+1/2},z_{j},t_{m+1} ) = & q_x(x_{i+1/2},z_j,t_{m}) \\
                &- \frac{\Delta t}{\rho \Delta x} [ p(x_{i+1},z_j,t_{m+1/2}) - p(x_{i},z_j,t_{m+1/2}) ]
                \\
            q_z(x_{i},z_{j+1/2},t_{m+1} ) = & q_z(x_{i},z_{j+1/2},t_{m}) \\
                &- \frac{\Delta t}{\rho \Delta z} [ p(x_i,z_{j+1},t_{m+1/2}) - p(x_{i},z_j,t_{m+1/2}) ]
                \\
            p_x(x_i,z_j,t_{m+1/2}) = & p_x(x_i,z_j,t_{m-1/2})\\
                &-\frac{\rho v^2\Delta t}{\Delta x} [ q_x(x_{i+1/2},z_j,t_m) - q_x(x_{i-1/2,z_j,t_m}) ]
                \\
            p_z(x_i,z_j,t_{m+1/2}) = & p_z(x_i,z_j,t_{m-1/2}) \\
                &-\frac{\rho v^2\Delta t}{\Delta z} [ q_z(x_i,z_{j+1/2},t_m) - q_z(x_i,z_{j-1/2},t_m) ]
        \end{cases}
    \end{aligned}
\end{eqnarray}</script><p>&#x6545;&#x800C;&#xFF0C;&#x6CE2;&#x573A;&#x9012;&#x63A8;&#x5173;&#x7CFB;&#x4E3A;&#xFF1A;</p>
<script type="math/tex; mode=display">
\begin{equation}
    \begin{cases}
        q_x(t=0)\\
        q_z(t=0)\\
        p(t=\Delta /2)
    \end{cases}
    \Rightarrow
    \begin{cases}
        \color{red}{q_x(t=\Delta t)}\\
        \color{red}{q_z(t=\Delta t)}\\
    \end{cases}
    \\
    \Rightarrow
    \begin{cases}
        \color{red}{q_x(t=\Delta t)}\\
        \color{red}{q_z(t=\Delta t)}\\
        p(t=\Delta /2)
    \end{cases}
    \Rightarrow
        \color{blue}{p(t=3\Delta /2)}
    \\
    \Rightarrow
    \begin{cases}
        \color{red}{q_x(t=\Delta t)}\\
        \color{red}{q_z(t=\Delta t)}\\
        \color{blue}{p(t=3\Delta /2)}
    \end{cases}
    \Rightarrow
    \begin{cases}
        \color{green}{q_x(t=2\Delta t)}\\
        \color{green}{q_z(t=2\Delta t)}\\
    \end{cases}
    \\
    \Rightarrow
    \begin{cases}
        \color{green}{q_x(t=2\Delta t)}\\
        \color{green}{q_z(t=2\Delta t)}\\
        \color{blue}{p(t=3\Delta /2)}
    \end{cases}
    \Rightarrow
    ............
    \\ \\
    ... ...
\end{equation}</script><h2 id="implementation"><a href="#Implementation" class="headerlink" title="Implementation"></a>Implementation</h2><p><img src="/2016/09/15/fd-2d/wave_field.jpg" alt=""></p>
<figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%Matlab</span></span><br><span class="line">    close all; clear; clc;</span><br><span class="line">    <span class="comment">%Parameters</span></span><br><span class="line">    nx = <span class="number">300</span>; nz = <span class="number">300</span>; dx = <span class="number">5.0</span>; dz = <span class="number">5.0</span>;</span><br><span class="line">    x  = (<span class="number">0</span>:nx<span class="number">-1</span>) *dx; z  = (<span class="number">0</span>:nz<span class="number">-1</span>) *dz;</span><br><span class="line">    dt = <span class="number">1.0e-3</span>; nt = <span class="number">2000</span>; t  = (<span class="number">0</span>:nt<span class="number">-1</span>)*dt;</span><br><span class="line">    v = <span class="built_in">zeros</span>(<span class="number">300</span>,<span class="number">300</span>)+<span class="number">800.0</span>;v(<span class="number">101</span>:<span class="number">200</span>,:) = <span class="number">1500.0</span>;v(<span class="number">201</span>:<span class="number">300</span>,:) = <span class="number">2000.0</span>;</span><br><span class="line">    v2 =  v.^<span class="number">2</span>; rho = <span class="number">1000.0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">%Coefficients</span></span><br><span class="line">    a_qx= dt/dx/rho; a_qz= dt/dz/rho;</span><br><span class="line">    a_px= dt*rho/dx; a_pz= dt*rho/dz;</span><br><span class="line">    <span class="comment">%Initial condition</span></span><br><span class="line">    p   = <span class="built_in">zeros</span>(nx,nz);</span><br><span class="line">    p_x = <span class="built_in">zeros</span>(nx,  nz); p_z = <span class="built_in">zeros</span>(nx,  nz);</span><br><span class="line">    q_x = <span class="built_in">zeros</span>(nx<span class="number">-1</span>,nz); q_z = <span class="built_in">zeros</span>(nx,nz<span class="number">-1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">%Receiver</span></span><br><span class="line">    rec = <span class="built_in">zeros</span>(nt,nx); trace=<span class="built_in">zeros</span>(nt,<span class="number">9</span>);</span><br><span class="line">    trace(:,<span class="number">1</span>) = <span class="number">-4</span>; trace(:,<span class="number">2</span>) = <span class="number">-3</span>; trace(:,<span class="number">3</span>) = <span class="number">-2</span>; trace(:,<span class="number">4</span>) = <span class="number">-1</span>;</span><br><span class="line">    trace(:,<span class="number">5</span>) =  <span class="number">0</span>; trace(:,<span class="number">6</span>) =  <span class="number">1</span>; trace(:,<span class="number">7</span>) =  <span class="number">2</span>; trace(:,<span class="number">8</span>) =  <span class="number">3</span>;</span><br><span class="line">    trace(:,<span class="number">9</span>) =  <span class="number">4</span>; trace_fill = trace;</span><br><span class="line">    <span class="comment">%Source</span></span><br><span class="line">    src = [ <span class="number">2.0</span>*mexihat(<span class="number">-5</span>,<span class="number">5</span>,<span class="number">200</span>) zeros(<span class="number">1</span>,nt)]; ix_src = <span class="number">1</span>; iz_src = <span class="number">150</span>;</span><br><span class="line"></span><br><span class="line">    figure</span><br><span class="line">    <span class="comment">%Main loop</span></span><br><span class="line">    <span class="keyword">for</span> it = <span class="number">1</span>:nt</span><br><span class="line"></span><br><span class="line">        <span class="comment">%     1   2   3   4   5</span></span><br><span class="line">        <span class="comment">%   --q---q---q---q---q--...</span></span><br><span class="line">        <span class="comment">%   p---p---p---p---p---p...</span></span><br><span class="line">        <span class="comment">%   1   2   3   4   5   6</span></span><br><span class="line">        p_x(ix_src, iz_src) = p_x(ix_src,iz_src) + src(it)/<span class="number">2.0</span>;</span><br><span class="line">        p_z(ix_src, iz_src) = p_z(ix_src,iz_src) + src(it)/<span class="number">2.0</span>;</span><br><span class="line">        p(  ix_src, iz_src) = p(  ix_src,iz_src) + src(it)/<span class="number">2.0</span>;</span><br><span class="line">        <span class="keyword">for</span> ix = <span class="number">1</span>:nx<span class="number">-1</span> <span class="comment">%q_x</span></span><br><span class="line">            <span class="keyword">for</span> iz = <span class="number">1</span>:nz</span><br><span class="line">                q_x(ix,iz) = q_x(ix,iz) - a_qx *( p(ix+<span class="number">1</span>,iz) - p(ix,iz) );</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">for</span> iz = <span class="number">1</span>:nz<span class="number">-1</span> <span class="comment">%q_z</span></span><br><span class="line">            <span class="keyword">for</span> ix = <span class="number">1</span>:nx</span><br><span class="line">                q_z(ix,iz) = q_z(ix,iz) - a_qz *( p(ix,iz+<span class="number">1</span>) - p(ix,iz) );</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">for</span> ix = <span class="number">2</span>:nx<span class="number">-1</span> <span class="comment">%p_x</span></span><br><span class="line">            <span class="keyword">for</span> iz = <span class="number">2</span>:nz<span class="number">-1</span></span><br><span class="line">                p_x(ix,iz) = p_x(ix,iz) - a_px *v2(ix,iz)*( q_x(ix,iz) - q_x(ix-    <span class="number">1</span>,iz) );</span><br><span class="line">                p_z(ix,iz) = p_z(ix,iz) - a_pz *v2(ix,iz)*( q_z(ix,iz) - q_z(ix,iz- <span class="number">1</span>) );</span><br><span class="line">                p(ix,iz)   = p_x(ix,iz) + p_z(ix,iz);</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="comment">%Free boundary at z = 0</span></span><br><span class="line">        p(<span class="number">1</span>,:)    = p(<span class="number">2</span>,:); p_x(<span class="number">1</span>,:)  = p_x(<span class="number">2</span>,:); p_z(<span class="number">1</span>,:)  = p_z(<span class="number">2</span>,:);</span><br><span class="line"></span><br><span class="line">        <span class="comment">%Plot</span></span><br><span class="line">        rec(it,:)   = p(<span class="number">1</span>,:);</span><br><span class="line">        p_trace = <span class="number">20.0</span>* [p(<span class="number">1</span>,<span class="number">30</span>) p(<span class="number">1</span>,<span class="number">60</span>) p(<span class="number">1</span>,<span class="number">90</span>) p(<span class="number">1</span>,<span class="number">120</span>) p(<span class="number">1</span>,<span class="number">149</span>) p(<span class="number">1</span>,<span class="number">180</span>) p(<span class="number">1</span>,<span class="number">210</span> ) p(<span class="number">1</span>,<span class="number">240</span>) p(<span class="number">1</span>,<span class="number">270</span>)];</span><br><span class="line">        trace(it,:) = trace(it,:) + p_trace;</span><br><span class="line">        trace_fill(it,:) = trace_fill(it,:) + <span class="number">0.5</span>*(p_trace + <span class="built_in">abs</span>(p_trace) );</span><br><span class="line">        pmax = max(max( <span class="built_in">abs</span>(p) ));</span><br><span class="line"></span><br><span class="line">        subplot(<span class="number">221</span>),imagesc(x, z, p/pmax );</span><br><span class="line">        colormap(<span class="string">&apos;gray&apos;</span>);</span><br><span class="line">        axis square;</span><br><span class="line"></span><br><span class="line">        w_max = max(max( <span class="built_in">abs</span>(rec) ));</span><br><span class="line">        subplot(<span class="number">122</span>),imagesc(x,t,rec./w_max);</span><br><span class="line">        colormap(<span class="string">&apos;gray&apos;</span>);</span><br><span class="line"></span><br><span class="line">        subplot(<span class="number">223</span>),fill(t, trace_fill ,<span class="string">&apos;r&apos;</span>);</span><br><span class="line">        hold on;</span><br><span class="line">        subplot(<span class="number">223</span>),plot(t,trace,<span class="string">&apos;k&apos;</span>);</span><br><span class="line">        hold off;</span><br><span class="line">        pause(<span class="number">0.001</span>);</span><br><span class="line">    <span class="keyword">end</span></span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[PML边界-一阶声波方程有线差分模拟]]></title>
      <url>http://sheng09.github.io/2016/09/13/fd-1d-PML/</url>
      <content type="html"><![CDATA[<p>&#x672C;&#x6587;&#x4ECB;&#x7ECD;&#x4E86;&#x58F0;&#x6CE2;&#x65B9;&#x7A0B;&#x7684;PML&#x5438;&#x6536;&#x8FB9;&#x754C;&#x6709;&#x9650;&#x5DEE;&#x5206;&#x6A21;&#x62DF;&#xFF0C;&#x5E76;&#x5229;&#x7528;&#x4E00;&#x7EF4;&#x6A21;&#x578B;&#x4F8B;&#x5B50;&#x52A0;&#x4EE5;&#x8BF4;&#x660E;&#x3002;<br><img src="/2016/09/13/fd-1d-PML/wave.gif" width="600px"><br><a id="more"></a></p>
<!-- toc -->
<ul>
<li><a href="#&#x63A7;&#x5236;&#x65B9;&#x7A0B;">&#x63A7;&#x5236;&#x65B9;&#x7A0B;</a></li>
<li><a href="#&#x4EA4;&#x9519;&#x7F51;&#x683C;">&#x4EA4;&#x9519;&#x7F51;&#x683C;</a></li>
<li><a href="#dx&#x7684;&#x9009;&#x62E9;">$d(x)$&#x7684;&#x9009;&#x62E9;</a></li>
<li><a href="#&#x5B9E;&#x73B0;">&#x5B9E;&#x73B0;</a></li>
<li><a href="#&#x53C2;&#x8003;&#x6587;&#x732E;">&#x53C2;&#x8003;&#x6587;&#x732E;</a></li>
</ul>
<!-- tocstop -->
<h2 id="&#x63A7;&#x5236;&#x65B9;&#x7A0B;"><a href="#&#x63A7;&#x5236;&#x65B9;&#x7A0B;" class="headerlink" title="&#x63A7;&#x5236;&#x65B9;&#x7A0B;"></a>&#x63A7;&#x5236;&#x65B9;&#x7A0B;</h2><p>&#x4E00;&#x7EF4;&#x7A7A;&#x95F4;&#x4E0B;&#xFF0C;&#x4E00;&#x9636;&#x58F0;&#x6CE2;&#x65B9;&#x7A0B;&#x53EF;&#x4EE5;&#x5199;&#x6210;&#x4EE5;&#x4E0B;&#x5F62;&#x5F0F;&#xFF1A;$ $</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
    \begin{cases}
        \frac{\partial p }{\partial t} & = & -\rho v^2\frac{\partial q}{\partial x} \\
        \frac{\partial q }{\partial t} & = & -\frac{1}{\rho} \frac{\partial p}{\partial x}
    \end{cases}
\end{eqnarray}</script><p>&#x9488;&#x5BF9;PML&#x533A;&#x57DF;&#xFF0C;&#x63A7;&#x5236;&#x65B9;&#x7A0B;&#x5982;&#x4E0B;&#xFF1A;</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
    \begin{cases}
        \frac{\partial p }{\partial t}+d(x)p & = & -\rho v^2\frac{\partial q}{\partial x}\\
        \frac{\partial q }{\partial t}+d(x)q & = & -\frac{1}{\rho} \frac{\partial p}{\partial x}
    \end{cases}
\end{eqnarray}</script><script type="math/tex; mode=display">
\begin{eqnarray}
    \begin{cases}
        D_t p_B + d(x_B) p_B & = & - \rho v^2 D_x q_B \\
        D_t q_A + d(x_A)q_A & = & -\frac{1}{\rho}D_x p_A
    \end{cases}
\end{eqnarray}</script><h2 id="&#x4EA4;&#x9519;&#x7F51;&#x683C;"><a href="#&#x4EA4;&#x9519;&#x7F51;&#x683C;" class="headerlink" title="&#x4EA4;&#x9519;&#x7F51;&#x683C;"></a>&#x4EA4;&#x9519;&#x7F51;&#x683C;</h2><p>&#x53C2;&#x8003;Virieux(<a href="http://library.seg.org/doi/abs/10.1190/1.1441605" target="_blank" rel="external">1984</a>, <a href="http://library.seg.org/doi/abs/10.1190/1.1442147" target="_blank" rel="external">1986</a>)&#xFF0C;&#x6784;&#x5EFA;&#x4EA4;&#x9519;&#x7F51;&#x683C;&#x5982;&#x4E0B;&#xFF1A;<br><img src="/2016/09/13/fd-1d-PML/grid.jpg" alt=""></p>
<p>&#x5728;&#x4E8C;&#x9636;&#x5DEE;&#x5206;&#x7CBE;&#x5EA6;&#x4E0B;&#xFF0C;&#x5BF9;&#x4E8E;&#xFF22;&#x70B9;&#x53EF;&#x4EE5;&#x63A8;&#x5BFC;&#xFF1A;</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
        D_t p_B + d(x_B)p_B & = & - \rho v^2 D_x q_B
\end{eqnarray}</script><script type="math/tex; mode=display">
\begin{eqnarray}
\begin{aligned}
        \Rightarrow\frac{1}{\Delta t} [ p(x_i, t_{m+1/2}) - p(x_i, t_{m-1/2}) ] + & \frac{d(x_i)}{2} [p(x_i, t_{m+1/2}) + p(x_i, t_{m-1/2}) ] \\
        & = -\frac{\rho v^2}{\Delta x} [ q(x_{i+1/2}, t_m) - q(x_{i-1/2}, t_m) ]
\end{aligned}
\end{eqnarray}</script><script type="math/tex; mode=display">
\begin{eqnarray}
  \Rightarrow
  \begin{cases}
        p(x_i, t_{m+1/2}) & = & c_1p(x_i, t_{m-1/2})  + c_2 [ q(x_{i+1/2}, t_m) - q(x_{i-1/2}, t_m) ]\\
        c_1 & = & \frac{2-\Delta t d(x_i)}{2+\Delta t d(x_i)} \\
        c_2 & = & -\frac{2\rho v^2 \Delta t}{\Delta x [2+ \Delta td(x_i)]} \\
  \end{cases}
\end{eqnarray}</script><p>&#x540C;&#x6837;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x63A8;&#x5BFC;&#xFF21;&#x70B9;&#xFF1A;</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
    D_t q_A + d(x_A)q_A & = & -\frac{1}{\rho}D_x p_A
\end{eqnarray}</script><script type="math/tex; mode=display">
\begin{eqnarray}
  \begin{aligned}
    \Rightarrow
    \frac{1}{\Delta t} [q(x_{i+1/2},t_{m+1})- q(x_{i+1/2},t_{m}) ]& +
    \frac{d(x_{i+1/2})}{2} [q(x_{i+1/2},t_{m+1})+ q(x_{i+1/2},t_{m}) ]\\
    &=  -\frac{1}{\rho \Delta x} [p(x_{i+1}, t_{m+1/2}) - p(x_i, t_{m+1/2})]
  \end{aligned}
\end{eqnarray}</script><script type="math/tex; mode=display">
\begin{eqnarray}
  \Rightarrow
    \begin{cases}
      q(x_{i+1/2},t_{m+1}) & = & f_1q(x_{i+1/2},t_{m}) + f_2[p(x_{i+1}, t_{m+1/2}) - p(x_i, t_{m+1/2})] \\
      f_1 & = &  \frac{2-\Delta t d(x_{i+1/2})}{2+\Delta t d(x_{i+1/2})}\\
      f_2 & = & -\frac{2\Delta t}{\rho \Delta x[2+ \Delta td(x_{i+1/2})]}
    \end{cases}
\end{eqnarray}</script><p>&#x6545;&#x800C;&#xFF0C;&#x6CE2;&#x573A;&#x9012;&#x63A8;&#x5173;&#x7CFB;&#x4E3A;&#xFF1A;</p>
<script type="math/tex; mode=display">
\begin{equation}
  \begin{cases}
    q(t=0) \\
    p(t=\Delta t/2)
  \end{cases}
  \Rightarrow
    \color{red}{q(t=\Delta t)}
  \\\Rightarrow
  \begin{cases}
    \color{red}{q(t=\Delta t)} \\
    p(t=\Delta t/2)
  \end{cases}
  \Rightarrow \color{blue}{p(t=3\Delta t/2)}
  \\\Rightarrow
  \begin{cases}
    \color{red}{q(t=\Delta t)} \\
    \color{blue}{p(t=3\Delta t/2)}\\
  \end{cases}
  \Rightarrow \color{green}{q(t=2\Delta t)}
  \\\Rightarrow
  \begin{cases}
    \color{green}{q(t=2\Delta t)} \\
    \color{blue}{p(t=3\Delta t/2)}
  \end{cases}
  \Rightarrow ............\\
  ...

  \end{equation}</script><h2 id="dx&#x7684;&#x9009;&#x62E9;"><a href="#d-x-&#x7684;&#x9009;&#x62E9;" class="headerlink" title="$d(x)$&#x7684;&#x9009;&#x62E9;"></a>$d(x)$&#x7684;&#x9009;&#x62E9;</h2><script type="math/tex; mode=display">
d(x) = log(\frac{1}{R}) \frac{3v}{2\delta}(\frac{x}{\delta})^2</script><p>$R$&#x63A8;&#x8350;&#x53D6;0.001&#xFF0C;$\delta$&#x4E3A;PML&#x5C42;&#x539A;[<a href="http://library.seg.org/doi/abs/10.1190/1.1444908" target="_blank" rel="external">Collino and Tsogka 2001</a>]&#x3002;</p>
<h2 id="&#x5B9E;&#x73B0;"><a href="#&#x5B9E;&#x73B0;" class="headerlink" title="&#x5B9E;&#x73B0;"></a>&#x5B9E;&#x73B0;</h2><p><img src="/2016/09/13/fd-1d-PML/wave.gif" width="600px"></p>
<figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% Matlab</span></span><br><span class="line"><span class="comment">%Parameters%</span></span><br><span class="line">  clear;close all; clc</span><br><span class="line">  n_pml = <span class="number">10</span>;</span><br><span class="line">  nx = <span class="number">1020</span>; dx  = <span class="number">10</span>; x = (-n_pml:nx<span class="number">-1</span>-n_pml) * dx; <span class="comment">%(1:11) and (1010:1020) are PML zone</span></span><br><span class="line">  nt = <span class="number">700</span>;  dt  = <span class="number">1.0e-2</span>;</span><br><span class="line">  v  = <span class="number">1000.0</span>; rho = <span class="number">1500</span>;</span><br><span class="line">  R = <span class="number">0.001</span>; delta = n_pml * dx; d_const = (<span class="number">3.0</span>*v/<span class="number">2.0</span>/delta)*<span class="built_in">log</span>(<span class="number">1.0</span>/R) /(delta*delta);</span><br><span class="line"><span class="comment">%d(x)%</span></span><br><span class="line">  d_pLeft  = ( (-n_pml:<span class="number">0</span>)*dx ) .^<span class="number">2</span> * d_const;</span><br><span class="line">  d_pRight = ( (<span class="number">0</span>:n_pml)*dx  ) .^<span class="number">2</span> * d_const;</span><br><span class="line">  d_qLeft  = ( (-n_pml:<span class="number">-1</span>)*dx +dx/<span class="number">2</span> ) .^<span class="number">2</span> * d_const;</span><br><span class="line">  d_qRight = ( (<span class="number">1</span>:n_pml)*dx -dx/<span class="number">2</span>   ) .^<span class="number">2</span> * d_const;</span><br><span class="line">  d_p      = [d_pLeft zeros(<span class="number">1</span>,nx<span class="number">-2</span>*n_pml<span class="number">-2</span>) d_pRight];</span><br><span class="line">  d_q      = [d_qLeft zeros(<span class="number">1</span>,nx<span class="number">-2</span>*n_pml<span class="number">-1</span>) d_qRight];</span><br><span class="line">  c1       = (<span class="number">2.0</span>-dt*d_p)./(<span class="number">2.0</span>+dt*d_p);</span><br><span class="line">  c2       = (<span class="number">-2.0</span>*rho*v*v*dt)./dx./(<span class="number">2.0</span>+dt*d_p);</span><br><span class="line">  f1       = (<span class="number">2.0</span>-dt*d_q)./(<span class="number">2.0</span>+dt*d_q);</span><br><span class="line">  f2       = ( (<span class="number">-2.0</span>*dt)./rho./dx) ./ (<span class="number">2.0</span>+dt.*d_q);</span><br><span class="line"><span class="comment">%source%</span></span><br><span class="line">  f_wave = <span class="number">0.5</span>*<span class="number">2.0</span> * <span class="built_in">pi</span> ;</span><br><span class="line">  n_stop = <span class="built_in">floor</span>( <span class="number">2.0</span> * <span class="built_in">pi</span> / f_wave   / dt );</span><br><span class="line">  src= [ sin( (<span class="number">0</span>:n_stop)*dt*f_wave) zeros(<span class="number">1</span>,nt) ]; <span class="comment">%source</span></span><br><span class="line"></span><br><span class="line">  p  = <span class="built_in">zeros</span>(<span class="number">2</span>,nx); q  = <span class="built_in">zeros</span>(<span class="number">2</span>,nx<span class="number">-1</span>); <span class="comment">%initial conditions</span></span><br><span class="line">  new = <span class="number">1</span>; old = <span class="number">2</span>;</span><br><span class="line">  figure</span><br><span class="line">  xmin = min(x); xmax = max(x);</span><br><span class="line"><span class="comment">%main loop%</span></span><br><span class="line">  <span class="keyword">for</span> it = <span class="number">1</span>:nt</span><br><span class="line">      <span class="comment">%  1   2   3   4   5  ...</span></span><br><span class="line">      <span class="comment">%--q---q---q---q---q--...</span></span><br><span class="line">      <span class="comment">%p---p---p---p---p---p...</span></span><br><span class="line">      <span class="comment">%1   2   3   4   5   6...</span></span><br><span class="line">      p(old,<span class="number">511</span>) = src(it)+p(old,<span class="number">511</span>);</span><br><span class="line">      <span class="keyword">for</span> ix = <span class="number">1</span>:nx<span class="number">-1</span></span><br><span class="line">          q(new,ix) = f1(ix)* q(old,ix) + f2(ix) * ( p(old,ix+<span class="number">1</span>) - p(old,ix) );</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">for</span> ix = <span class="number">2</span>:nx<span class="number">-1</span></span><br><span class="line">          p(new,ix) = c1(ix)* p(old,ix) + c2(ix) * ( q(new,ix) - q(new,ix<span class="number">-1</span>) );</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">%p(new,nx) = p(new,nx-1); % free boundary</span></span><br><span class="line">      <span class="comment">%p(new,1)  = p(new,2);</span></span><br><span class="line">      p(new,nx) = <span class="number">0.0</span>; <span class="comment">% rigid boundary</span></span><br><span class="line">      p(new,<span class="number">1</span>)  = <span class="number">0.0</span>;</span><br><span class="line">      plot(x,p(old,:));</span><br><span class="line">      axis( [xmin xmax <span class="number">-1.5</span> <span class="number">1.5</span>] );</span><br><span class="line">      pause(<span class="number">0.001</span>);</span><br><span class="line">      tmp = old; old = new; new = tmp;</span><br><span class="line">  <span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h2 id="&#x53C2;&#x8003;&#x6587;&#x732E;"><a href="#&#x53C2;&#x8003;&#x6587;&#x732E;" class="headerlink" title="&#x53C2;&#x8003;&#x6587;&#x732E;"></a>&#x53C2;&#x8003;&#x6587;&#x732E;</h2><p><a href="http://library.seg.org/doi/abs/10.1190/1.1441605" target="_blank" rel="external">Virieux J. SH-wave propagation in heterogeneous media: Velocity-stress finite-difference method[J]. Geophysics, 1984, 49(11): 1933-1942.</a><br><a href="http://library.seg.org/doi/abs/10.1190/1.1442147" target="_blank" rel="external">Virieux J. P-SV wave propagation in heterogeneous media: Velocity-stress finite-difference method[J]. Geophysics, 1986, 51(4): 889-901.</a><br><a href="http://library.seg.org/doi/abs/10.1190/1.1444908" target="_blank" rel="external">Collino, Francis, and Chrysoula Tsogka. &#x201C;Application of the perfectly matched absorbing layer model to the linear elastodynamic problem in anisotropic heterogeneous media.&#x201D; Geophysics 66.1 (2001): 294-307.</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[一阶声波方程有线差分模拟]]></title>
      <url>http://sheng09.github.io/2016/09/13/fd-1d/</url>
      <content type="html"><![CDATA[<p>&#x672C;&#x6587;&#x4ECB;&#x7ECD;&#x4E86;&#x4E00;&#x9636;&#x58F0;&#x6CE2;&#x65B9;&#x7A0B;&#x6709;&#x9650;&#x5DEE;&#x5206;&#x6A21;&#x62DF;&#xFF0C;&#x5E76;&#x5229;&#x7528;&#x4E00;&#x7EF4;&#x6A21;&#x578B;&#x4F8B;&#x5B50;&#x52A0;&#x4EE5;&#x8BF4;&#x660E;&#x3002;<br><img src="/2016/09/13/fd-1d/wave.gif" width="600px"></p>
<a id="more"></a>
<!-- toc -->
<ul>
<li><a href="#&#x63A7;&#x5236;&#x65B9;&#x7A0B;">&#x63A7;&#x5236;&#x65B9;&#x7A0B;</a></li>
<li><a href="#&#x4EA4;&#x9519;&#x7F51;&#x683C;">&#x4EA4;&#x9519;&#x7F51;&#x683C;</a></li>
<li><a href="#&#x5B9E;&#x73B0;">&#x5B9E;&#x73B0;</a></li>
<li><a href="#&#x53C2;&#x8003;&#x6587;&#x732E;">&#x53C2;&#x8003;&#x6587;&#x732E;</a></li>
</ul>
<!-- tocstop -->
<h2 id="&#x63A7;&#x5236;&#x65B9;&#x7A0B;"><a href="#&#x63A7;&#x5236;&#x65B9;&#x7A0B;" class="headerlink" title="&#x63A7;&#x5236;&#x65B9;&#x7A0B;"></a>&#x63A7;&#x5236;&#x65B9;&#x7A0B;</h2><p>&#x4E00;&#x7EF4;&#x7A7A;&#x95F4;&#x4E0B;&#xFF0C;&#x4E00;&#x9636;&#x58F0;&#x6CE2;&#x65B9;&#x7A0B;&#x53EF;&#x4EE5;&#x5199;&#x6210;&#x4EE5;&#x4E0B;&#x5F62;&#x5F0F;&#xFF1A;$ $</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
    \begin{cases}
        \frac{\partial p }{\partial t} & = & -\rho v^2\frac{\partial q}{\partial x} + f\\
        \frac{\partial q }{\partial t} & = & -\frac{1}{\rho} \frac{\partial p}{\partial x} + q_0
    \end{cases}
\end{eqnarray}</script><p>&#x5728;&#x65E0;&#x5916;&#x529B;&#x4F5C;&#x7528;&#x65E0;&#x4FE1;&#x53F7;&#x8F93;&#x5165;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x58F0;&#x6CE2;&#x65B9;&#x7A0B;&#x53CA;&#x5176;&#x5DEE;&#x5206;&#x5F62;&#x5F0F;&#x4E3A;&#xFF1A;</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
    \begin{cases}
        \frac{\partial p }{\partial t} & = & -\rho v^2\frac{\partial q}{\partial x}\\
        \frac{\partial q }{\partial t} & = & -\frac{1}{\rho} \frac{\partial p}{\partial x}
    \end{cases}
\end{eqnarray}</script><script type="math/tex; mode=display">
\begin{eqnarray}
    \begin{cases}
        D_t p_B & = & - \rho v^2 D_x q_B \\
        D_t q_A & = & -\frac{1}{\rho}D_x p_A
    \end{cases}
\end{eqnarray}</script><h2 id="&#x4EA4;&#x9519;&#x7F51;&#x683C;"><a href="#&#x4EA4;&#x9519;&#x7F51;&#x683C;" class="headerlink" title="&#x4EA4;&#x9519;&#x7F51;&#x683C;"></a>&#x4EA4;&#x9519;&#x7F51;&#x683C;</h2><p>&#x53C2;&#x8003;Virieux(<a href="http://library.seg.org/doi/abs/10.1190/1.1441605" target="_blank" rel="external">1984</a>, <a href="http://library.seg.org/doi/abs/10.1190/1.1442147" target="_blank" rel="external">1986</a>)&#xFF0C;&#x6784;&#x5EFA;&#x4EA4;&#x9519;&#x7F51;&#x683C;&#x5982;&#x4E0B;&#xFF1A;<br><img src="/2016/09/13/fd-1d/grid.jpg" alt=""></p>
<p>&#x5728;&#x4E8C;&#x9636;&#x5DEE;&#x5206;&#x7CBE;&#x5EA6;&#x4E0B;&#xFF0C;&#x5BF9;&#x4E8E;&#xFF22;&#x70B9;&#x53EF;&#x4EE5;&#x63A8;&#x5BFC;&#xFF1A;</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
        D_t p_B & = & - \rho v^2 D_x q_B \\
        \Rightarrow \frac{1}{\Delta t} [ p(x_i, t_{m+1/2}) - p(x_i, t_{m-1/2}) ] & = &  -\frac{\rho v^2}{\Delta x} [ q(x_{i+1/2}, t_m) - q(x_{i-1/2}, t_m) ]
\end{eqnarray}</script><script type="math/tex; mode=display">
\begin{eqnarray}
        \Rightarrow p(x_i, t_{m+1/2}) & = & p(x_i, t_{m-1/2})  - \frac{\rho v^2 \Delta t}{\Delta x} [ q(x_{i+1/2}, t_m) - q(x_{i-1/2}, t_m)
\end{eqnarray}</script><p>&#x540C;&#x6837;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x63A8;&#x5BFC;&#xFF21;&#x70B9;&#xFF1A;</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
    D_t q_A & = & -\frac{1}{\rho}D_x p_A \\
    \Rightarrow \frac{1}{\Delta t} [q(x_{i+1/2},t_{m+1})- q(x_{i+1/2},t_{m}) ]& = & -\frac{1}{\rho \Delta x} [p(x_{i+1}, t_{m+1/2}) - p(x_i, t_{m+1/2})]
\end{eqnarray}</script><script type="math/tex; mode=display">
\begin{eqnarray}
    \Rightarrow q(x_{i+1/2},t_{m+1}) & = & q(x_{i+1/2},t_{m}) -\frac{\Delta t}{\rho \Delta x} [p(x_{i+1}, t_{m+1/2}) - p(x_i, t_{m+1/2})]
\end{eqnarray}</script><p>&#x6545;&#x800C;&#xFF0C;&#x6CE2;&#x573A;&#x9012;&#x63A8;&#x5173;&#x7CFB;&#x4E3A;&#xFF1A;</p>
<script type="math/tex; mode=display">
\begin{equation}
  \begin{cases}
    q(t=0) \\
    p(t=\Delta t/2)
  \end{cases}
  \Rightarrow
    \color{red}{q(t=\Delta t)}
  \\\Rightarrow
  \begin{cases}
    \color{red}{q(t=\Delta t)} \\
    p(t=\Delta t/2)
  \end{cases}
  \Rightarrow \color{blue}{p(t=3\Delta t/2)}
  \\\Rightarrow
  \begin{cases}
    \color{red}{q(t=\Delta t)} \\
    \color{blue}{p(t=3\Delta t/2)}\\
  \end{cases}
  \Rightarrow \color{green}{q(t=2\Delta t)}
  \\\Rightarrow
  \begin{cases}
    \color{green}{q(t=2\Delta t)} \\
    \color{blue}{p(t=3\Delta t/2)}
  \end{cases}
  \Rightarrow ............\\
  ...

  \end{equation}</script><h2 id="&#x5B9E;&#x73B0;"><a href="#&#x5B9E;&#x73B0;" class="headerlink" title="&#x5B9E;&#x73B0;"></a>&#x5B9E;&#x73B0;</h2><p><img src="/2016/09/13/fd-1d/wave.gif" width="600px"></p>
<figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% Matlab</span></span><br><span class="line">clear;close all; clc</span><br><span class="line">nx = <span class="number">1000</span>;   dx  = <span class="number">10</span>; x = (<span class="number">0</span>:nx<span class="number">-1</span>) * dx;</span><br><span class="line">nt = <span class="number">2500</span>;   dt  = <span class="number">1.0e-2</span>;</span><br><span class="line">v  = <span class="number">1000.0</span>; rho = <span class="number">1500</span>;</span><br><span class="line"></span><br><span class="line">f_wave = <span class="number">0.5</span>*<span class="number">2.0</span> * <span class="built_in">pi</span> ;</span><br><span class="line">n_stop = <span class="built_in">floor</span>( <span class="number">2.0</span> * <span class="built_in">pi</span> / f_wave   / dt );</span><br><span class="line">src= [ sin( (<span class="number">0</span>:n_stop)*dt*f_wave) zeros(<span class="number">1</span>,nt) ]; <span class="comment">%source</span></span><br><span class="line"></span><br><span class="line">p  = <span class="built_in">zeros</span>(<span class="number">2</span>,nx); q  = <span class="built_in">zeros</span>(<span class="number">2</span>,nx<span class="number">-1</span>); <span class="comment">%initial conditions</span></span><br><span class="line">new = <span class="number">1</span>; old = <span class="number">2</span>;</span><br><span class="line">c_q = <span class="number">-1.0</span>*dt/rho/dx; c_p = <span class="number">-1.0</span>*rho*v*v*dt/dx;</span><br><span class="line">figure</span><br><span class="line"><span class="keyword">for</span> it = <span class="number">1</span>:nt</span><br><span class="line">    <span class="comment">%  1   2   3   4   5  ...</span></span><br><span class="line">    <span class="comment">%--q---q---q---q---q--...</span></span><br><span class="line">    <span class="comment">%p---p---p---p---p---p...</span></span><br><span class="line">    <span class="comment">%1   2   3   4   5   6...</span></span><br><span class="line">    p(old,<span class="number">501</span>) = src(it)+p(old,<span class="number">501</span>);</span><br><span class="line">    <span class="keyword">for</span> ix = <span class="number">1</span>:nx<span class="number">-1</span></span><br><span class="line">        q(new,ix) = q(old,ix) + c_q * ( p(old,ix+<span class="number">1</span>) - p(old,ix) );</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">for</span> ix = <span class="number">2</span>:nx<span class="number">-1</span></span><br><span class="line">        p(new,ix) = p(old,ix) + c_p * ( q(new,ix) - q(new,ix<span class="number">-1</span>) );</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    p(new,nx) = p(new,nx<span class="number">-1</span>); <span class="comment">% free boundary</span></span><br><span class="line">    p(new,<span class="number">1</span>)  = p(new,<span class="number">2</span>);</span><br><span class="line">    <span class="comment">%p(new,nx) = 0.0; % rigid boundary</span></span><br><span class="line">    <span class="comment">%p(new,1)  = 0.0;</span></span><br><span class="line">    plot(x,p(old,:));</span><br><span class="line">    axis( [<span class="number">0</span> nx*dx <span class="number">-1.5</span> <span class="number">1.5</span>] );</span><br><span class="line">    pause(<span class="number">0.001</span>);</span><br><span class="line">    tmp = old; old = new; new = tmp;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>
<h2 id="&#x53C2;&#x8003;&#x6587;&#x732E;"><a href="#&#x53C2;&#x8003;&#x6587;&#x732E;" class="headerlink" title="&#x53C2;&#x8003;&#x6587;&#x732E;"></a>&#x53C2;&#x8003;&#x6587;&#x732E;</h2><p><a href="http://library.seg.org/doi/abs/10.1190/1.1441605" target="_blank" rel="external">Virieux J. SH-wave propagation in heterogeneous media: Velocity-stress finite-difference method[J]. Geophysics, 1984, 49(11): 1933-1942.</a><br><a href="http://library.seg.org/doi/abs/10.1190/1.1442147" target="_blank" rel="external">Virieux J. P-SV wave propagation in heterogeneous media: Velocity-stress finite-difference method[J]. Geophysics, 1986, 51(4): 889-901.</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[FFT终点截断引起的错误]]></title>
      <url>http://sheng09.github.io/2016/09/12/fft-endpoint/</url>
      <content type="html"><![CDATA[<p>&#x6211;&#x770B;&#x8FC7;&#x5F88;&#x591A;&#x4F8B;FFT&#x8BA1;&#x7B97;&#x4E2D;&#x7AEF;&#x70B9;&#x5904;&#x7406;&#x7684;&#x9519;&#x8BEF;&#xFF0C;&#x5148;&#x6765;&#x770B;&#x4EE5;&#x4E0B;&#x7684;&#x4F8B;&#x5B50;&#xFF1A;<br>&#x4E0B;&#x56FE;&#x4E2D;&#xFF0C;1Hz&#x7684;&#x5468;&#x671F;&#x6B63;&#x5F26;&#x4FE1;&#x53F7;$sin(2\pi t)$&#xFF0C;&#x901A;&#x8FC7;FFT&#x8BA1;&#x7B97;&#xFF0C;&#x5176;&#x529F;&#x7387;&#x9891;&#x8C31;&#x4E2D;&#xFF0C;&#x5B58;&#x5728;1Hz&#x4EE5;&#x5916;&#x7684;&#x4FE1;&#x53F7;&#xFF0C;&#x8FD9;&#x663E;&#x7136;&#x662F;&#x4E0D;&#x5BF9;&#x7684;&#x3002;<br>&#x5728;&#x5F88;&#x591A;&#x6848;&#x4F8B;&#x4E2D;&#xFF0C;&#x8FD9;&#x4E00;&#x73B0;&#x8C61;&#x88AB;&#x5FFD;&#x89C6;&#xFF0C;&#x6216;&#x8005;&#x88AB;&#x89E3;&#x91CA;&#x4E3A;&#x8BA1;&#x7B97;&#x8BEF;&#x5DEE;&#x3002;&#x7279;&#x522B;&#x662F;&#x5F53;&#x4FE1;&#x53F7;&#x7684;&#x5E8F;&#x5217;&#x8DB3;&#x591F;&#x957F;&#x65F6;&#xFF0C;&#x8FD9;&#x4E00;&#x7279;&#x5F81;&#x4F1A;&#x5341;&#x5206;&#x7684;&#x4E0D;&#x660E;&#x663E;&#x3002;&#x4EA6;&#x6709;&#x4E00;&#x90E8;&#x5206;&#x6848;&#x4F8B;&#x671F;&#x671B;&#x901A;&#x8FC7;&#x8865;&#x96F6;&#x6765;&#x4F18;&#x5316;&#x7ED3;&#x679C;&#x3002;<br><img src="/2016/09/12/fft-endpoint/wrong_frequency.jpg" alt=""></p>
<a id="more"></a>
<!-- toc -->
<ul>
<li><a href="#&#x9519;&#x8BEF;&#x7684;&#x539F;&#x56E0;">&#x9519;&#x8BEF;&#x7684;&#x539F;&#x56E0;</a></li>
<li><a href="#&#x6B63;&#x786E;&#x7684;&#x505A;&#x6CD5;">&#x6B63;&#x786E;&#x7684;&#x505A;&#x6CD5;</a></li>
<li><a href="#&#x4FE1;&#x53F7;&#x5904;&#x7406;&#x6CE8;&#x610F;&#x4E8B;&#x9879;">&#x4FE1;&#x53F7;&#x5904;&#x7406;&#x6CE8;&#x610F;&#x4E8B;&#x9879;</a></li>
</ul>
<!-- tocstop -->
<h2 id="&#x9519;&#x8BEF;&#x7684;&#x539F;&#x56E0;"><a href="#&#x9519;&#x8BEF;&#x7684;&#x539F;&#x56E0;" class="headerlink" title="&#x9519;&#x8BEF;&#x7684;&#x539F;&#x56E0;"></a>&#x9519;&#x8BEF;&#x7684;&#x539F;&#x56E0;</h2><p>&#x8981;&#x5206;&#x6790;&#x8FD9;&#x4E00;&#x9519;&#x8BEF;&#x51FA;&#x73B0;&#x7684;&#x539F;&#x56E0;&#xFF0C;&#x9700;&#x8981;&#x4ECE;FFT&#x7684;&#x9690;&#x542B;&#x5468;&#x671F;&#x6027;&#x6761;&#x4EF6;&#x51FA;&#x53D1;&#x3002;&#x65F6;&#x95F4;&#x57DF;&#x7684;&#x79BB;&#x6563;&#x5316;&#x5BF9;&#x5E94;&#x4E86;&#x9891;&#x7387;&#x57DF;&#x7684;&#x5468;&#x671F;&#x5316;&#xFF0C;&#x800C;&#x9891;&#x7387;&#x57DF;&#x7684;&#x79BB;&#x6563;&#x5316;&#x5BF9;&#x5E94;&#x4E86;&#x65F6;&#x95F4;&#x57DF;&#x7684;&#x5468;&#x671F;&#x5316;&#x3002;&#x6545;&#x7531;&#x65F6;&#x95F4;&#x57DF;&#x7684;&#x79BB;&#x6563;&#x5E8F;&#x5217;&#x53D8;&#x6362;&#x5F97;&#x5230;&#x9891;&#x7387;&#x57DF;&#x7684;&#x79BB;&#x6563;&#x5E8F;&#x5217;&#xFF0C;&#x9690;&#x542B;&#x4E86;&#x4FE1;&#x53F7;&#x5728;&#x65F6;&#x9891;&#x57DF;&#x7686;&#x4E3A;&#x5468;&#x671F;&#x4FE1;&#x53F7;&#x7684;&#x7EA6;&#x675F;&#x3002;&#x56E0;&#x6B64;&#xFF0C;FFT&#x8BA1;&#x7B97;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x5BF9;&#x5E94;&#x4E86;&#x5468;&#x671F;&#x5316;&#x7684;&#x65F6;&#x95F4;&#x5E8F;&#x5217;&#x7684;&#x9891;&#x8C31;&#x3002;<br>&#x9488;&#x5BF9;&#x4EE5;&#x4E0A;&#x65F6;&#x95F4;&#x5E8F;&#x5217;&#x4FE1;&#x53F7;&#xFF0C;&#x6211;&#x4EEC;&#x6784;&#x5EFA;&#x5176;&#x5468;&#x671F;&#x5316;&#x6CE2;&#x5F62;&#x5982;&#x4E0B;&#xFF1A;<br><img src="/2016/09/12/fft-endpoint/wrong_2t.jpg" alt=""><br>&#x663E;&#x7136;&#xFF0C;&#x5468;&#x671F;&#x5316;&#x4E4B;&#x540E;&#x7684;&#x4FE1;&#x53F7;&#x5E76;&#x975E;&#x6211;&#x4EEC;&#x9884;&#x60F3;&#x7684;$sin(2\pi t)$&#xFF0C;&#x6240;&#x4EE5;&#x5229;&#x7528;FFT&#x5F97;&#x5230;&#x7684;&#x9891;&#x8C31;&#x663E;&#x7136;&#x4E5F;&#x4E0D;&#x662F;&#x9884;&#x60F3;&#x7684;1Hz&#x3002;<br>&#x800C;&#x51FA;&#x73B0;&#x9891;&#x8C31;&#x6CC4;&#x6F0F;&#xFF0C;&#x4E5F;&#x662F;&#x7531;$t=1$&#x5904;&#x95F4;&#x65AD;&#x5F15;&#x8D77;&#x7684;&#x5409;&#x5E03;&#x65AF;&#x6548;&#x5E94;&#x3002;</p>
<h2 id="&#x6B63;&#x786E;&#x7684;&#x505A;&#x6CD5;"><a href="#&#x6B63;&#x786E;&#x7684;&#x505A;&#x6CD5;" class="headerlink" title="&#x6B63;&#x786E;&#x7684;&#x505A;&#x6CD5;"></a>&#x6B63;&#x786E;&#x7684;&#x505A;&#x6CD5;</h2><p>&#x90A3;&#x4E48;&#xFF0C;&#x8981;&#x5F97;&#x5230;&#x6B63;&#x786E;&#x7684;&#x9891;&#x8C31;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x62B9;&#x6389;&#x539F;&#x59CB;&#x5E8F;&#x5217;&#x672B;&#x5C3E;&#x7684;&#x91C7;&#x6837;&#x70B9;&#xFF1A;<br><img src="/2016/09/12/fft-endpoint/frequency.jpg" alt=""><br>&#x6B64;&#x65F6;&#xFF0C;&#x5468;&#x671F;&#x5316;&#x5BF9;&#x5E94;&#x7684;&#x4FE1;&#x53F7;&#x5982;&#x4E0B;&#x56FE;&#xFF0C;&#x663E;&#x7136;&#x662F;&#x6211;&#x4EEC;&#x9884;&#x671F;&#x7684;&#x6B63;&#x5F26;&#x4FE1;&#x53F7;$sin(2\pi t)$&#x3002;<br><img src="/2016/09/12/fft-endpoint/2t.jpg" alt=""></p>
<h2 id="&#x4FE1;&#x53F7;&#x5904;&#x7406;&#x6CE8;&#x610F;&#x4E8B;&#x9879;"><a href="#&#x4FE1;&#x53F7;&#x5904;&#x7406;&#x6CE8;&#x610F;&#x4E8B;&#x9879;" class="headerlink" title="&#x4FE1;&#x53F7;&#x5904;&#x7406;&#x6CE8;&#x610F;&#x4E8B;&#x9879;"></a>&#x4FE1;&#x53F7;&#x5904;&#x7406;&#x6CE8;&#x610F;&#x4E8B;&#x9879;</h2><p>&#x5B9E;&#x9645;&#x4FE1;&#x53F7;&#x5904;&#x7406;&#x4E2D;&#xFF0C;&#x5BF9;&#x4E8E;&#x91C7;&#x6837;&#x70B9;&#x4E3A;$N$&#xFF0C;&#x91C7;&#x6837;&#x95F4;&#x9694;&#x4E3A;$\delta t$&#x7684;&#x79BB;&#x6563;&#x5E8F;&#x5217;&#xFF0C;&#x5176;&#x5468;&#x671F;&#x4E3A;$N\delta t$&#xFF0C;&#x800C;&#x4E0D;&#x662F;$(N-1)\delta t$&#x3002;</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Boundary Conditions for Differential Equations]]></title>
      <url>http://sheng09.github.io/2016/09/01/PDE-boundaries/</url>
      <content type="html"><![CDATA[<p>There are different types of boundary conditions for ODE(Oridinary Differential Equation) and PDE(Partial Differential Equation). This post present all collections of these boundary conditions and associated equations.<br>Besides, this post also present the combination of Dirichlet and Neumann boundary conditions in construct absorbing boundary for solving wave eqution.<br><a id="more"></a></p>
<!-- toc -->
<ul>
<li><a href="#dirichlet-boundary-condition">Dirichlet Boundary Condition</a></li>
<li><a href="#neumann-boundary-condition">Neumann Boundary Condition</a></li>
<li><a href="#robin-boundary-condition">Robin Boundary Condition</a></li>
<li><a href="#mixed-boundary-condition">Mixed Boundary Condition</a></li>
<li><a href="#cauchy-boundary-condition">Cauchy Boundary Condition</a></li>
<li><a href="#associated-problems-for-pde-of-wave-equation">Associated Problems for PDE of Wave Equation</a></li>
<li><a href="#reference">Reference</a></li>
</ul>
<!-- tocstop -->
<h2 id="dirichlet-boundary-condition"><a href="#Dirichlet-Boundary-Condition" class="headerlink" title="Dirichlet Boundary Condition"></a>Dirichlet Boundary Condition</h2><p>Given ODE or PDE, conditions that specify values of the solution along the boundary of the domain is Dirichlet boundary condition. <a href="https://en.wikipedia.org/wiki/Dirichlet_boundary_condition" target="_blank" rel="external">Wiki</a></p>
<span>$$\begin{equation}
  \begin{cases}
    f(y&apos;&apos;,y) &amp; = &amp; 0 \\
    y(\alpha) &amp; = &amp; 0 \\
    y(\beta) &amp; = &amp; 0
  \end{cases}
\end{equation}$$</span><!-- Has MathJax -->
<span>$$\begin{equation}
  \begin{cases}
    f(\nabla^{2}G,G) &amp; = &amp; 0 \\
    G|_{boundary} &amp; = &amp; g(x,y,z)
  \end{cases}
\end{equation}$$</span><!-- Has MathJax -->
<h2 id="neumann-boundary-condition"><a href="#Neumann-Boundary-Condition" class="headerlink" title="Neumann Boundary Condition"></a>Neumann Boundary Condition</h2><p>Being different to Dirichlet boundary condition, Neumann boundary condition specify the values of the derivative of the solution along the boundary. <a href="https://en.wikipedia.org/wiki/Neumann_boundary_condition" target="_blank" rel="external">Wiki</a><br><span>$$\begin{equation}
  \begin{cases}
    f(y&apos;&apos;,y) &amp; = &amp; 0 \\
    y&apos;|_{x=\alpha} &amp; = &amp; 0 \\
    y&apos;|_{x=\beta} &amp; = &amp; 0
  \end{cases}
\end{equation}$$</span><!-- Has MathJax --><br><span>$$\begin{equation}
  \begin{cases}
    f(G&apos;&apos;,G) &amp; = &amp; 0 \\
    G&apos;|_{boundary} &amp; = &amp; g(x,y,z) \\
  \end{cases}
\end{equation}$$</span><!-- Has MathJax --></p>
<h2 id="robin-boundary-condition"><a href="#Robin-Boundary-Condition" class="headerlink" title="Robin Boundary Condition"></a>Robin Boundary Condition</h2><p>Robin boundary condition is the combination of Dirichlet and Neumann boundary conditions.<a href="https://en.wikipedia.org/wiki/Robin_boundary_condition" target="_blank" rel="external">Wiki</a></p>
<span>$$\begin{equation}
  \begin{cases}
    f(G&apos;&apos;,G) &amp; = &amp; 0 \\
    G+G&apos;|_{boundary} &amp; = &amp; g(x)
  \end{cases}
\end{equation}$$</span><!-- Has MathJax -->
<h2 id="mixed-boundary-condition"><a href="#Mixed-Boundary-Condition" class="headerlink" title="Mixed Boundary Condition"></a>Mixed Boundary Condition</h2><p>Being different from Robin condition, Mixed condition means different types of condition along different subset of the boundary. It is much more complex than Robin condition.<a href="https://en.wikipedia.org/wiki/Mixed_boundary_condition" target="_blank" rel="external">Wiki</a></p>
<span>$$\begin{equation}
  \begin{cases}
    f(G&apos;&apos;,G) &amp; = &amp; 0 \\
    G|_{1st\ boundary\ subset} &amp; = &amp; g_1(x) \\
    G&apos;|_{2nd\ boundary\ subset} &amp; = &amp; g_2(x)
  \end{cases}
\end{equation}$$</span><!-- Has MathJax -->
<h2 id="cauchy-boundary-condition"><a href="#Cauchy-Boundary-Condition" class="headerlink" title="Cauchy Boundary Condition"></a>Cauchy Boundary Condition</h2><p>In Cauchy boundary condition, Dirichlet and Neumann conditions are declared along the boundary to ensure the unique solution. <a href="https://en.wikipedia.org/wiki/Cauchy_boundary_condition" target="_blank" rel="external">Wiki</a></p>
<span>$$\begin{equation}
  \begin{cases}
    f(G&apos;&apos;,G) &amp; = &amp; 0 \\
    G|_{boundary} &amp; = &amp; g_1(x) \\
    G&apos;|_{ boundary} &amp; = &amp; g_2(x)
  \end{cases}
\end{equation}$$</span><!-- Has MathJax -->
<h2 id="associated-problems-for-pde-of-wave-equation"><a href="#Associated-Problems-for-PDE-of-Wave-Equation" class="headerlink" title="Associated Problems for PDE of Wave Equation"></a>Associated Problems for PDE of Wave Equation</h2><p>Considering boundary conditions for wave equation, Dirichlet and Neumann conditions produce reflection that are opposite in sign. Thus, the summation of these two cases will cancel the reflection.[<a href="http://www.sciencedirect.com/science/article/pii/0021999174900758" target="_blank" rel="external">Smith 1974</a>]</p>
<h2 id="reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>[1] <a href="http://www.sciencedirect.com/science/article/pii/0021999174900758" target="_blank" rel="external">Smith W D. A nonreflecting plane boundary for wave propagation problems[J]. Journal of Computational Physics, 1974, 15(4): 492-503.</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello]]></title>
      <url>http://sheng09.github.io/2016/07/13/Hello/</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[接收函数理论与实践（三）低速层对接收函数的影响]]></title>
      <url>http://sheng09.github.io/2016/06/15/RF-LVZ-03/</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[接收函数理论与实践（二）界面梯度对接收函数的影响]]></title>
      <url>http://sheng09.github.io/2016/06/15/RF-interface-02/</url>
      <content type="html"><![CDATA[<p>&#x63A5;&#x6536;&#x51FD;&#x6570;&#x901A;&#x8FC7;&#x53CD;&#x8936;&#x79EF;&#x8BA1;&#x7B97;&#xFF0C;&#x63D0;&#x53D6;&#x6CE2;&#x573A;&#x5728;&#x754C;&#x9762;&#x5904;&#x7684;&#x8F6C;&#x6362;&#x6548;&#x5E94;&#x3002;&#x5728;&#x5B9E;&#x9645;&#x95EE;&#x9898;&#x4E2D;&#xFF0C;&#x5E76;&#x4E0D;&#x5B58;&#x5728;&#x7EDD;&#x5BF9;&#x7684;&#x754C;&#x9762;&#xFF0C;&#x66F4;&#x4E3A;&#x51C6;&#x786E;&#x7684;&#x63CF;&#x8FF0;&#x5E94;&#x8BE5;&#x662F;&#x901F;&#x5EA6;&#x68AF;&#x5EA6;&#x8F83;&#x9AD8;&#x7684;&#x8FC7;&#x5EA6;&#x5E26;&#x3002;&#x4E3A;&#x5BF9;&#x6BD4;&#x68AF;&#x5EA6;&#x5E26;&#x7ED9;&#x63A5;&#x6536;&#x51FD;&#x6570;&#x6CE2;&#x5F62;&#x5E26;&#x6765;&#x7684;&#x5F71;&#x54CD;&#xFF0C;&#x53C2;&#x8003;<a href="http://www.eas.slu.edu/eqc/eqc_cps/TUTORIAL/RFTN2/index.html" target="_blank" rel="external">CPS Tutorials&#x90E8;&#x5206;&#x5185;&#x5BB9;</a>&#xFF0C;&#x672C;&#x6587;&#x9009;&#x62E9;&#x4E86;&#x8D70;&#x65F6;&#x76F8;&#x540C;&#xFF0C;&#x68AF;&#x5EA6;&#x53D8;&#x5316;&#x4E0D;&#x540C;&#x7684;&#x6A21;&#x578B;&#xFF0C;&#x7528;&#x4E8E;&#x63A5;&#x6536;&#x51FD;&#x6570;&#x6B63;&#x6F14;&#x8BA1;&#x7B97;&#x3002;<br><a id="more"></a></p>
<!-- toc -->
<ul>
<li><a href="#&#x6A21;&#x578B;&#x8BBE;&#x5B9A;">&#x6A21;&#x578B;&#x8BBE;&#x5B9A;</a></li>
<li><a href="#&#x6B63;&#x6F14;&#x7ED3;&#x679C;">&#x6B63;&#x6F14;&#x7ED3;&#x679C;</a></li>
<li><a href="#&#x8FD0;&#x884C;">&#x8FD0;&#x884C;</a></li>
</ul>
<!-- tocstop -->
<h2 id="&#x6A21;&#x578B;&#x8BBE;&#x5B9A;"><a href="#&#x6A21;&#x578B;&#x8BBE;&#x5B9A;" class="headerlink" title="&#x6A21;&#x578B;&#x8BBE;&#x5B9A;"></a>&#x6A21;&#x578B;&#x8BBE;&#x5B9A;</h2><p>&#x751F;&#x6210;&#x4E0D;&#x540C;&#x7684;&#x68AF;&#x5EA6;&#x754C;&#x9762;&#x6A21;&#x578B;&#xFF0C;&#x5E76;&#x5408;&#x7406;&#x914D;&#x7F6E;&#x4F7F;&#x8D70;&#x65F6;&#x76F8;&#x540C;&#x3002;&#x6A21;&#x578B;S&#x6CE2;&#x901F;&#x5EA6;&#xFF0C;P&#x6CE2;&#x901F;&#x5EA6;&#x53CA;&#x5BC6;&#x5EA6;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;&#xFF0C;&#x4E0D;&#x540C;&#x989C;&#x8272;&#x7684;&#x5B9E;&#x7EBF;&#x4EE3;&#x8868;&#x4E0D;&#x540C;&#x7684;&#x6A21;&#x578B;&#x3002;</p>
<table>
<tr>
  <td> <img src="/2016/06/15/RF-interface-02/VS.jpg" width="250" align="center"> </td>
  <td> <img src="/2016/06/15/RF-interface-02/VP.jpg" width="250" align="center"> </td>
  <td> <img src="/2016/06/15/RF-interface-02/RHO.jpg" width="250" align="center"> </td>
</tr>
</table>

<h2 id="&#x6B63;&#x6F14;&#x7ED3;&#x679C;"><a href="#&#x6B63;&#x6F14;&#x7ED3;&#x679C;" class="headerlink" title="&#x6B63;&#x6F14;&#x7ED3;&#x679C;"></a>&#x6B63;&#x6F14;&#x7ED3;&#x679C;</h2><p><img src="/2016/06/15/RF-interface-02/rf_prf.jpg" width="500" align="center/"><br><img src="/2016/06/15/RF-interface-02/rf_rainbow.jpg" width="500" align="center/"></p>
<h2 id="&#x8FD0;&#x884C;"><a href="#&#x8FD0;&#x884C;" class="headerlink" title="&#x8FD0;&#x884C;"></a>&#x8FD0;&#x884C;</h2><p>&#x4E0B;&#x8F7D;<a href="/exam/rf_interface.tgz">rf_interface</a>&#xFF0C;&#x89E3;&#x538B;&#xFF0C;&#x8FD0;&#x884C;&#x5982;&#x4E0B;&#xFF1A;<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span></span><br><span class="line">$ ./run.sh          <span class="comment">#&#x751F;&#x6210;&#x6A21;&#x578B;&#x5E76;&#x6B63;&#x6F14;</span></span><br><span class="line">$ ./PlotModels.sh   <span class="comment">#&#x7ED8;&#x5236;&#x6A21;&#x578B;&#x56FE;</span></span><br></pre></td></tr></table></figure></p>
<p>&#x6587;&#x4EF6;&#x7ED3;&#x6784;&#x5982;&#x4E0B;&#xFF1A;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">rf_interface/</span><br><span class="line">&#x251C;&#x2500;&#x2500; PlotModels.sh    #scripts</span><br><span class="line">&#x251C;&#x2500;&#x2500; run.sh</span><br><span class="line">&#x251C;&#x2500;&#x2500; rf_prf.jpg       #generated diagrams</span><br><span class="line">&#x251C;&#x2500;&#x2500; rf_rainbow.jpg</span><br><span class="line">&#x251C;&#x2500;&#x2500; rf_sac.jpg</span><br><span class="line">&#x251C;&#x2500;&#x2500; RayPath.c        #program for calculating raypath for specific seismic phase</span><br><span class="line">&#x251C;&#x2500;&#x2500; mkgrad.f         #program for generate models, from &#x2018;CPs&#x2019;</span><br><span class="line">&#x251C;&#x2500;&#x2500; CalRayPara.py    #python scripts for calculating ray parameters</span><br><span class="line">&#x251C;&#x2500;&#x2500; CalTrvTPPPS.py   #python scripts for calculating traveltimes</span><br><span class="line">&#x251C;&#x2500;&#x2500; CalTrvTPPSS.py</span><br><span class="line">&#x251C;&#x2500;&#x2500; CalTrvTPS.py</span><br><span class="line">&#x251C;&#x2500;&#x2500; CalTrvTPSSS.py</span><br><span class="line">&#x251C;&#x2500;&#x2500; Grad_Intf_RFS/   #generate RF waveform for models</span><br><span class="line">&#x2502;&#xA0;&#xA0; &#x251C;&#x2500;&#x2500; RF.0.0618.00.sac</span><br><span class="line">&#x2502;&#xA0;&#xA0; &#x251C;&#x2500;&#x2500; ...</span><br><span class="line">&#x2514;&#x2500;&#x2500; models/          #models and diagrams</span><br><span class="line">    &#x251C;&#x2500;&#x2500; Grad_Intf_hrftn96_00.model #model</span><br><span class="line">    &#x251C;&#x2500;&#x2500; Grad_Intf_hrftn96_00.ps    #single model plot and raypath</span><br><span class="line">    &#x251C;&#x2500;&#x2500; ...</span><br><span class="line">    &#x251C;&#x2500;&#x2500; RHO.jpg      #models set plot</span><br><span class="line">    &#x251C;&#x2500;&#x2500; VP.jpg</span><br><span class="line">    &#x2514;&#x2500;&#x2500; VS.jpg</span><br></pre></td></tr></table></figure></p>
<p>&#x5982;&#x679C;&#x5BF9;&#x7A0B;&#x5E8F;&#x6709;&#x4EFB;&#x4F55;&#x7591;&#x95EE;&#xFF0C;&#x6216;&#x8005;&#x53D1;&#x73B0;&#x4EFB;&#x4F55;BUG&#xFF0C;&#x8BF7;&#x7559;&#x8A00;&#xFF0C;&#x6216;&#x8005;&#x81F4;&#x4FE1;<code>wangsheng.cas@gmail.com</code>&#x3002;</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[接收函数理论与实践（一）射线参数对接收函数的影响]]></title>
      <url>http://sheng09.github.io/2016/06/15/RF-raypara-01/</url>
      <content type="html"><![CDATA[<p>&#x672C;&#x6587;&#x6B63;&#x6F14;&#x8BA1;&#x7B97;&#x4E86;&#x4E0D;&#x540C;&#x5C04;&#x7EBF;&#x53C2;&#x6570;&#xFF08;&#x9707;&#x4E2D;&#x8DDD;&#xFF09;&#x5BF9;&#x5E94;&#x7684;&#x63A5;&#x6536;&#x51FD;&#x6570;&#x6CE2;&#x5F62;&#xFF0C;&#x4EE5;&#x5BF9;&#x6BD4;&#x9707;&#x76F8;&#x968F;&#x5C04;&#x7EBF;&#x53C2;&#x6570;&#x7684;&#x53D8;&#x5316;&#x3002;&#x6B63;&#x6F14;&#x8BA1;&#x7B97;&#x548C;&#x56FE;&#x5F62;&#x7ED8;&#x5236;&#x7684;&#x7A0B;&#x5E8F;&#x53EF;&#x4EE5;&#x70B9;&#x51FB;&#x4E0B;&#x8F7D;<a href="/exam/rf_raypara.tgz">rf_raypara</a>&#x3002;&#x7A0B;&#x5E8F;&#x4F7F;&#x7528;&#x9700;&#x8981;&#x9884;&#x88C5;<a href="http://www.eas.slu.edu/eqc/eqccps.html" target="_blank" rel="external">CPS</a>&#x548C;<a href="http://gmt.soest.hawaii.edu/" target="_blank" rel="external">GMT_v4</a>&#x8F6F;&#x4EF6;&#x5305;&#x3002;<br><a id="more"></a></p>
<!-- toc -->
<ul>
<li><a href="#&#x6A21;&#x578B;&#x8BBE;&#x5B9A;">&#x6A21;&#x578B;&#x8BBE;&#x5B9A;</a></li>
<li><a href="#&#x6B63;&#x6F14;">&#x6B63;&#x6F14;</a></li>
<li><a href="#&#x6CE8;&#x610F;&#x4E8B;&#x9879;">&#x6CE8;&#x610F;&#x4E8B;&#x9879;</a></li>
</ul>
<!-- tocstop -->
<h2 id="&#x6A21;&#x578B;&#x8BBE;&#x5B9A;"><a href="#&#x6A21;&#x578B;&#x8BBE;&#x5B9A;" class="headerlink" title="&#x6A21;&#x578B;&#x8BBE;&#x5B9A;"></a>&#x6A21;&#x578B;&#x8BBE;&#x5B9A;</h2><p>&#x6784;&#x5EFA;&#x4E00;&#x7EF4;&#x5730;&#x58F3;&#x6A21;&#x578B;<code>./model.dat</code>&#x3002;&#x6A21;&#x578B;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;&#x3002;&#x5206;&#x522B;&#x7ED8;&#x5236;&#x4E86;Pp&#xFF0C;Ps&#xFF0C;PpPs&#xFF0C;PpSs+PsPs&#x9707;&#x76F8;&#x7684;&#x5C04;&#x7EBF;&#x8DEF;&#x5F84;&#x56FE;&#xFF0C;&#x5176;&#x4E2D;&#xFF0C;&#x84DD;&#x8272;&#x5B9E;&#x7EBF;&#x4EE3;&#x8868;P&#x6CE2;&#x8DEF;&#x5F84;&#xFF0C;&#x7EA2;&#x8272;&#x5B9E;&#x7EBF;&#x4EE3;&#x8868;S&#x6CE2;&#x8DEF;&#x5F84;&#x3002;<br><img src="/2016/06/15/RF-raypara-01/model.jpg" width="500" align="center"></p>
<p>&#x7ED8;&#x56FE;&#x547D;&#x4EE4;&#x5982;&#x4E0B;&#xFF1A;<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> rf_raypara/</span><br><span class="line">$ ./PlotModel.sh</span><br></pre></td></tr></table></figure></p>
<h2 id="&#x6B63;&#x6F14;"><a href="#&#x6B63;&#x6F14;" class="headerlink" title="&#x6B63;&#x6F14;"></a>&#x6B63;&#x6F14;</h2><p>&#x9009;&#x53D6;&#x4E0D;&#x540C;&#x7684;&#x5C04;&#x7EBF;&#x53C2;&#x6570;&#xFF0C;&#x8303;&#x56F4;&#x4E3A;[0.14, 1.0e-5) s/km&#xFF0C;&#x9009;&#x53D6;&#x9AD8;&#x65AF;&#x53C2;&#x6570;&#x4E3A;1.0&#xFF0C;&#x505A;&#x6B63;&#x6F14;&#x8BA1;&#x7B97;&#x3002;&#x5176;&#x4E2D;&#xFF0C;&#x5C04;&#x7EBF;&#x53C2;&#x6570;&#x8D8A;&#x5C0F;&#xFF0C;&#x4EE3;&#x8868;&#x9707;&#x4E2D;&#x8DDD;&#x8D8A;&#x5927;&#xFF0C;&#x5C04;&#x7EBF;&#x8D8A;&#x63A5;&#x8FD1;&#x5782;&#x76F4;&#x5165;&#x5C04;&#x3002;&#x8FD0;&#x884C;&#x5982;&#x4E0B;&#xFF1A;<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> rf_raypara/</span><br><span class="line">$ ./run.sh</span><br></pre></td></tr></table></figure></p>
<p>&#x5B9E;&#x9645;&#x6570;&#x636E;&#x63D0;&#x53D6;&#x63A5;&#x6536;&#x51FD;&#x6570;&#xFF0C;&#x4E00;&#x822C;&#x9009;&#x53D6;&#x9707;&#x4E2D;&#x8DDD;&#x4F4D;&#x4E8E;30&#xB0;&#xFF5E;90&#xB0;&#x8303;&#x56F4;&#x5185;&#x7684;&#x5730;&#x9707;&#x4E8B;&#x4EF6;&#x8BB0;&#x5F55;&#xFF0C;&#x5728;iasp91&#x6A21;&#x578B;&#x4E2D;&#xFF0C;&#x5BF9;&#x5E94;&#x7684;&#x5C04;&#x7EBF;&#x53C2;&#x6570;&#x4F4D;&#x4E8E;[0.04, 0.08]&#x8303;&#x56F4;&#x5185;&#x3002;<br><img src="/2016/06/15/RF-raypara-01/rp_prf.jpg" width="600" align="center"></p>
<p>&#x7531;&#x6B63;&#x6F14;&#x7ED3;&#x679C;&#xFF0C;&#x53EF;&#x4EE5;&#x53D1;&#x73B0;30&#xB0;&#xFF5E;90&#xB0;&#x9707;&#x4E2D;&#x8DDD;&#x8303;&#x56F4;&#x5185;&#xFF0C;Ps&#x9707;&#x76F8;&#x968F;&#x5C04;&#x7EBF;&#x53C2;&#x6570;&#x53D8;&#x5316;&#x4E0D;&#x5927;&#xFF0C;&#x800C;PpPs&#xFF0C;PpSs+PsPs&#x9707;&#x76F8;&#x5219;&#x5448;&#x73B0;&#x8F83;&#x4E3A;&#x660E;&#x663E;&#x7684;&#x53D8;&#x5316;&#x3002;<br>&#x9488;&#x5BF9;&#x8F6C;&#x6362;&#x6CE2;&#x9707;&#x76F8;&#x5230;&#x65F6;&#x968F;&#x5C04;&#x7EBF;&#x53C2;&#x6570;&#x7684;&#x53D8;&#x5316;&#xFF0C;&#x63A5;&#x6536;&#x51FD;&#x6570;&#x53E0;&#x52A0;&#x9700;&#x8981;&#x505A;&#x52A8;&#x6821;&#x6B63;&#xFF0C;&#x6216;&#x8005;&#x6309;&#x5C04;&#x7EBF;&#x53C2;&#x6570;&#x5206;&#x533A;&#x95F4;&#x53E0;&#x52A0;&#x3002;</p>
<h2 id="&#x6CE8;&#x610F;&#x4E8B;&#x9879;"><a href="#&#x6CE8;&#x610F;&#x4E8B;&#x9879;" class="headerlink" title="&#x6CE8;&#x610F;&#x4E8B;&#x9879;"></a>&#x6CE8;&#x610F;&#x4E8B;&#x9879;</h2><p><a href="/exam/rf_raypara.tgz">rf_raypara</a>&#x5305;&#x542B;&#x4E86;&#x672C;&#x6587;&#x9700;&#x8981;&#x7684;&#x6240;&#x6709;&#x7A0B;&#x5E8F;&#xFF0C;&#x5176;&#x4E2D;<code>Raypath</code>&#x7531;<code>Raypath.c</code>&#x7F16;&#x8BD1;&#x800C;&#x6765;&#xFF0C;&#x7F16;&#x8BD1;&#x547D;&#x4EE4;&#x5982;&#x4E0B;&#xFF1A;<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> rf_raypara/</span><br><span class="line">$ gcc Raypath.c -o Raypath -lm -O4</span><br></pre></td></tr></table></figure></p>
<p><a href="/exam/rf_raypara.tgz">rf_raypara</a>&#x7684;<code>.sh</code>,<code>.py</code>&#x811A;&#x672C;&#x9700;&#x8981;&#x6DFB;&#x52A0;&#x53EF;&#x6267;&#x884C;&#x6743;&#x9650;&#xFF0C;&#x547D;&#x4EE4;&#x5982;&#x4E0B;:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> rf_raypara/</span><br><span class="line">$ chmod +x *.py *.sh</span><br></pre></td></tr></table></figure></p>
<p>&#x5982;&#x679C;&#x5BF9;&#x7A0B;&#x5E8F;&#x6709;&#x4EFB;&#x4F55;&#x7591;&#x95EE;&#xFF0C;&#x6216;&#x8005;&#x53D1;&#x73B0;&#x4EFB;&#x4F55;BUG&#xFF0C;&#x8BF7;&#x7559;&#x8A00;&#xFF0C;&#x6216;&#x8005;&#x81F4;&#x4FE1;<code>wangsheng.cas@gmail.com</code>&#x3002;</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo博客添加返回顶部按钮]]></title>
      <url>http://sheng09.github.io/2016/06/14/add-BackToTop/</url>
      <content type="html"><![CDATA[<p>&#x4E3A;&#x535A;&#x5BA2;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;<code>&#x8FD4;&#x56DE;&#x9876;&#x90E8;</code>&#x7684;&#x6309;&#x94AE;&#xFF0C;&#x7B80;&#x5355;&#x800C;&#x53C8;&#x5B9E;&#x7528;&#x3002;<br><a id="more"></a></p>
<!-- toc -->
<ul>
<li><a href="#&#x6DFB;&#x52A0;html&#x4EE3;&#x7801;">&#x6DFB;&#x52A0;HTML&#x4EE3;&#x7801;</a></li>
<li><a href="#&#x6DFB;&#x52A0;js&#x4EE3;&#x7801;">&#x6DFB;&#x52A0;JS&#x4EE3;&#x7801;</a></li>
<li><a href="#&#x6DFB;&#x52A0;&#x5BF9;&#x4EE5;&#x4E0A;&#x4EE3;&#x7801;&#x7684;&#x5F15;&#x7528;">&#x6DFB;&#x52A0;&#x5BF9;&#x4EE5;&#x4E0A;&#x4EE3;&#x7801;&#x7684;&#x5F15;&#x7528;</a></li>
</ul>
<!-- tocstop -->
<h2 id="&#x6DFB;&#x52A0;html&#x4EE3;&#x7801;"><a href="#&#x6DFB;&#x52A0;HTML&#x4EE3;&#x7801;" class="headerlink" title="&#x6DFB;&#x52A0;HTML&#x4EE3;&#x7801;"></a>&#x6DFB;&#x52A0;HTML&#x4EE3;&#x7801;</h2><p>&#x4E3A;&#x7F51;&#x9875;&#x6DFB;&#x52A0;<code>&#x8FD4;&#x56DE;&#x9876;&#x90E8;</code>&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x5728;&#x4E3B;&#x9898;&#x76EE;&#x5F55;&#x4E0B;&#x65B0;&#x5EFA;<code>source/_partial/totop.ejs</code>&#xFF0C;&#x5199;&#x5165;&#x5185;&#x5BB9;<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;totop&quot;</span> <span class="attr">style</span>=<span class="string">&quot;position:fixed;bottom:150px;right:20px;cursor: pointer;&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">a</span> <span class="attr">title</span>=<span class="string">&quot;Back to top&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/imgs/scrollup_arrow.png&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>&#x5176;&#x4E2D;&#xFF0C;&#x9009;&#x62E9;&#x81EA;&#x5DF1;&#x6EE1;&#x610F;&#x7684;&#x56FE;&#x7247;<code>src=&quot;/imgs/scrollup_arrow.png&quot;</code>&#x8BBE;&#x7F6E;&#x6309;&#x94AE;&#xFF0C;&#x4EE5;&#x53CA;&#x4E0E;&#x7F51;&#x9875;&#x76F8;&#x886C;&#x7684;<code>style</code>&#x3002;</p>
<h2 id="&#x6DFB;&#x52A0;js&#x4EE3;&#x7801;"><a href="#&#x6DFB;&#x52A0;JS&#x4EE3;&#x7801;" class="headerlink" title="&#x6DFB;&#x52A0;JS&#x4EE3;&#x7801;"></a>&#x6DFB;&#x52A0;JS&#x4EE3;&#x7801;</h2><p>&#x4E3A;&#x6211;&#x4EEC;&#x7684;<code>&#x8FD4;&#x56DE;&#x9876;&#x90E8;</code>&#x6309;&#x94AE;&#x6DFB;&#x52A0;JS&#x4EE3;&#x7801;&#x3002;&#x5728;&#x4E3B;&#x9898;&#x76EE;&#x5F55;&#x4E0B;&#x65B0;&#x5EFA;&#x6587;&#x4EF6;<code>source/js/totop.js</code>&#xFF0C;&#x5199;&#x5165;&#x5185;&#x5BB9;<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">$</span>) </span>{</span><br><span class="line">	<span class="comment">// When to show the scroll link</span></span><br><span class="line">	<span class="comment">// higher number = scroll link appears further down the page</span></span><br><span class="line">	<span class="keyword">var</span> upperLimit = <span class="number">1000</span>;</span><br><span class="line">	<span class="comment">// Our scroll link element</span></span><br><span class="line">	<span class="keyword">var</span> scrollElem = $(<span class="string">&apos;#totop&apos;</span>);</span><br><span class="line">	<span class="comment">// Scroll to top speed</span></span><br><span class="line">	<span class="keyword">var</span> scrollSpeed = <span class="number">500</span>;</span><br><span class="line">	<span class="comment">// Show and hide the scroll to top link based on scroll position</span></span><br><span class="line">	scrollElem.hide();</span><br><span class="line">	$(<span class="built_in">window</span>).scroll(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>{</span><br><span class="line">		<span class="keyword">var</span> scrollTop = $(<span class="built_in">document</span>).scrollTop();</span><br><span class="line">		<span class="keyword">if</span> ( scrollTop &gt; upperLimit ) {</span><br><span class="line">			$(scrollElem).stop().fadeTo(<span class="number">300</span>, <span class="number">1</span>); <span class="comment">// fade back in</span></span><br><span class="line">		}<span class="keyword">else</span>{</span><br><span class="line">			$(scrollElem).stop().fadeTo(<span class="number">300</span>, <span class="number">0</span>); <span class="comment">// fade out</span></span><br><span class="line">		}</span><br><span class="line">	});</span><br><span class="line"></span><br><span class="line">	<span class="comment">// Scroll to top animation on click</span></span><br><span class="line">	$(scrollElem).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">		$(<span class="string">&apos;html, body&apos;</span>).animate({<span class="attr">scrollTop</span>:<span class="number">0</span>}, scrollSpeed); <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	});</span><br><span class="line">})(jQuery);</span><br></pre></td></tr></table></figure></p>
<h2 id="&#x6DFB;&#x52A0;&#x5BF9;&#x4EE5;&#x4E0A;&#x4EE3;&#x7801;&#x7684;&#x5F15;&#x7528;"><a href="#&#x6DFB;&#x52A0;&#x5BF9;&#x4EE5;&#x4E0A;&#x4EE3;&#x7801;&#x7684;&#x5F15;&#x7528;" class="headerlink" title="&#x6DFB;&#x52A0;&#x5BF9;&#x4EE5;&#x4E0A;&#x4EE3;&#x7801;&#x7684;&#x5F15;&#x7528;"></a>&#x6DFB;&#x52A0;&#x5BF9;&#x4EE5;&#x4E0A;&#x4EE3;&#x7801;&#x7684;&#x5F15;&#x7528;</h2><p>&#x6253;&#x5F00;&#x4E3B;&#x9898;&#x76EE;&#x5F55;&#x4E0B;&#x7684;&#x6587;&#x4EF6;<code>/layout/_partial/after_footer.ejs</code>&#xFF0C;&#x5728;&#x6587;&#x4EF6;&#x672B;&#x5C3E;&#x6DFB;&#x52A0;&#x4EE5;&#x4E0B;&#x5185;&#x5BB9;<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>(&apos;<span class="attr">totop</span>&apos;) %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;&lt;%- config.root %&gt;js/totop.js&quot;</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>&#x5B8C;&#x6210;&#xFF01;</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo博客添加Swiftype站内搜索]]></title>
      <url>http://sheng09.github.io/2016/06/14/add-swiftype-search/</url>
      <content type="html"><![CDATA[<p>Landscape&#x4E3B;&#x9898;&#x9ED8;&#x8BA4;&#x641C;&#x7D22;&#x4F4D;&#x4E8E;&#x53F3;&#x4E0A;&#x89D2;&#xFF0C;&#x4E14;&#x4F7F;&#x7528;Google&#x3002;&#x7F16;&#x8F91;&#x4E3B;&#x9898;&#xFF0C;&#x53EF;&#x4EE5;&#x5229;&#x7528;<a href="https://swiftype.com" target="_blank" rel="external">Swiftype</a>&#x642D;&#x5EFA;&#x81EA;&#x5DF1;&#x7684;&#x7AD9;&#x5185;&#x641C;&#x7D22;&#xFF0C;&#x5E76;&#x5C06;&#x641C;&#x7D22;&#x6309;&#x94AE;&#x7F6E;&#x4E8E;&#x83DC;&#x5355;&#x4E4B;&#x4E2D;&#x3002;<br><img src="/2016/06/14/add-swiftype-search/search.png" alt=""><br><a id="more"></a></p>
<!-- toc -->
<ul>
<li><a href="#&#x521B;&#x5EFA;swiftype&#x8D26;&#x53F7;">&#x521B;&#x5EFA;Swiftype&#x8D26;&#x53F7;</a></li>
<li><a href="#&#x914D;&#x7F6E;&#x4E0E;&#x83B7;&#x53D6;install-code">&#x914D;&#x7F6E;&#x4E0E;&#x83B7;&#x53D6;Install Code</a></li>
<li><a href="#hexo-landscape&#x4E3B;&#x9898;&#x914D;&#x7F6E;">Hexo-Landscape&#x4E3B;&#x9898;&#x914D;&#x7F6E;</a></li>
<li><a href="#&#x5B8C;&#x6210;">&#x5B8C;&#x6210;</a></li>
<li><a href="#&#x53C2;&#x8003;">&#x53C2;&#x8003;</a></li>
</ul>
<!-- tocstop -->
<h2 id="&#x521B;&#x5EFA;swiftype&#x8D26;&#x53F7;"><a href="#&#x521B;&#x5EFA;Swiftype&#x8D26;&#x53F7;" class="headerlink" title="&#x521B;&#x5EFA;Swiftype&#x8D26;&#x53F7;"></a>&#x521B;&#x5EFA;Swiftype&#x8D26;&#x53F7;</h2><p>&#x6CE8;&#x518C;<a href="https://swiftype.com" target="_blank" rel="external">Swiftype</a>&#x8D26;&#x53F7;&#xFF0C;&#x767B;&#x9646;&#xFF0C;&#x70B9;&#x51FB;<code>Creat A New Engine</code><br><img src="/2016/06/14/add-swiftype-search/creat_engine.png" alt=""><br>&#x8F93;&#x5165;&#x7F51;&#x5740;<br><img src="/2016/06/14/add-swiftype-search/type_url.png" alt=""><br>&#x8D77;&#x4E2A;&#x540D;&#x5B57;<br><img src="/2016/06/14/add-swiftype-search/engine_name.png" alt=""><br>&#x968F;&#x540E;&#xFF0C;&#x5F00;&#x59CB;&#x6293;&#x53D6;&#x7F51;&#x7AD9;&#x5185;&#x5BB9;&#x3002;&#x6293;&#x53D6;&#x7ED3;&#x675F;&#x4E4B;&#x540E;&#x5728;<code>Manage/Content</code>&#x4E2D;&#x67E5;&#x770B;&#x6293;&#x53D6;&#x4E86;&#x90A3;&#x4E9B;&#x5185;&#x5BB9;&#x3002;&#x4E0D;&#x60F3;&#x8981;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x53EF;&#x4EE5;&#x624B;&#x52A8;&#x5728;<code>Detials</code>&#x91CC;&#x5220;&#x9664;&#x3002;<br><img src="/2016/06/14/add-swiftype-search/manage.png" alt=""><br><img src="/2016/06/14/add-swiftype-search/content.png" alt=""></p>
<h2 id="&#x914D;&#x7F6E;&#x4E0E;&#x83B7;&#x53D6;install-code"><a href="#&#x914D;&#x7F6E;&#x4E0E;&#x83B7;&#x53D6;Install-Code" class="headerlink" title="&#x914D;&#x7F6E;&#x4E0E;&#x83B7;&#x53D6;Install Code"></a>&#x914D;&#x7F6E;&#x4E0E;&#x83B7;&#x53D6;Install Code</h2><p>&#x70B9;&#x51FB;&#x5B89;&#x88C5;&#xFF0C;&#x914D;&#x7F6E;&#x5916;&#x89C2;&#xFF0C;&#x83B7;&#x5F97;<code>Install Code</code>&#xFF0C;&#x590D;&#x5236;&#x4FDD;&#x5B58;&#x4EE5;&#x5907;&#x540E;&#x9762;&#x4F7F;&#x7528;&#x3002;&#x5916;&#x89C2;&#x9009;&#x7528;&#x9ED8;&#x8BA4;&#x5373;&#x53EF;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x70B9;&#x51FB;<code>Change Configuration</code>&#x4FEE;&#x6539;&#x3002;<br><img src="/2016/06/14/add-swiftype-search/install.png" alt=""></p>
<h2 id="hexo-landscape&#x4E3B;&#x9898;&#x914D;&#x7F6E;"><a href="#Hexo-Landscape&#x4E3B;&#x9898;&#x914D;&#x7F6E;" class="headerlink" title="Hexo-Landscape&#x4E3B;&#x9898;&#x914D;&#x7F6E;"></a>Hexo-Landscape&#x4E3B;&#x9898;&#x914D;&#x7F6E;</h2><p>&#x5728;<code>landscape</code>&#x4E3B;&#x9898;&#x4E0B;&#x7684;<code>_config.yml</code>&#x6587;&#x4EF6;&#x672B;&#x5C3E;&#x6DFB;&#x52A0;&#x5982;&#x4E0B;&#x4EE3;&#x7801;&#xFF1A;<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">swift_search:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></p>
<p>&#x5728;<code>landscape</code>&#x4E3B;&#x9898;&#x4E0B;&#x7684;<code>_config.yml</code>&#x4E2D;&#x7684;<code>menu</code>&#x90E8;&#x5206;&#x6DFB;&#x52A0;<code>Search</code>&#xFF1A;<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Header</span></span><br><span class="line"><span class="attr">menu:</span></span><br><span class="line"><span class="attr">  Home:</span> /</span><br><span class="line"><span class="attr">  Archives:</span> /archives</span><br><span class="line"><span class="attr">  Search:</span> /search</span><br></pre></td></tr></table></figure></p>
<p>&#x6253;&#x5F00;<code>landscape/layout/_partial/header.ejs</code>&#xFF0C;&#x5C06;&#x4EE5;&#x4E0B;&#x5185;&#x5BB9;<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;header-inner&quot;</span> <span class="attr">class</span>=<span class="string">&quot;inner&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">nav</span> <span class="attr">id</span>=<span class="string">&quot;main-nav&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">&quot;main-nav-toggle&quot;</span> <span class="attr">class</span>=<span class="string">&quot;nav-icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%</span> <span class="attr">for</span> (<span class="attr">var</span> <span class="attr">i</span> <span class="attr">in</span> <span class="attr">theme.menu</span>){ %&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;main-nav-link&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&lt;%- url_for(theme.menu[i]) %&gt;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">i</span> %&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%</span> } %&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">nav</span> <span class="attr">id</span>=<span class="string">&quot;sub-nav&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">theme.rss</span>){ %&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">&quot;nav-rss-link&quot;</span> <span class="attr">class</span>=<span class="string">&quot;nav-icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&lt;%- theme.rss %&gt;&quot;</span> <span class="attr">title</span>=<span class="string">&quot;&lt;%= __(&apos;rss_feed&apos;) %&gt;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%</span> } %&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">&quot;nav-search-btn&quot;</span> <span class="attr">class</span>=<span class="string">&quot;nav-icon&quot;</span> <span class="attr">title</span>=<span class="string">&quot;&lt;%= __(&apos;search&apos;) %&gt;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;search-form-wrap&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%-</span> <span class="attr">search_form</span>({<span class="attr">button:</span> &apos;&amp;#<span class="attr">xF002</span>;&apos;}) %&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  ...</span><br></pre></td></tr></table></figure></p>
<p>&#x4FEE;&#x6539;&#x4E3A;&#xFF1A;<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;header-inner&quot;</span> <span class="attr">class</span>=<span class="string">&quot;inner&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">nav</span> <span class="attr">id</span>=<span class="string">&quot;main-nav&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">&quot;main-nav-toggle&quot;</span> <span class="attr">class</span>=<span class="string">&quot;nav-icon&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%</span> <span class="attr">for</span> (<span class="attr">var</span> <span class="attr">i</span> <span class="attr">in</span> <span class="attr">theme.menu</span>){ %&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">i</span> != <span class="string">&quot;Search&quot;</span>){ %&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;main-nav-link&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&lt;%- url_for(theme.menu[i]) %&gt;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">i</span> %&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">%</span> } <span class="attr">else</span> {%&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;main-nav-link st-search-show-outputs&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&lt;%- url_for(theme.menu[i]) %&gt;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">i</span> %&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">%</span> } %&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%</span> } %&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">nav</span> <span class="attr">id</span>=<span class="string">&quot;sub-nav&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">theme.rss</span>){ %&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">&quot;nav-rss-link&quot;</span> <span class="attr">class</span>=<span class="string">&quot;nav-icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&lt;%- theme.rss %&gt;&quot;</span> <span class="attr">title</span>=<span class="string">&quot;&lt;%= __(&apos;rss_feed&apos;) %&gt;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%</span> } %&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">theme.search_icon</span>){ %&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">&quot;nav-search-btn&quot;</span> <span class="attr">class</span>=<span class="string">&quot;nav-icon st-search-show-outputs&quot;</span> <span class="attr">title</span>=<span class="string">&quot;&lt;%= </span><br><span class="line">    __(&apos;search&apos;) %&gt;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%</span> } %&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>
<p>&#x5728;<code>landscape/layout/_partial/</code>&#x76EE;&#x5F55;&#x4E0B;&#x521B;&#x5EFA;&#x6587;&#x4EF6;<code>search.ejs</code>&#xFF0C;&#x5199;&#x5165;&#x4EE5;&#x4E0B;&#x5185;&#x5BB9;&#x3002;&#x6CE8;&#x610F;&#xFF0C;&#x5176;&#x4E2D;&#x7684;<code>Install code</code>&#x811A;&#x672C;&#x4EE3;&#x7801;&#x4E3A;&#x81EA;swiftype&#x83B7;&#x53D6;&#x7684;&#x90A3;&#x6BB5;&#x3002;<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span>(<span class="attr">theme.swift_search.enable</span>) { %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>  <span class="attr">id</span>=<span class="string">&quot;container&quot;</span> <span class="attr">class</span>=<span class="string">&quot;page&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;st-results-container&quot;</span> <span class="attr">class</span>=<span class="string">&quot;st-search-container&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width:80%&quot;</span>&gt;</span> Searching... Please Wait<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined">.st-result-text {</span><br><span class="line">background: #fafafa;</span><br><span class="line">display: block;</span><br><span class="line">border-left: 0.5em solid #ccc;</span><br><span class="line">-webkit-transition: border-left 0.45s;</span><br><span class="line">-moz-transition: border-left 0.45s;</span><br><span class="line">-o-transition: border-left 0.45s;</span><br><span class="line">-ms-transition: border-left 0.45s;</span><br><span class="line">transition: border-left 0.45s;</span><br><span class="line">padding: 0.5em;</span><br><span class="line">}</span><br><span class="line">@media only screen and (min-width: 768px) {</span><br><span class="line">.st-result-text {</span><br><span class="line">  padding: 1em;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">.st-result-text:hover {</span><br><span class="line">border-left: 0.5em solid #ea6753;</span><br><span class="line">}</span><br><span class="line">.st-result-text h3 a{</span><br><span class="line">color: #2ca6cb;</span><br><span class="line">line-height: 1.5;</span><br><span class="line">font-size: 22px;</span><br><span class="line">}</span><br><span class="line">.st-snippet em {</span><br><span class="line">font-weight: bold;</span><br><span class="line">color: #ea6753;</span><br><span class="line">}</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">&#xFF01;--&#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x8981;&#x6362;&#x6210;swiftype&#x7684;install</span> <span class="attr">code--</span>&#xFF01;&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span><br><span class="line">  (<span class="function"><span class="keyword">function</span>(<span class="params">w,d,t,u,n,s,e</span>)</span>{w[<span class="string">&apos;SwiftypeObject&apos;</span>]=n;w[n]=w[n]||<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">  (w[n].q=w[n].q||[]).push(<span class="built_in">arguments</span>);};s=d.createElement(t);</span><br><span class="line">  e=d.getElementsByTagName(t)[<span class="number">0</span>];s.async=<span class="number">1</span>;s.src=u;e.parentNode.insertBefore(s,e);</span><br><span class="line">  })(<span class="built_in">window</span>,<span class="built_in">document</span>,<span class="string">&apos;script&apos;</span>,<span class="string">&apos;//s.swiftypecdn.com/install/v2/st.js&apos;</span>,<span class="string">&apos;_st&apos;</span>);</span><br><span class="line">  </span><br><span class="line">  _st(<span class="string">&apos;install&apos;</span>,<span class="string">&apos;4LRsoUZsCDnx-aTgg_f5&apos;</span>,<span class="string">&apos;2.0.0&apos;</span>);</span><br><span class="line"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> } %&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>&#x6253;&#x5F00;<code>landscape/layout/_partial/footer.ejs</code>&#xFF0C;&#x5728;&#x6700;&#x540E;&#x4E00;&#x4E2A;<code>&lt;/div&gt;</code>&#x524D;&#xFF0C;&#x52A0;&#x5165;&#x540C;&#x6837;&#x7684;<code>Install Code</code>&#x3002;<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">footer</span> <span class="attr">id</span>=<span class="string">&quot;footer&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">theme.sidebar</span> === <span class="string">&apos;bottom&apos;</span>){ %&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>(&apos;<span class="attr">_partial</span>/<span class="attr">sidebar</span>&apos;) %&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">%</span> } %&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;outer&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;footer-info&quot;</span> <span class="attr">class</span>=<span class="string">&quot;inner&quot;</span>&gt;</span></span><br><span class="line">      &amp;copy; <span class="tag">&lt;<span class="name">%=</span> <span class="attr">date</span>(<span class="attr">new</span> <span class="attr">Date</span>(), &apos;<span class="attr">YYYY</span>&apos;) %&gt;</span> <span class="tag">&lt;<span class="name">%=</span> <span class="attr">config.author</span> || <span class="attr">config.title</span> %&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">%=</span> <span class="attr">__</span>(&apos;<span class="attr">powered_by</span>&apos;) %&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://hexo.io/&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>Hexo<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span><br><span class="line">      (<span class="function"><span class="keyword">function</span>(<span class="params">w,d,t,u,n,s,e</span>)</span>{w[<span class="string">&apos;SwiftypeObject&apos;</span>]=n;w[n]=w[n]||<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">      (w[n].q=w[n].q||[]).push(<span class="built_in">arguments</span>);};s=d.createElement(t);</span><br><span class="line">      e=d.getElementsByTagName(t)[<span class="number">0</span>];s.async=<span class="number">1</span>;s.src=u;e.parentNode.insertBefore(s,e);</span><br><span class="line">      })(<span class="built_in">window</span>,<span class="built_in">document</span>,<span class="string">&apos;script&apos;</span>,<span class="string">&apos;//s.swiftypecdn.com/install/v2/st.js&apos;</span>,<span class="string">&apos;_st&apos;</span>);</span><br><span class="line">      </span><br><span class="line">      _st(<span class="string">&apos;install&apos;</span>,<span class="string">&apos;4LRsoUZsCDnx-aTgg_f5&apos;</span>,<span class="string">&apos;2.0.0&apos;</span>);</span><br><span class="line">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="&#x5B8C;&#x6210;"><a href="#&#x5B8C;&#x6210;" class="headerlink" title="&#x5B8C;&#x6210;"></a>&#x5B8C;&#x6210;</h2><p>&#x6240;&#x6709;&#x64CD;&#x4F5C;&#x5DF2;&#x7ECF;&#x5B8C;&#x6210;&#xFF0C;<code>hexo g</code>&#x5E76;<code>hexo s</code>&#x67E5;&#x770B;&#x7ED3;&#x679C;&#xFF0C;&#x6700;&#x540E;<code>hexo d</code>&#x90E8;&#x7F72;&#x4E00;&#x4E0B;&#x5427;&#x3002;</p>
<h2 id="&#x53C2;&#x8003;"><a href="#&#x53C2;&#x8003;" class="headerlink" title="&#x53C2;&#x8003;"></a>&#x53C2;&#x8003;</h2><p>&#x5229;&#x7528;swiftype&#x4E3A;hexo&#x6DFB;&#x52A0;&#x7AD9;&#x5185;&#x641C;&#x7D22;v2.0<br><a href="http://www.jerryfu.net/post/search-engine-for-hexo-with-swiftype-v2.html" target="_blank" rel="external">http://www.jerryfu.net/post/search-engine-for-hexo-with-swiftype-v2.html</a><br>&#x70B9;&#x51FB;&#x5F39;&#x51FA;&#x641C;&#x7D22;&#x6846;&#x7684;&#x4E8B;&#x4EF6;&#x914D;&#x7F6E;<br><a href="http://blog.cloudyu.me/2015/blog-search/" target="_blank" rel="external">http://blog.cloudyu.me/2015/blog-search/</a><br>&#x53BB;&#x6389;&#x53F3;&#x4E0B;&#x89D2;&#x4E11;&#x4E11;&#x7684;Swiftype&#x7AD9;&#x5185;&#x641C;&#x7D22;&#x6309;&#x94AE;<br><a href="http://www.pangjian.info/2015/03/24/site-search-with-swiftype/#stq=&amp;stp=0" target="_blank" rel="external">http://www.pangjian.info/2015/03/24/site-search-with-swiftype/#stq=&amp;stp=0</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[利用Wiley Online Library获取最新的期刊杂志内容]]></title>
      <url>http://sheng09.github.io/2016/06/11/configure-wiley-email-alert/</url>
      <content type="html"><![CDATA[<p>&#x505A;&#x4E3A;&#x4E00;&#x540D;&#x79D1;&#x5B66;&#x7814;&#x7A76;&#x4ECE;&#x4E1A;&#x8005;&#xFF0C;&#x9605;&#x8BFB;&#x671F;&#x520A;&#x6587;&#x7AE0;&#x662F;&#x4E0D;&#x65AD;&#x5B66;&#x4E60;&#xFF0C;&#x63D0;&#x5347;&#x81EA;&#x6211;&#x5FC5;&#x4E0D;&#x53EF;&#x5C11;&#x7684;&#x73AF;&#x8282;&#x3002;&#x9605;&#x8BFB;&#x6700;&#x524D;&#x6CBF;&#x7684;&#x79D1;&#x7814;&#x6587;&#x7AE0;&#xFF0C;&#x53EF;&#x4EE5;&#x8BA9;&#x4F60;&#x7D27;&#x8DDF;&#x7814;&#x7A76;&#x6F6E;&#x6D41;&#xFF0C;&#x5B66;&#x4E60;&#x6700;&#x65B0;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x53D1;&#x73B0;&#x6700;&#x9700;&#x8981;&#x89E3;&#x51B3;&#x7684;&#x79D1;&#x5B66;&#x95EE;&#x9898;&#x548C;&#x6280;&#x672F;&#x63A2;&#x7D22;&#x3002;&#x751A;&#x81F3;&#xFF0C;&#x9605;&#x8BFB;&#x6587;&#x732E;&#x662F;&#x548C;&#x4F5C;&#x8005;&#x5EFA;&#x7ACB;&#x4EA4;&#x6D41;&#x8054;&#x7CFB;&#x6700;&#x4E3A;&#x76F4;&#x63A5;&#x7684;&#x57AB;&#x811A;&#x77F3;&#x3002;&#x5982;&#x679C;&#x4F60;&#x5DF2;&#x7ECF;&#x597D;&#x4E45;&#x6CA1;&#x6709;&#x9605;&#x8BFB;&#x6700;&#x65B0;&#x7684;&#x6587;&#x732E;&#x4E86;&#xFF0C;&#x90A3;&#x4E48;&#x4F60;&#x5C06;&#x6781;&#x6709;&#x53EF;&#x80FD;&#x9047;&#x5230;&#x5F88;&#x5927;&#x7684;&#x9EBB;&#x70E6;&#x3002;&#x5229;&#x7528;&#x7F51;&#x7EDC;&#x8D44;&#x6E90;&#xFF0C;&#x53EF;&#x4EE5;&#x5B9E;&#x65F6;&#x83B7;&#x53D6;&#x6700;&#x65B0;&#x7684;&#x7814;&#x7A76;&#x8FDB;&#x5C55;&#x548C;&#x6210;&#x679C;&#x3002;&#x4F46;&#x662F;&#xFF0C;&#x9762;&#x5BF9;&#x6D77;&#x91CF;&#x7684;&#x671F;&#x520A;&#x6742;&#x5FD7;&#xFF0C;&#x624B;&#x52A8;&#x67E5;&#x770B;&#x6700;&#x65B0;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x5F88;&#x5BB9;&#x6613;&#x8BA9;&#x4EBA;&#x5BF9;&#x79D1;&#x7814;&#x5931;&#x53BB;&#x5174;&#x8DA3;&#x548C;&#x52A8;&#x529B;&#xFF0C;&#x7279;&#x522B;&#x9047;&#x5230;&#x4E0D;&#x53EF;&#x6297;&#x9006;&#x7684;&#x7F51;&#x7EDC;&#x6545;&#x969C;&#x3002;&#x503C;&#x5F97;&#x5E86;&#x5E78;&#x7684;&#x662F;&#xFF0C;&#x5404;&#x5927;&#x51FA;&#x7248;&#x5546;&#x4EE5;&#x53CA;&#x4E0D;&#x540C;&#x7684;&#x79D1;&#x5B66;&#x7EC4;&#x7EC7;&#x673A;&#x6784;&#x90FD;&#x63D0;&#x4F9B;&#x4E86;&#x7528;&#x6237;&#x63D0;&#x9192;&#x529F;&#x80FD;&#xFF0C;&#x5B9E;&#x65F6;&#x5C06;&#x6700;&#x65B0;&#x7684;&#x7814;&#x7A76;&#x52A8;&#x6001;&#x6574;&#x7406;&#x597D;&#x53D1;&#x9001;&#x81F3;&#x7528;&#x6237;&#x90AE;&#x7BB1;&#x3002;&#x672C;&#x6587;&#x5C06;&#x4ECB;&#x7ECD;&#x5982;&#x4F55;&#x5229;&#x7528;Wiley&#x5728;&#x7EBF;&#x56FE;&#x4E66;&#x9986;&#x83B7;&#x53D6;&#x6700;&#x65B0;&#x7684;&#x7814;&#x7A76;&#x5185;&#x5BB9;&#x63D0;&#x9192;&#x3002;<br><a id="more"></a></p>
<h2 id="&#x6CE8;&#x518C;"><a href="#&#x6CE8;&#x518C;" class="headerlink" title="&#x6CE8;&#x518C;"></a>&#x6CE8;&#x518C;</h2><p>&#x9996;&#x5148;&#xFF0C;&#x4F60;&#x9700;&#x8981;&#x7528;&#x4E8E;&#x4E00;&#x4E2A;<a href="http://onlinelibrary.wiley.com/" target="_blank" rel="external">Wiley Online Library</a>&#x8D26;&#x6237;&#xFF0C;&#x8D26;&#x6237;&#x90AE;&#x7BB1;&#x9009;&#x62E9;&#x5E38;&#x7528;&#x7684;&#x90AE;&#x7BB1;&#xFF0C;&#x4EE5;&#x65B9;&#x4FBF;&#x63A5;&#x6536;&#x67E5;&#x770B;&#x63D0;&#x9192;&#x5185;&#x5BB9;&#x3002;&#x5982;&#x679C;&#x4F60;&#x5DF2;&#x7ECF;&#x62E5;&#x6709;&#x4E00;&#x4E2A;&#x8D26;&#x6237;&#xFF0C;&#x90A3;&#x4E48;&#x8BF7;&#x5FFD;&#x7565;&#x4EE5;&#x4E0B;&#x6CE8;&#x518C;&#x5185;&#x5BB9;&#x3002;<br><img src="/2016/06/11/configure-wiley-email-alert/log-in.png" alt=""></p>
<p>&#x586B;&#x5199;&#x4E2A;&#x4EBA;&#x4FE1;&#x606F;&#xFF1A;<br><img src="/2016/06/11/configure-wiley-email-alert/registration.png" alt=""></p>
<h2 id="&#x9009;&#x62E9;&#x671F;&#x520A;"><a href="#&#x9009;&#x62E9;&#x671F;&#x520A;" class="headerlink" title="&#x9009;&#x62E9;&#x671F;&#x520A;"></a>&#x9009;&#x62E9;&#x671F;&#x520A;</h2><p>&#x5B8C;&#x6210;Wiley Online Library&#x6CE8;&#x518C;&#x4E4B;&#x540E;&#xFF0C;&#x767B;&#x9646;&#x81EA;&#x5DF1;&#x7684;&#x8D26;&#x53F7;&#x3002;&#x5728;&#x4E3B;&#x9875;&#x70B9;&#x51FB;<a href="http://onlinelibrary.wiley.com/browse/subjects" target="_blank" rel="external">Browse By Subject</a>&#xFF1A;<br><img src="/2016/06/11/configure-wiley-email-alert/browse-by-subject.png" alt=""><br>&#x9009;&#x62E9;&#x81EA;&#x5DF1;&#x7684;&#x5B66;&#x79D1;&#x9886;&#x57DF;&#xFF1A;<br><img src="/2016/06/11/configure-wiley-email-alert/browse-by-subject-2.png" alt=""><br>&#x67E5;&#x770B;&#x5B66;&#x79D1;&#x5185;&#x6240;&#x6709;&#x8D44;&#x6E90;&#x5217;&#x8868;&#xFF1A;<br><img src="/2016/06/11/configure-wiley-email-alert/browse-by-subject-3.png" alt=""><br>&#x5728;&#x8D44;&#x6E90;&#x5217;&#x8868;&#x4E2D;&#xFF0C;&#x9996;&#x5148;&#x9009;&#x62E9;&#x6211;&#x4EEC;&#x8D44;&#x6E90;&#x7C7B;&#x578B;&#x4E3A;Journals&#xFF0C;&#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x7684;&#x90AE;&#x4EF6;&#x63D0;&#x9192;&#x5185;&#x5BB9;&#x662F;&#x6700;&#x65B0;&#x53D1;&#x8868;&#x7684;&#x6587;&#x7AE0;&#xFF1B;&#x968F;&#x540E;&#xFF0C;&#x52FE;&#x9009;&#x81EA;&#x5DF1;&#x9700;&#x8981;&#x7684;&#x671F;&#x520A;&#xFF1B;&#x6700;&#x540E;&#xFF0C;&#x70B9;&#x51FB;<code>Get email alerts</code>&#x3002;&#x81F3;&#x6B64;&#xFF0C;Wiley Online Library&#x5C31;&#x4F1A;&#x5C06;&#x6240;&#x9009;&#x671F;&#x520A;&#x7684;&#x66F4;&#x65B0;&#x5185;&#x5BB9;&#x6574;&#x7406;&#x597D;&#xFF0C;&#x53D1;&#x9001;&#x5230;&#x8D26;&#x6237;&#x6CE8;&#x518C;&#x90AE;&#x7BB1;&#x3002;<br><img src="/2016/06/11/configure-wiley-email-alert/choose-journals.png" alt=""></p>
<h2 id="&#x8BBE;&#x7F6E;&#x63D0;&#x9192;"><a href="#&#x8BBE;&#x7F6E;&#x63D0;&#x9192;" class="headerlink" title="&#x8BBE;&#x7F6E;&#x63D0;&#x9192;"></a>&#x8BBE;&#x7F6E;&#x63D0;&#x9192;</h2><p>&#x8FDB;&#x5165;<code>My Profile</code>&#xFF0C;&#x70B9;&#x51FB;<code>Alert Manager</code>&#xFF0C;&#x53EF;&#x4EE5;&#x8BBE;&#x7F6E;&#x63A5;&#x6536;&#x63D0;&#x9192;&#x7684;&#x90AE;&#x7BB1;&#x5730;&#x5740;&#xFF0C;&#x63D0;&#x9192;&#x683C;&#x5F0F;(Text&#x6587;&#x672C;&#x8FD8;&#x662F;Html&#x7F51;&#x9875;)&#xFF0C;&#x63D0;&#x9192;&#x65F6;&#x95F4;&#x95F4;&#x9694;&#x3002;&#x6B64;&#x5916;&#xFF0C;&#x70B9;&#x51FB;&#x671F;&#x520A;&#x5217;&#x8868;&#x540E;&#x7684;<code>Remove content alert</code>&#x53EF;&#x4EE5;&#x5173;&#x95ED;&#x5BF9;&#x5E94;&#x671F;&#x520A;&#x7684;&#x63D0;&#x9192;&#x3002;<br><img src="/2016/06/11/configure-wiley-email-alert/my-profile.png" alt=""><br><img src="/2016/06/11/configure-wiley-email-alert/alert-manager.png" alt=""><br>&#x5728;<code>Saved Publications</code>&#x4E2D;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x81EA;&#x5DF1;&#x52FE;&#x9009;&#x7684;&#x6240;&#x6709;&#x671F;&#x520A;&#xFF0C;&#x53EF;&#x4EE5;&#x52FE;&#x9009;&#x4E0D;&#x9700;&#x8981;&#x63D0;&#x9192;&#x7684;&#x671F;&#x520A;&#xFF0C;&#x70B9;&#x51FB;<code>Delete selected publications</code>&#x4E00;&#x6B21;&#x6027;&#x6E05;&#x7406;&#x3002;<br><img src="/2016/06/11/configure-wiley-email-alert/saved-publications.png" alt=""></p>
<h2 id="apple&#x7528;&#x6237;"><a href="#Apple&#x7528;&#x6237;" class="headerlink" title="Apple&#x7528;&#x6237;"></a>Apple&#x7528;&#x6237;</h2><p>Wiley&#x5F00;&#x53D1;&#x4E86;&#x79FB;&#x52A8;&#x5BA2;&#x6237;&#x7AEF;&#xFF0C;&#x6DB5;&#x76D6;&#x4E86;&#x5927;&#x90E8;&#x5206;&#x7684;&#x671F;&#x520A;&#x6742;&#x5FD7;&#x3002;&#x5982;&#x679C;&#x4F60;&#x662F;Apple&#x7528;&#x6237;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;<a href="https://itunes.apple.com/us/developer/wiley-publishing/id334132751?iPhoneSoftwarePage=6#iPhoneSoftwarePage" target="_blank" rel="external">Appstore</a>&#x4E2D;&#x641C;&#x7D22;&#x671F;&#x520A;&#x540D;&#xFF0C;&#x4E0B;&#x8F7D;&#x4E4B;&#x540E;&#x767B;&#x9646;Wiley Online Library&#x8D26;&#x53F7;&#xFF0C;&#x5E76;&#x5F00;&#x542F;&#x63D0;&#x9192;&#x3002;</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linear Deconvolution]]></title>
      <url>http://sheng09.github.io/2016/06/09/deconvolution/</url>
      <content type="html"><![CDATA[<p>Deconvolution problem is a subset of inversion, in which observed data is deconvolved to reconstruct the model given the blurring function or source wavelet. Items of inversion including &#x201C;resolution&#x201D;, &#x201C;error&#x201D;, &#x201C;regularization&#x201D;, et. al also apply to deconvolution. Besides, deconvolution always associates transformation between time domain and frequency domain. Thus, principles inherited from digital singal processing apply to deconvolution. In other words, deconvolution is very complex, though massive codes and programs could output a time series in a blink of eye given no matter what kind of data input. Without comprehension of deconvolution and inversion, programs could be misused to provide wrong results. This blog attempts to theories and implementations of deconvolution.</p>
<a id="more"></a>
<!-- toc -->
<ul>
<li><a href="#convolution">Convolution</a></li>
<li><a href="#deconvolution-in-frequency-domain">Deconvolution in frequency domain</a></li>
<li><a href="#iterative-deconvolution-in-time-domain">Iterative deconvolution in time domain</a></li>
<li><a href="#error-and-resolution-estimation">Error and resolution estimation</a></li>
<li><a href="#implementations">Implementations</a></li>
</ul>
<!-- tocstop -->
<h2 id="convolution"><a href="#Convolution" class="headerlink" title="Convolution"></a>Convolution</h2><p>Convolution in time domain corresponds to multiplication in frequency domain:</p>
<span>$$\begin{eqnarray}
r(t) &amp; = &amp; m(t) \otimes s(t) \label{convo_time}\\
R(\omega) &amp; = &amp; M(\omega) S(\omega) \label{convo_freq}
\end{eqnarray}$$</span><!-- Has MathJax -->
<p>in $\eqref{convo_time}$, $s(t)$ is the source wavelet or blurring function, $r(t)$ is the observed data, and $m(t)$ is the impulse repsonse of the model. Theoretically, given $s(t)$ and $r(t)$, $m(t)$ could be calculated by division according to $\eqref{convo_freq}$</p>
<script type="math/tex; mode=display">
\begin{equation}
m(t) = IFT \left\{\frac{R(\omega)}{S(\omega)}\right\} \label{decon_div}
\end{equation}</script><p>However, $\eqref{decon_div}$ always present problematic results because observations $r(t)$ contain noise, and some values of $s(\omega)$ approach zero, which result in instablities in the division.</p>
<h2 id="deconvolution-in-frequency-domain"><a href="#Deconvolution-in-frequency-domain" class="headerlink" title="Deconvolution in frequency domain"></a>Deconvolution in frequency domain</h2><p>Considering noise $n(t)$, $\eqref{convo_time}$ should be:</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
r(t) & = & m(t) \otimes s(t) + n(t) \label{convo_time_real}\\
R(\omega) & = & M(\omega) S(\omega) + N(\omega) \label{convo_freq_real}
\end{eqnarray}</script><p>In deconvolution, we aim to find a time series $s&#x2019;(t)$, which acts like the inverse of the source wavelet or blurring function $s(t)$. So the convolution of $s&#x2019;(t)$ and $s(t)$ will produces a desired resolution function $h(t)$, being impulse function theoretically.</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
r(t) \otimes s'(t) & = & m(t) \otimes s(t) \otimes s'(t) + n(t) \otimes s'(t) \label{conv_with_s_inv_time}\\
R(\omega) S'(\omega) & = & M(\omega) S(\omega) S'(\omega) + N(\omega) S'(\omega) \label{conv_with_s_inv_freq}
\end{eqnarray}</script><p>Let us define:</p>
<script type="math/tex; mode=display">
\begin{equation}
  \begin{cases}
    \hat{m}(t) & = & r(t) \otimes s'(t) \\
    res(t) & = & s(t) \otimes s'(t) \\
    err(t) & = & n(t) \otimes s'(t)
  \end{cases}
\end{equation}</script><p>$\hat{m}(t)$ is the calculated model, $res(t)$ is the resolution function, and $err(t)$ is the model error:</p>
<script type="math/tex; mode=display">
\begin{equation}
  \hat{m}(t) = m(t) \otimes res(t) + err(t)
\end{equation}</script><p>In deconvolution, the real resolution function $res(t)$ should approximates desired one $h(t)$, and model error $err(t)$ should approximates zero. Trade-off exists for these two approaches. Thus, an objective function is built:</p>
<script type="math/tex; mode=display">
\begin{equation}
  obj = \int_{-\infty}^{+\infty}\{a|res(t)-h(t)|^2+(1-a)|err(t)|^2\}dt \label{obj_func}
\end{equation}</script><p>according to Parseval&#x2019;s theorem, in the frequency domain, $\eqref{obj_func}$ has the form of:</p>
<script type="math/tex; mode=display">
\begin{equation}
  obj =  a|S(\omega)S'(\omega) - h(\omega)|^2 + (1-a) | N(\omega)S'(\omega) |^2 \label{obj_func_freq}
\end{equation}</script><p>When objective function approach the minimal value, the derivative of $obj$ to $S&#x2019;(\omega)$ should be zero. Corresponding $S&#x2019;(\omega)$ is :</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
  S'(\omega) & = & \frac{S^*(\omega)h(\omega)}{S(\omega)S^*(\omega)+b|N(\omega)|^2} \\
  b & = & \frac{1-a}{a}
\end{eqnarray}</script><p>Choose gaussian function as desired resolution function, and estimate the noise $|N(\omega)|^2$ on the basis of observation and signal to noise energy ratio $\nu$.</p>
<script type="math/tex; mode=display">
\begin{equation}
  \hat{m}(t) = IFT\left\{\frac{R(\omega)S^*(\omega)}{S(\omega)S^*(\omega)+c\sigma_0^2}e^{-\frac{\omega^2}{4\alpha^2}} \right\} \label{mod}
\end{equation}</script><p>$\sigma_0^2$ is the self-correlation of $S(t)$, and $c = b \nu$.</p>
<p>From the viewpoint to regularization, an item of $c\sigma_0^2$ is added to the denominator. So instablity result from the near-zero value of $S(\omega)S^*(\omega)$ is reduced.</p>
<p>Likewise, we could build the solver equation of:</p>
<script type="math/tex; mode=display">
\begin{equation}
  \hat{m}(t) = IFT\left\{\frac{R(\omega)S^*(\omega)}{ max[S(\omega)S^*(\omega), c\sigma_0^2] }e^{-\frac{\omega^2}{4\alpha^2}} \right\} \label{mod_water_level}
\end{equation}</script><p>which is the water-level regularization deconvolution.</p>
<h2 id="iterative-deconvolution-in-time-domain"><a href="#Iterative-deconvolution-in-time-domain" class="headerlink" title="Iterative deconvolution in time domain"></a>Iterative deconvolution in time domain</h2><p>For time series, the model $m(t)$ is superposition of impulse functions:</p>
<script type="math/tex; mode=display">
\begin{equation}
  \hat{m}(t) = \sum_{i} m_i h(t-t_i) \label{superposition}
\end{equation}</script><p>To determine $m_1$ and $t_1$, the error $\eqref{err_iter}$ should approach its minimal value.</p>
<script type="math/tex; mode=display">
\begin{equation}
  \Delta_1 = \int_{-\infty}^{+\infty}\{r(t) - m_1 h(t-t_1) \otimes s(t)\}^2dt \label{err_iter}
\end{equation}</script><p>Corresponding $m_1$ and $\Delta_1$ could be calculated assuming $ \frac{\partial \Delta_1} {\partial m_1} = 0 $:</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
  m_1 & = & \frac { \int_{-\infty}^{+\infty} r(t)s(t-t_1)dt } { \int_{-\infty}^{+\infty} s^2(t)dt} \\
  \Delta_1 & = & \frac { \int_{-\infty}^{+\infty}r^2(t)dt -[\int_{-\infty}^{+\infty}r(t)s(t-t_1)dt ]^2} {\int_{-\infty}^{+\infty}s^2(t)dt}
\end{eqnarray}</script><p>Obviously, $[\int_{-\infty}^{+\infty}r(t)s(t-t_1)dt ]^2 $ should approach its maximal value so that the error $\Delta_1 $ approach its minimum. Under this criterion, $t_1$ could be acquired by traversal.<br>After obtaining $m_1$ and $t_1$, we subtract $m_1h(t-t_1)$ from $r(t)$ and get residual time series:</p>
<script type="math/tex; mode=display">
\begin{equation}
  r'(t) = r(t) - m_1h(t-t_1)
\end{equation}</script><p>Likewise, $m_2$ and $t_2$ could be obtain by applying above procedure to $r&#x2019;(t)$. This kind of procedure is iterated for N times until no more significant decrease in the residual time series occurs. The model could be applying a gausssian function to $\eqref{superposition}$ with $ m_i$ and $t_i(i=1,2,&#x2026;N)$. Besides, synthetic observation and error are:</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
  \hat{r} & = & \sum_{i=1}^N m_i s(t-t_i) \\
  \Delta_N & = & \int_{-\infty}^{+\infty} [r(t) - \hat{r}(t)]^2 dt
\end{eqnarray}</script><h2 id="error-and-resolution-estimation"><a href="#Error-and-resolution-estimation" class="headerlink" title="Error and resolution estimation"></a>Error and resolution estimation</h2><p>It is important to evaluate the results of deconvolution, thus to choose the optimal regularization factor $c$ in $ \eqref{mod} $, $\eqref{mod_water_level}$, $N$ for iteration deconvolution, and gaussian factor.<br>First, to determine the error of our result, the calculated model $\hat{m}{t}$ is convolved with $s(t)$, and then compared with observation $r(t)$:</p>
<script type="math/tex; mode=display">
\begin{equation}
  \Delta = \int_{-\infty}^{+\infty} r(t) - \hat(m)(t) \otimes s(t) dt
\end{equation}</script><p>Second, for resolution estimation. A simply way to obtain resolution function is to deconvolve $s(t)$ from itself. Since we desire a gaussian shape resolution function in derivations, the calculated one will approximates gaussian function.<br>Resolution estimation for $eqref{mod}$ and $\eqref{mod_water_level}$:</p>
<script type="math/tex; mode=display">
\begin{eqnarray}
  \widehat{res}(t) & = & IFT\left\{\frac{S(\omega)S^*(\omega)}{S(\omega)S^*(\omega)+c\sigma_0^2}e^{-\frac{\omega^2}{4\alpha^2}} \right\} \label{res} \\

  \widehat{res}(t) & = & IFT\left\{\frac{S(\omega)S^*(\omega)}{ max[S(\omega)S^*(\omega), c\sigma_0^2] }e^{-\frac{\omega^2}{4\alpha^2}} \right\} \label{res_water_level}
\end{eqnarray}</script><h2 id="implementations"><a href="#Implementations" class="headerlink" title="Implementations"></a>Implementations</h2><p>You could design your codes according to deconvolution equtions. <a href="http://www.eas.slu.edu/eqc/eqccps.html" target="_blank" rel="external">CPS</a> provide programs of <code>sacdecon</code> for deconvolution in frequency domain, and <code>saciterd</code> for iteration deconvolution in time domain. Besides, package of <a href="http://www.eas.slu.edu/People/LZhu/downloads/hk1.3.tar" target="_blank" rel="external">hk</a> provides <code>decon</code> and <code>iter_decon</code> as well. These programs differs slighty in the output. To find their usages details, please vist package homepage or <a href="">XX</a>.<br>You could find examples of deconvolution for receiver functions at <a href="">XX</a>.</p>
<h2 id="reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[利用总控Makefile一次性编译所有子程序包]]></title>
      <url>http://sheng09.github.io/2016/06/09/Makefile-compileSubs/</url>
      <content type="html"><![CDATA[<p>&#x5F53;&#x4E00;&#x4E2A;&#x5927;&#x7684;&#x9879;&#x76EE;&#x7531;&#x5F88;&#x591A;&#x5B50;&#x7A0B;&#x5E8F;&#x7EC4;&#x6210;&#xFF0C;&#x800C;&#x6BCF;&#x4E00;&#x4E2A;&#x5B50;&#x7A0B;&#x5E8F;&#x5305;&#x90FD;&#x6709;&#x81EA;&#x5DF1;&#x72EC;&#x7ACB;&#x7684;<code>Makefile</code>&#xFF0C;&#x8FD9;&#x65F6;&#x5019;&#x5C31;&#x9700;&#x8981;&#x4E00;&#x4E2A;<code>&#x603B;&#x63A7;Makefile</code>&#x6765;&#x4E00;&#x6B21;&#x6027;&#x5B8C;&#x6210;&#x6240;&#x6709;&#x7684;&#x7F16;&#x8BD1;&#x5DE5;&#x4F5C;&#x3002;&#x4EE5;&#x4E0B;&#x7ED9;&#x51FA;&#x4E86;&#x4E00;&#x4E2A;&#x4F8B;&#x5B50;&#xFF0C;&#x4EE5;&#x8BF4;&#x660E;&#x5982;&#x4F55;&#x6784;&#x5EFA;<code>&#x603B;&#x63A7;Makefile</code>&#x3002;<br><a id="more"></a></p>
<h2 id="&#x6587;&#x4EF6;&#x7ED3;&#x6784;"><a href="#&#x6587;&#x4EF6;&#x7ED3;&#x6784;" class="headerlink" title="&#x6587;&#x4EF6;&#x7ED3;&#x6784;"></a>&#x6587;&#x4EF6;&#x7ED3;&#x6784;</h2><p>&#x9879;&#x76EE;<a href="/exam/PRJ.tgz">PRJ</a>&#x5305;&#x542B;&#x4E86;&#x4E09;&#x4E2A;&#x5B50;&#x7A0B;&#x5E8F;&#x5305;&#x3002;&#x6BCF;&#x4E2A;&#x5B50;&#x7A0B;&#x5E8F;&#x5305;&#x90FD;&#x62E5;&#x6709;&#x81EA;&#x5DF1;&#x7684;<code>Makefile</code>&#xFF0C;&#x4ECE;&#x800C;&#x53EF;&#x4EE5;&#x5728;&#x5404;&#x76EE;&#x5F55;&#x4E0B;&#x4F7F;&#x7528;<code>Make</code>&#x5B8C;&#x6210;&#x7F16;&#x8BD1;&#x3002;&#x4F46;&#x662F;&#x8FD9;&#x6837;&#x5F88;&#x9EBB;&#x70E6;&#x3002;&#x901A;&#x8FC7;&#x6784;&#x5EFA;&#x603B;&#x63A7;<code>Makefile</code>(<code>PRJ/Makefile</code>)&#xFF0C;&#x53EF;&#x4EE5;&#x4E00;&#x6B21;&#x6027;&#x7F16;&#x8BD1;<code>prj_sub1</code>,<code>prj_sub2</code>,<code>prj_sub3</code>&#x4E09;&#x4E2A;&#x5B50;&#x7A0B;&#x5E8F;&#x5305;&#x3002;<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">PRJ/</span><br><span class="line">&#x251C;&#x2500;&#x2500; prj_sub1/</span><br><span class="line">&#x2502;&#xA0;  &#x251C;&#x2500;&#x2500; a.c</span><br><span class="line">&#x2502;&#xA0;  &#x251C;&#x2500;&#x2500; b.c</span><br><span class="line">&#x2502;&#xA0;  &#x251C;&#x2500;&#x2500; c.c</span><br><span class="line">&#x2502;&#xA0;  &#x2514;&#x2500;&#x2500; Makefile</span><br><span class="line">|</span><br><span class="line">&#x251C;&#x2500;&#x2500; prj_sub2/</span><br><span class="line">&#x2502;&#xA0;  &#x251C;&#x2500;&#x2500; d.c</span><br><span class="line">&#x2502;&#xA0;  &#x251C;&#x2500;&#x2500; e.c</span><br><span class="line">&#x2502;&#xA0;  &#x2514;&#x2500;&#x2500; Makefile</span><br><span class="line">&#x251C;&#x2500;&#x2500; prj_sub3/</span><br><span class="line">&#x2502;&#xA0;  &#x251C;&#x2500;&#x2500; f.c</span><br><span class="line">&#x2502;&#xA0;  &#x251C;&#x2500;&#x2500; g.c</span><br><span class="line">&#x2502;&#xA0;  &#x2514;&#x2500;&#x2500; Makefile</span><br><span class="line">&#x251C;&#x2500;&#x2500; ...</span><br><span class="line">&#x2514;&#x2500;&#x2500; Makefile</span><br></pre></td></tr></table></figure></p>
<h2 id="&#x5B50;&#x7A0B;&#x5E8F;&#x5305;makfile"><a href="#&#x5B50;&#x7A0B;&#x5E8F;&#x5305;Makfile" class="headerlink" title="&#x5B50;&#x7A0B;&#x5E8F;&#x5305;Makfile"></a>&#x5B50;&#x7A0B;&#x5E8F;&#x5305;Makfile</h2><p>&#x5B50;&#x7A0B;&#x5E8F;&#x5305;&#x4E2D;&#x7684;<code>Makefile</code>&#x5305;&#x542B;&#x4E86;<code>&#x7F16;&#x8BD1;</code>,<code>install</code>,<code>clean</code>&#x64CD;&#x4F5C;&#x3002;&#x4EE5;&#x4E0B;&#x4F8B;&#x5B50;&#x4E2D;&#xFF0C;&#x6709;&#x5173;&#x51FD;&#x6570;<code>foreach</code>,&#x81EA;&#x52A8;&#x5316;&#x53D8;&#x91CF;<code>$@ $&lt;</code>,&#x4EE5;&#x53CA;<code>&#x9759;&#x6001;&#x6A21;&#x5F0F;</code>&#x7684;&#x5185;&#x5BB9;&#x53EF;&#x4EE5;&#x53C2;&#x89C1;<a href="X">X</a>&#x3002;<br>&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#x53D8;&#x91CF;<code>BIN</code>&#x5E76;&#x6CA1;&#x6709;&#x5728;<code>Makefile</code>&#x4E2D;&#x58F0;&#x660E;&#x8D4B;&#x503C;&#xFF0C;&#x800C;&#x662F;&#x901A;&#x8FC7;<code>&#x603B;&#x63A7;Makefile</code>&#x4E2D;&#x7684;<code>export</code>&#x6765;&#x4F20;&#x9012;&#x3002;<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Makefile for prj_sub1/</span></span><br><span class="line">CC = gcc</span><br><span class="line">EXEC = a b c</span><br><span class="line">OBJ  = $(foreach exe, <span class="variable">${EXEC}</span>, <span class="variable">${exe}</span>.o)</span><br><span class="line"></span><br><span class="line">all: <span class="variable">${OBJ}</span> <span class="variable">${EXEC}</span></span><br><span class="line"></span><br><span class="line"><span class="variable">${EXEC}</span>:%:%.o</span><br><span class="line">	<span class="variable">${CC}</span> -o <span class="variable">$@</span> $&lt;</span><br><span class="line"></span><br><span class="line"><span class="variable">${OBJ}</span>:%.o:%.c</span><br><span class="line">	<span class="variable">${CC}</span> -c -o <span class="variable">$@</span> $&lt;</span><br><span class="line"></span><br><span class="line">install:</span><br><span class="line">	cp <span class="variable">${EXEC}</span> <span class="variable">${BIN}</span></span><br><span class="line"></span><br><span class="line">clean:</span><br><span class="line">	rm <span class="variable">${EXEC}</span> <span class="variable">${OBJ}</span></span><br></pre></td></tr></table></figure></p>
<h2 id="&#x603B;&#x63A7;makefile"><a href="#&#x603B;&#x63A7;Makefile" class="headerlink" title="&#x603B;&#x63A7;Makefile"></a>&#x603B;&#x63A7;Makefile</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> BIN=../bin</span><br><span class="line"></span><br><span class="line">SUBS = prj_sub1 prj_sub2 prj_sub3</span><br><span class="line">SUBS_make    = $(foreach sub, <span class="variable">${SUBS}</span>, <span class="variable">${sub}</span>.make)</span><br><span class="line">SUBS_clean   = $(foreach sub, <span class="variable">${SUBS}</span>, <span class="variable">${sub}</span>.clean)</span><br><span class="line">SUBS_install = $(foreach sub, <span class="variable">${SUBS}</span>, <span class="variable">${sub}</span>.install)</span><br><span class="line"></span><br><span class="line">all: <span class="variable">${SUBS_make}</span></span><br><span class="line"></span><br><span class="line"><span class="variable">${SUBS_make}</span>:%.make:%</span><br><span class="line">	make -C $&lt;</span><br><span class="line"></span><br><span class="line">install: <span class="variable">${SUBS_install}</span></span><br><span class="line"></span><br><span class="line"><span class="variable">${SUBS_install}</span>:%.install:%</span><br><span class="line">	-make -C $&lt; install</span><br><span class="line"></span><br><span class="line">clean: <span class="variable">${SUBS_clean}</span></span><br><span class="line"></span><br><span class="line"><span class="variable">${SUBS_clean}</span>:%.clean:%</span><br><span class="line">	-make -C $&lt; clean</span><br></pre></td></tr></table></figure>
<p>&#x603B;&#x63A7;Makefile&#x4E00;&#x6B21;&#x6027;&#x7F16;&#x8BD1;&#x4E86;<code>prj_sub1</code>,<code>prj_sub2</code>,<code>prj_sub3</code>&#x4E09;&#x4E2A;&#x5B50;&#x7A0B;&#x5E8F;&#x5305;&#x3002;<br>&#x9996;&#x5148;&#x5BF9;&#x53D8;&#x91CF;<code>SUBS_make</code>&#x8D4B;&#x503C;&#xFF0C;&#x4E3A;<code>prj_sub1.make prj_sub2.make prj_sub3.make</code>&#x3002;&#x7C7B;&#x4F3C;&#x7684;&#xFF0C;&#x5B8C;&#x6210;&#x53D8;&#x91CF;<code>SUBS_clean</code>&#xFF0C;<code>SUBS_install</code>&#x7684;&#x8D4B;&#x503C;&#x3002;<br>&#x968F;&#x540E;&#xFF0C;&#x5728;&#x7F16;&#x8BD1;&#x4E2D;&#xFF0C;<code>${SUBS_make}:%.make:%</code>&#x58F0;&#x660E;&#x4ECE;&#x53D8;&#x91CF;<code>SUBS_make</code>&#x4E2D;&#x9010;&#x6B21;&#x63D0;&#x53D6;&#x4EE5;<code>.make</code>&#x7ED3;&#x5C3E;&#x7684;&#x5B57;&#x6BB5;&#x4F5C;&#x4E3A;&#x7F16;&#x8BD1;&#x76EE;&#x6807;&#xFF0C;&#x53BB;&#x6389;<br><code>.make</code>&#x4E4B;&#x540E;&#x7684;&#x5185;&#x5BB9;&#x4F5C;&#x4E3A;&#x7F16;&#x8BD1;&#x4F9D;&#x8D56;&#x9879;&#x76EE;&#xFF0C;&#x8FDB;&#x800C;&#x5229;&#x7528;<code>make -C $&lt;</code>&#x5B8C;&#x6210;&#x7F16;&#x8BD1;&#x3002;&#x7B2C;10,11&#x884C;&#x7B49;&#x4EF7;&#x4E8E;&#xFF1A;</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">prj_sub1.make: prj_sub1</span><br><span class="line">	make -C prj_sub1</span><br><span class="line"></span><br><span class="line">prj_sub2.make: prj_sub2</span><br><span class="line">	make -C prj_sub2</span><br><span class="line"></span><br><span class="line">prj_sub3.make: prj_sub3</span><br><span class="line">	make -C prj_sub3</span><br></pre></td></tr></table></figure>
<p><code>make -C prj_sub1</code>&#x7B49;&#x4EF7;&#x4E8E;<code>cd prj_sub1; make</code>&#x3002;&#x5176;&#x76F8;&#x5F53;&#x4E8E;&#x5148;&#x8FDB;&#x5165;&#x76EE;&#x5F55;<code>prj_sub1</code>&#xFF0C;&#x7136;&#x540E;&#x6267;&#x884C;<code>make</code>&#x547D;&#x4EE4;&#x3002;<br>&#x4E0E;&#x7F16;&#x8BD1;&#x7C7B;&#x4F3C;&#xFF0C;<code>install</code>&#x4E0E;<code>clean</code>&#x64CD;&#x4F5C;&#x4E00;&#x6B21;&#x6027;&#x5B8C;&#x6210;&#x6240;&#x6709;&#x5B50;&#x7A0B;&#x5E8F;&#x5305;&#x7684;&#x5B89;&#x88C5;&#x53CA;&#x6E05;&#x7406;&#x64CD;&#x4F5C;&#x3002;<br>&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x5229;&#x7528;<code>export BIN=../bin</code>&#xFF0C;&#x5C06;&#x53D8;&#x91CF;<code>BIN</code>&#x4F20;&#x9012;&#x81F3;&#x88AB;&#x8C03;&#x7528;<code>Makefile</code>&#x3002;</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[怎么在linux下压缩和解压文件]]></title>
      <url>http://sheng09.github.io/2016/06/09/unpack-in-linux/</url>
      <content type="html"><![CDATA[<p>&#x6B64;&#x6587;&#x662F;&#x5199;&#x7ED9;&#x5446;&#x840C;&#x5973;&#x670B;&#x53CB;&#x7684;&#x3002;<br><a id="more"></a></p>
<!-- toc -->
<ul>
<li><a href="#targz">tar.gz</a></li>
<li><a href="#tarbz2">tar.bz2</a></li>
<li><a href="#zip">zip</a></li>
<li><a href="#rar">rar</a></li>
<li><a href="#&#x540E;&#x7F00;&#x540D;&#x8BF4;&#x660E;">&#x540E;&#x7F00;&#x540D;&#x8BF4;&#x660E;</a></li>
</ul>
<!-- tocstop -->
<h2 id="targz"><a href="#tar-gz" class="headerlink" title="tar.gz"></a>tar.gz</h2><p>1.&#x4F7F;&#x7528;tar&#x6253;&#x5305;&#x5E76;&#x538B;&#x7F29;&#x6587;&#x4EF6;(&#x5939;)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tar -cvzf  test.tar.gz  <span class="built_in">test</span></span><br></pre></td></tr></table></figure></p>
<p>&#x53EF;&#x4EE5;&#x5C06;test&#x6253;&#x5305;&#x538B;&#x7F29;&#x5E76;&#x751F;&#x4EA7;test.tar.gz&#xFF0C;test&#x53EF;&#x4EE5;&#x662F;&#x6587;&#x4EF6;&#x5939;&#x4E5F;&#x53EF;&#x4EE5;&#x662F;&#x6587;&#x4EF6;&#x3002;<br>&#x5207;&#x8BB0;&#xFF0C;&#x88AB;&#x538B;&#x7F29;&#x6587;&#x4EF6;&#x4E0E;&#x538B;&#x7F29;&#x8F93;&#x51FA;&#x6587;&#x4EF6;&#x4E0D;&#x8981;&#x5199;&#x53CD;&#x4E86;&#xFF0C;&#x5426;&#x5219;&#x88AB;&#x538B;&#x7F29;&#x6587;&#x4EF6;&#x4F1A;&#x88AB;&#x8986;&#x76D6;&#x4ECE;&#x800C;&#x4E22;&#x5931;&#xFF01;</p>
<p>2.&#x89E3;&#x5305;&#x5E76;&#x89E3;&#x538B; .tar.gz<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tar -xvzf  test.tar.gz</span><br></pre></td></tr></table></figure></p>
<h2 id="tarbz2"><a href="#tar-bz2" class="headerlink" title="tar.bz2"></a>tar.bz2</h2><p>1.&#x4F7F;&#x7528;tar&#x6253;&#x5305;&#x5E76;&#x538B;&#x7F29;&#x6587;&#x4EF6;(&#x5939;)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tar -cjzf  test.tar.bz2  <span class="built_in">test</span></span><br></pre></td></tr></table></figure></p>
<p>&#x53EF;&#x4EE5;&#x5C06;test&#x6253;&#x5305;&#x538B;&#x7F29;&#x5E76;&#x751F;&#x4EA7;test.tar.bz&#xFF0C;test&#x53EF;&#x4EE5;&#x662F;&#x6587;&#x4EF6;&#x5939;&#x4E5F;&#x53EF;&#x4EE5;&#x662F;&#x6587;&#x4EF6;&#x3002;</p>
<p>2.&#x89E3;&#x5305;&#x5E76;&#x89E3;&#x538B; .tar.bz<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tar -xjzf  test.tar.bz2</span><br></pre></td></tr></table></figure></p>
<h2 id="zip"><a href="#zip" class="headerlink" title="zip"></a>zip</h2><p>1.&#x4F7F;&#x7528;zip&#x538B;&#x7F29;<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ zip  -r  test.zip   <span class="built_in">test</span></span><br></pre></td></tr></table></figure></p>
<p>&#x5C06;test&#x6253;&#x5305;&#x538B;&#x7F29;&#x5E76;&#x751F;&#x4EA7;test.zip&#xFF0C;test&#x53EF;&#x4EE5;&#x662F;&#x6587;&#x4EF6;&#x5939;&#x4E5F;&#x53EF;&#x4EE5;&#x662F;&#x6587;&#x4EF6;&#xFF1B;</p>
<p>2.&#x89E3;&#x538B;zip<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ unzip   test.zip</span><br></pre></td></tr></table></figure></p>
<h2 id="rar"><a href="#rar" class="headerlink" title="rar"></a>rar</h2><p>&#x6700;&#x597D;&#x4E0D;&#x8981;&#x7528;rar&#xFF0C;rar&#x538B;&#x7F29;&#x7B97;&#x6CD5;&#x4E0D;&#x662F;&#x5F00;&#x6E90;&#x7684;&#xFF0C;&#x6240;&#x4EE5;linux&#x4E2D;&#x9ED8;&#x8BA4;&#x53EF;&#x80FD;&#x6CA1;&#x6709;&#x5904;&#x7406;rar&#x7684;&#x5DE5;&#x5177;&#x3002;&#x5018;&#x82E5;&#x5F3A;&#x884C;&#x9700;&#x6C42;&#xFF0C;&#x53EF;&#x4EE5;&#x5148;&#x5B89;&#x88C5;rar<br>ubuntu&#x4E2D;&#x5B89;&#x88C5;&#x547D;&#x4EE4;&#x5982;&#x4E0B;&#xFF1A;<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install rar</span><br></pre></td></tr></table></figure></p>
<p>1.&#x4F7F;&#x7528;rar&#x538B;&#x7F29;&#x6587;&#x4EF6;&#x6216;&#x6587;&#x4EF6;&#x5939;<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rar  a  test.rar  <span class="built_in">test</span></span><br></pre></td></tr></table></figure></p>
<p>&#x53EF;&#x4EE5;&#x5C06;test&#x6253;&#x5305;&#x538B;&#x7F29;&#x5E76;&#x751F;&#x4EA7;test.rar&#xFF0C;test&#x53EF;&#x4EE5;&#x662F;&#x6587;&#x4EF6;&#x5939;&#x4E5F;&#x53EF;&#x4EE5;&#x662F;&#x6587;&#x4EF6;&#xFF1B;</p>
<p>2.&#x89E3;&#x538B;rar<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rar  x  test.rar</span><br></pre></td></tr></table></figure></p>
<h2 id="&#x540E;&#x7F00;&#x540D;&#x8BF4;&#x660E;"><a href="#&#x540E;&#x7F00;&#x540D;&#x8BF4;&#x660E;" class="headerlink" title="&#x540E;&#x7F00;&#x540D;&#x8BF4;&#x660E;"></a>&#x540E;&#x7F00;&#x540D;&#x8BF4;&#x660E;</h2><p>&#x4E00;&#x822C;&#x60C5;&#x51B5;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x540E;&#x7F00;&#x540D;&#x6765;&#x5224;&#x65AD;&#x9700;&#x8981;&#x7528;&#x4EC0;&#x4E48;&#x8F6F;&#x4EF6;&#x6765;&#x89E3;&#x538B;&#x3002;.tar.gz &#x6216;&#x8005;.tgz&#x7684;&#x540E;&#x7F00;&#x90FD;&#x662F;&#x7528;tar&#x64CD;&#x4F5C;&#x7684;&#x3002; &#x800C;.zip&#x540E;&#x7F00;&#x540D;&#x663E;&#x7136;&#x662F;zip&#x64CD;&#x4F5C;&#x7684;&#x3002; .rar&#x540E;&#x7F00;&#x540D;&#x663E;&#x7136;&#x662F;rar&#x64CD;&#x4F5C;&#x7684;<br>&#x81EA;&#x5DF1;&#x6253;&#x5305;&#x538B;&#x7F29;&#x6587;&#x4EF6;&#x65F6;&#x5019;&#xFF0C;&#x4E00;&#x5B9A;&#x8981;&#x5199;&#x540E;&#x7F00;&#x540D;&#xFF0C;&#x5176;&#x4ED6;&#x4EBA;&#x770B;&#x5230;&#x540E;&#x7F00;&#x540D;&#x5C31;&#x53EF;&#x4EE5;&#x77E5;&#x9053;&#x5E94;&#x8BE5;&#x7528;&#x90A3;&#x4E2A;&#x89E3;&#x538B;&#x5DE5;&#x5177;&#x3002;</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux终端美化]]></title>
      <url>http://sheng09.github.io/2016/06/08/fancy-terminal/</url>
      <content type="html"><![CDATA[<p>&#x4E0D;&#x77E5;&#x9053;&#x4F60;&#x662F;&#x4E0D;&#x662F;&#x53D7;&#x591F;&#x4E86;Linux&#x7EC8;&#x7AEF;&#x7684;&#x4E11;&#x964B;&#x3002;&#x9ED1;&#x8272;&#x886C;&#x5E95;&#x914D;&#x4E0A;&#x523A;&#x773C;&#x7684;&#x989C;&#x8272;&#x548C;&#x5947;&#x602A;&#x7684;&#x5B57;&#x4F53;&#xFF0C;&#x662F;&#x9ED8;&#x8BA4;Linux&#x7684;&#x7EC8;&#x7AEF;&#x5916;&#x89C2;&#x3002;&#x5982;&#x679C;&#x4F60;&#x957F;&#x671F;&#x9700;&#x8981;&#x5728;Linux&#x4E0B;&#x4F5C;&#x4E1A;&#xFF0C;&#x90A3;&#x4E48;&#x4E00;&#x4E2A;&#x517B;&#x773C;&#x7684;&#x7EC8;&#x7AEF;&#x5E26;&#x6765;&#x7684;&#x5C06;&#x662F;&#x8EAB;&#x5FC3;&#x6109;&#x60A6;&#xFF0C;&#x6548;&#x7387;&#x7FFB;&#x500D;&#xFF0C;&#x6BD5;&#x7ADF;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x51E1;&#x4E8B;&#x770B;&#x8138;&#x7684;&#x65F6;&#x4EE3;&#xFF0C;&#x989C;&#x5373;&#x6B63;&#x4E49;&#x3002;</p>
<a id="more"></a>
<!-- toc -->
<ul>
<li><a href="#&#x914D;&#x8272;&#x65B9;&#x6848;">&#x914D;&#x8272;&#x65B9;&#x6848;</a></li>
<li><a href="#&#x63D0;&#x793A;&#x7B26;">&#x63D0;&#x793A;&#x7B26;</a></li>
<li><a href="#&#x7EC8;&#x7AEF;&#x80CC;&#x666F;">&#x7EC8;&#x7AEF;&#x80CC;&#x666F;</a></li>
<li><a href="#&#x53C2;&#x8003;">&#x53C2;&#x8003;</a></li>
</ul>
<!-- tocstop -->
<h2 id="&#x914D;&#x8272;&#x65B9;&#x6848;"><a href="#&#x914D;&#x8272;&#x65B9;&#x6848;" class="headerlink" title="&#x914D;&#x8272;&#x65B9;&#x6848;"></a>&#x914D;&#x8272;&#x65B9;&#x6848;</h2><p>&#x9ED8;&#x8BA4;&#x914D;&#x8272;&#x5927;&#x591A;&#x6307;&#x5411;16&#x4F4D;&#x8272;&#x5F69;&#x65B9;&#x6848;&#xFF0C;&#x5728;&#x5E26;&#x7ED9;&#x65B0;&#x4EBA;&#x4E00;&#x79CD;geek&#x7684;&#x611F;&#x89C9;&#x4E4B;&#x540E;&#xFF0C;&#x65F6;&#x523B;&#x51B2;&#x51FB;&#x7740;&#x7528;&#x6237;&#x89C6;&#x89C9;&#x795E;&#x7ECF;&#x3002;&#x90A3;&#x4E48;&#x6765;&#x8BD5;&#x8BD5;<a href="https://github.com/seebi/dircolors-solarized" target="_blank" rel="external"><code>dircolors-solarized</code></a>&#x5427;&#x3002;<br><img src="/2016/06/08/fancy-terminal/img/screen-dircolors-in-iTerm2-solarized_dark.png" alt=""></p>
<p>&#x5728;<a href="https://github.com/seebi/dircolors-solarized" target="_blank" rel="external"><code>dircolors-solarized</code></a>&#x9879;&#x76EE;&#x4E3B;&#x9875;&#x4E0B;&#x8F7D;&#x914D;&#x8272;&#x65B9;&#x6848;&#x3002;&#x89E3;&#x538B;&#x540E;&#x53EF;&#x4EE5;&#x53D1;&#x73B0;&#x6587;&#x4EF6;&#x5939;&#x5185;&#x5305;&#x542B;&#x4E86;&#x4E0D;&#x540C;&#x7684;&#x914D;&#x8272;&#x8BBE;&#x7F6E;&#x6587;&#x4EF6;&#xFF0C;&#x4EE5;&#x5176;&#x4E2D;&#x7684;<code>dircolors.ansi-dark</code>&#x4E3A;&#x4F8B;&#xFF0C;&#x5728;<code>~/.basrc</code>(&#x6216;&#x8005;<code>~/.profile</code>)&#x4E2D;&#x6DFB;&#x52A0;&#x4EE5;&#x4E0B;&#x5185;&#x5BB9;&#xFF1A;</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">eval</span> `dircolors /path/to/your/dircolors.ansi-dark`</span><br></pre></td></tr></table></figure>
<p>&#x5728;&#x7EC8;&#x7AEF;&#x4E2D;<code>source</code>&#x4E00;&#x4E0B;&#xFF0C;&#x6216;&#x8005;&#x5173;&#x95ED;&#x91CD;&#x542F;&#x4EE5;&#x4E0B;&#x7EC8;&#x7AEF;&#xFF0C;&#x914D;&#x8272;&#x662F;&#x4E0D;&#x662F;&#x53D8;&#x4E86;&#xFF1F;</p>
<h2 id="&#x63D0;&#x793A;&#x7B26;"><a href="#&#x63D0;&#x793A;&#x7B26;" class="headerlink" title="&#x63D0;&#x793A;&#x7B26;"></a>&#x63D0;&#x793A;&#x7B26;</h2><p>&#x5728;&#x7EC8;&#x7AEF;&#x91CC;&#xFF0C;&#x9ED8;&#x8BA4;&#x7684;&#x63D0;&#x793A;&#x7B26;&#x5305;&#x542B;&#x4E86;&#x5F53;&#x524D;&#x8DEF;&#x5F84;&#x53CA;&#x7528;&#x6237;&#x767B;&#x9646;&#x4FE1;&#x606F;&#xFF0C;&#x81C3;&#x80BF;&#x800C;&#x53C8;&#x96BE;&#x770B;&#x3002;&#x8BD5;&#x8BD5;&#x518D;<code>~/.basrc</code>(&#x6216;&#x8005;<code>~/.profile</code>)&#x4E2D;&#x6DFB;&#x52A0;&#x4EE5;&#x4E0B;&#x5185;&#x5BB9;&#xFF1A;<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PS1=<span class="string">&apos;`a=$?;if [ $a -ne 0 ]; then a=&quot;  &quot;$a; echo -ne &quot;\[\e[s\e[1A\e[$((COLUMNS-2))G\e[31m\e[0;41m${a:(-3)}\e[u\]\[\e[0m\e[7m\e[2m\]&quot;; fi`\[\e[1;35m\]Fa\[\e[1;33m\]nc\[\e[1;32m\]y \[\e[0m\e[1;36m\]\u \[\e[0;34m\]\$ \[\e[0m\]&apos;</span></span><br></pre></td></tr></table></figure></p>
<p>&#x5728;&#x7EC8;&#x7AEF;&#x4E2D;<code>source</code>&#x4E00;&#x4E0B;&#xFF0C;&#x6216;&#x8005;&#x5173;&#x95ED;&#x91CD;&#x542F;&#x4EE5;&#x4E0B;&#x7EC8;&#x7AEF;&#xFF0C;&#x770B;&#x4E00;&#x770B;&#x65B0;&#x7684;&#x63D0;&#x793A;&#x7B26;&#x3002;<br>&#x4EE5;<code>\[\e[1;35m\]Fa</code>&#x4E3A;&#x4F8B;&#xFF0C;&#x5B57;&#x6BB5;&#xFF0C;&#x5B57;&#x6BB5;<code>1;35</code>&#x5206;&#x522B;&#x58F0;&#x660E;&#x4E86;<code>Fa</code>&#x7684;&#x989C;&#x8272;&#x4E0E;&#x5B57;&#x4F53;&#x65B9;&#x6848;&#x3002;<br>&#x9664;&#x4E86;&#x4F7F;&#x7528;&#x7C7B;&#x4F3C;&#x4E8E;<code>Fa</code>&#x7684;&#x666E;&#x901A;&#x6587;&#x672C;&#x5185;&#x5BB9;&#xFF0C;&#x8FD8;&#x6709;&#x4EE5;&#x4E0B;&#x7279;&#x6B8A;&#x7B26;&#x53F7;&#xFF1A;<br>&#x3000;&#x3000;<code>\d</code> :&#x4EE3;&#x8868;&#x65E5;&#x671F;&#xFF0C;&#x683C;&#x5F0F;&#x4E3A;weekday month date&#xFF0C;&#x4F8B;&#x5982;&#xFF1A;&#x201D;Mon Aug 1&#x201D;<br>&#x3000;&#x3000;<code>\H</code> :&#x5B8C;&#x6574;&#x7684;&#x4E3B;&#x673A;&#x540D;&#x79F0;&#x3002;&#x4F8B;&#x5982;&#xFF1A;&#x6211;&#x7684;&#x673A;&#x5668;&#x540D;&#x79F0;&#x4E3A;&#xFF1A;fc4.linux&#xFF0C;&#x5219;&#x8FD9;&#x4E2A;&#x540D;&#x79F0;&#x5C31;&#x662F;fc4.linux<br>&#x3000;&#x3000;<code>\h</code> :&#x4EC5;&#x53D6;&#x4E3B;&#x673A;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x540D;&#x5B57;&#xFF0C;&#x5982;&#x4E0A;&#x4F8B;&#xFF0C;&#x5219;&#x4E3A;fc4&#xFF0C;.linux&#x5219;&#x88AB;&#x7701;&#x7565;<br>&#x3000;&#x3000;<code>\t</code> :&#x663E;&#x793A;&#x65F6;&#x95F4;&#x4E3A;24&#x5C0F;&#x65F6;&#x683C;&#x5F0F;&#xFF0C;&#x5982;&#xFF1A;HH&#xFF1A;MM&#xFF1A;SS<br>&#x3000;&#x3000;<code>\T</code> :&#x663E;&#x793A;&#x65F6;&#x95F4;&#x4E3A;12&#x5C0F;&#x65F6;&#x683C;&#x5F0F;<br>&#x3000;&#x3000;<code>\A</code> :&#x663E;&#x793A;&#x65F6;&#x95F4;&#x4E3A;24&#x5C0F;&#x65F6;&#x683C;&#x5F0F;&#xFF1A;HH&#xFF1A;MM<br>&#x3000;&#x3000;<code>\u</code> :&#x5F53;&#x524D;&#x7528;&#x6237;&#x7684;&#x8D26;&#x53F7;&#x540D;&#x79F0;<br>&#x3000;&#x3000;<code>\v</code> :BASH&#x7684;&#x7248;&#x672C;&#x4FE1;&#x606F;<br>&#x3000;&#x3000;<code>\w</code> :&#x5B8C;&#x6574;&#x7684;&#x5DE5;&#x4F5C;&#x76EE;&#x5F55;&#x540D;&#x79F0;&#x3002;&#x5BB6;&#x76EE;&#x5F55;&#x4F1A;&#x4EE5; ~&#x4EE3;&#x66FF;<br>&#x3000;&#x3000;<code>\W</code> :&#x5229;&#x7528;basename&#x53D6;&#x5F97;&#x5DE5;&#x4F5C;&#x76EE;&#x5F55;&#x540D;&#x79F0;&#xFF0C;&#x6240;&#x4EE5;&#x53EA;&#x4F1A;&#x5217;&#x51FA;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x76EE;&#x5F55;<br>&#x3000;&#x3000;<code>\#</code> :&#x4E0B;&#x8FBE;&#x7684;&#x7B2C;&#x51E0;&#x4E2A;&#x547D;&#x4EE4;<br>&#x3000;&#x3000;<code>\$</code> :&#x63D0;&#x793A;&#x5B57;&#x7B26;&#xFF0C;&#x5982;&#x679C;&#x662F;root&#x65F6;&#xFF0C;&#x63D0;&#x793A;&#x7B26;&#x4E3A;&#xFF1A;# &#xFF0C;&#x666E;&#x901A;&#x7528;&#x6237;&#x5219;&#x4E3A;&#xFF1A;$</p>
<h2 id="&#x7EC8;&#x7AEF;&#x80CC;&#x666F;"><a href="#&#x7EC8;&#x7AEF;&#x80CC;&#x666F;" class="headerlink" title="&#x7EC8;&#x7AEF;&#x80CC;&#x666F;"></a>&#x7EC8;&#x7AEF;&#x80CC;&#x666F;</h2><p>&#x7EC8;&#x7AEF;&#x80CC;&#x666F;&#x4E00;&#x822C;&#x9ED8;&#x8BA4;&#x7EAF;&#x8272;&#xFF0C;&#x4E14;&#x5927;&#x591A;&#x4E3A;&#x9ED1;&#x8272;&#x548C;&#x767D;&#x8272;&#x3002;&#x53EF;&#x4EE5;&#x518D;&#x7EC8;&#x7AEF;&#x7684;&#x201C;&#x8BBE;&#x7F6E;&#x201D;&#x4E2D;&#x5F00;&#x542F;&#x80CC;&#x666F;&#x900F;&#x660E;&#xFF0C;&#x5E76;&#x9009;&#x62E9;&#x5408;&#x9002;&#x7684;&#x900F;&#x660E;&#x5EA6;&#xFF0C;&#x518D;&#x6311;&#x9009;&#x4E00;&#x5F20;&#x7B80;&#x7EA6;&#x7684;&#x6DF1;&#x8272;&#x56FE;&#x7247;&#x505A;&#x684C;&#x9762;&#x80CC;&#x666F;&#x3002;</p>
<p>&#x901A;&#x8FC7;&#x4EE5;&#x4E0A;&#x7684;&#x8BBE;&#x7F6E;&#xFF0C;&#x662F;&#x4E0D;&#x662F;&#x53D1;&#x73B0;&#x7EC8;&#x7AEF;&#x597D;&#x770B;&#x4E86;&#x5F88;&#x591A;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x6709;&#x5F97;&#x610F;&#x7684;&#x7F8E;&#x5316;&#x65B9;&#x6848;&#x914D;&#x7F6E;&#xFF0C;&#x8BF7;&#x81F4;&#x4FE1;<code>wangsheng.cas@gmail.com</code>&#x8BA8;&#x8BBA;&#x4EA4;&#x6D41;&#x3002;</p>
<h2 id="&#x53C2;&#x8003;"><a href="#&#x53C2;&#x8003;" class="headerlink" title="&#x53C2;&#x8003;"></a>&#x53C2;&#x8003;</h2><p>linux PS1 &#x63D0;&#x793A;&#x7B26;&#x5B9A;&#x4E49;<br><a href="http://www.cnblogs.com/starspace/archive/2009/02/21/1395382.html" target="_blank" rel="external">http://www.cnblogs.com/starspace/archive/2009/02/21/1395382.html</a><br>dircolors-solarized&#x9879;&#x76EE;&#x4E3B;&#x9875;<br><a href="https://github.com/seebi/dircolors-solarized" target="_blank" rel="external">https://github.com/seebi/dircolors-solarized</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[使用github和hexo搭建静态博客]]></title>
      <url>http://sheng09.github.io/2016/06/08/install-and-config/</url>
      <content type="html"><![CDATA[<p>Hello World<br><a id="more"></a></p>
<h2 id="github&#x6CE8;&#x518C;&#x53CA;&#x5EFA;&#x7ACB;&#x4ED3;&#x50A8;"><a href="#github&#x6CE8;&#x518C;&#x53CA;&#x5EFA;&#x7ACB;&#x4ED3;&#x50A8;" class="headerlink" title="github&#x6CE8;&#x518C;&#x53CA;&#x5EFA;&#x7ACB;&#x4ED3;&#x50A8;"></a>github&#x6CE8;&#x518C;&#x53CA;&#x5EFA;&#x7ACB;&#x4ED3;&#x50A8;</h2><ol>
<li>&#x5728;<a href="https://github.com" target="_blank" rel="external">github&#x4E3B;&#x9875;</a>&#x5B8C;&#x6210;&#x6CE8;&#x518C;;</li>
<li>&#x9A8C;&#x8BC1;&#x90AE;&#x7BB1;;</li>
<li>&#x521B;&#x5EFA;&#x4ED3;&#x50A8;&#xFF0C;&#x5176;&#x4E2D;repository name&#x5FC5;&#x987B;&#x4E3A;username.github.io;</li>
</ol>
<h2 id="git&#x7684;&#x5B89;&#x88C5;&#x53CA;&#x6DFB;&#x52A0;ssh-key"><a href="#git&#x7684;&#x5B89;&#x88C5;&#x53CA;&#x6DFB;&#x52A0;ssh-key" class="headerlink" title="git&#x7684;&#x5B89;&#x88C5;&#x53CA;&#x6DFB;&#x52A0;ssh-key"></a>git&#x7684;&#x5B89;&#x88C5;&#x53CA;&#x6DFB;&#x52A0;ssh-key</h2><p>&#x5728;ubuntu&#x4E0B;&#xFF0C;&#x4F7F;&#x7528;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;&#x5B89;&#x88C5;git:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install git</span><br><span class="line">$ git config --global user.email <span class="string">&quot;Your emaill address&quot;</span></span><br><span class="line">$ git config --global user.name  <span class="string">&quot;Your username on github.com&quot;</span></span><br></pre></td></tr></table></figure></p>
<p>&#x4F7F;&#x7528;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;&#x751F;&#x4EA7;ssh-key<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">&quot;Your email address&quot;</span>&#x3000;<span class="comment">#&#x9700;&#x8981;&#x6307;&#x5B9A;key&#x6587;&#x4EF6;&#x540D;&#xFF0C;&#x4F7F;&#x7528;&#x9ED8;&#x8BA4;&#x5373;&#x53EF;</span></span><br></pre></td></tr></table></figure></p>
<p>&#x9ED8;&#x8BA4;&#x751F;&#x6210;&#x7684;ssh-key&#x6587;&#x4EF6;&#x4F4D;&#x4E8E;<code>~/.ssh/</code>&#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x5176;&#x4E2D;&#x7684;<code>id_rsa</code>&#x548C;<code>id_rsa.pub</code>&#x4E3A;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x7684;&#x6587;&#x4EF6;&#x3002;&#x5C06;<code>id_rsa.pub</code>&#x6587;&#x4EF6;&#x7684;&#x6587;&#x672C;&#x5185;&#x5BB9;&#x6DFB;&#x52A0;&#x5230;github&#x7684;ssh-key&#x4E2D;&#x3002;&#x4F7F;&#x7528;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;&#x6D4B;&#x8BD5;&#x662F;&#x5426;&#x6210;&#x529F;:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure></p>
<h2 id="hexo&#x7684;&#x5B89;&#x88C5;"><a href="#hexo&#x7684;&#x5B89;&#x88C5;" class="headerlink" title="hexo&#x7684;&#x5B89;&#x88C5;"></a><a href="https://hexo.io/" target="_blank" rel="external">hexo</a>&#x7684;&#x5B89;&#x88C5;</h2><p>1.&#x5B89;&#x88C5;nvm<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</span><br></pre></td></tr></table></figure></p>
<p>2.&#x5B89;&#x88C5;node.js<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ nvm install v3.3</span><br><span class="line">$ nvm ls <span class="comment">#List installed versions</span></span><br><span class="line">$ nvm use 3.3</span><br><span class="line">$ nvm current <span class="comment">#Display currently activated version</span></span><br></pre></td></tr></table></figure></p>
<p>3.&#x5B89;&#x88C5;hexo<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo</span><br></pre></td></tr></table></figure></p>
<h2 id="&#x672C;&#x5730;hexo&#x521D;&#x59CB;&#x5316;"><a href="#&#x672C;&#x5730;hexo&#x521D;&#x59CB;&#x5316;" class="headerlink" title="&#x672C;&#x5730;hexo&#x521D;&#x59CB;&#x5316;"></a>&#x672C;&#x5730;hexo&#x521D;&#x59CB;&#x5316;</h2><p>1.&#x521D;&#x59CB;&#x5316;hexo&#x76EE;&#x5F55;<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init ~/myblog</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure></p>
<p>2.&#x751F;&#x6210;&#x9759;&#x6001;&#x6587;&#x4EF6;<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure></p>
<p>3.&#x672C;&#x5730;&#x670D;&#x52A1;&#x5668;&#x9884;&#x89C8;<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s <span class="comment">#&#x6253;&#x5F00;&#x6D4F;&#x89C8;&#x5668;&#x901A;&#x8FC7;http://0.0.0.0:4000/&#x8BBF;&#x95EE;&#x67E5;&#x770B;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="&#x53D1;&#x5E03;"><a href="#&#x53D1;&#x5E03;" class="headerlink" title="&#x53D1;&#x5E03;"></a>&#x53D1;&#x5E03;</h2><p>1.&#x5B89;&#x88C5;hexo-deployer-git<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br></pre></td></tr></table></figure></p>
<!-- $ npm install hexo-deployer-git --save --> <!-- old version --> 
<p>2.&#x5728;&#x535A;&#x5BA2;&#x76EE;&#x5F55;&#x4E0B;&#x627E;&#x5230;<code>_config.yml</code>&#x6587;&#x4EF6;&#xFF0C;&#x6DFB;&#x52A0;&#x6216;&#x4FEE;&#x6539;:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy: </span><br><span class="line">	<span class="built_in">type</span>: git</span><br><span class="line">	repo: git@github.com:USERNAME/USERNAME.github.io.git</span><br><span class="line">	branch: master</span><br><span class="line">	message: <span class="string">&quot;g&quot;</span></span><br></pre></td></tr></table></figure></p>
<p>&#x6CE8;&#x610F;&#xFF0C;&#x6240;&#x6709;&#x7684;&#x5192;&#x53F7;&#x540E;&#x9762;&#x5FC5;&#x987B;&#x6709;&#x7A7A;&#x683C;&#xFF01;&#xFF01;&#xFF01;<br>3.&#x53D1;&#x5E03;<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure></p>
<h2 id="&#x9884;&#x89C8;"><a href="#&#x9884;&#x89C8;" class="headerlink" title="&#x9884;&#x89C8;"></a>&#x9884;&#x89C8;</h2><p>&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x4E2D;&#x6253;&#x5F00;<code>http://USERNAME.github.io.git</code>&#x9875;&#x9762;&#x8BBF;&#x95EE;&#x9759;&#x6001;&#x535A;&#x5BA2;&#x3002;</p>
<h2 id="&#x6DFB;&#x52A0;&#x535A;&#x5BA2;&#x6587;&#x7AE0;&#x5E76;&#x53D1;&#x5E03;"><a href="#&#x6DFB;&#x52A0;&#x535A;&#x5BA2;&#x6587;&#x7AE0;&#x5E76;&#x53D1;&#x5E03;" class="headerlink" title="&#x6DFB;&#x52A0;&#x535A;&#x5BA2;&#x6587;&#x7AE0;&#x5E76;&#x53D1;&#x5E03;"></a>&#x6DFB;&#x52A0;&#x535A;&#x5BA2;&#x6587;&#x7AE0;&#x5E76;&#x53D1;&#x5E03;</h2><p>&#x4F7F;&#x7528;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;&#x6DFB;&#x52A0;&#x65B0;&#x7684;&#x6587;&#x7AE0;&#x81F3;&#x76EE;&#x5F55;<code>\source\_posts\</code>:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;article1&quot;</span></span><br></pre></td></tr></table></figure></p>
<p>&#x968F;&#x540E;&#x53EF;&#x4EE5;&#x5728;&#x76EE;&#x5F55;<code>\source\_posts\</code>&#x4E2D;&#x627E;&#x5230;markdown&#x683C;&#x5F0F;&#x6587;&#x4EF6;<code>article1.md</code>&#x3002;&#x53EF;&#x4EE5;&#x4E66;&#x5199;&#x5E76;&#x4FEE;&#x6539;&#x5176;&#x5185;&#x5BB9;&#xFF0C;&#x7136;&#x540E;&#x4F7F;&#x7528;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;&#x53D1;&#x5E03;:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure></p>
<h2 id="&#x4F7F;&#x7528;&#x6570;&#x5B66;&#x516C;&#x5F0F;"><a href="#&#x4F7F;&#x7528;&#x6570;&#x5B66;&#x516C;&#x5F0F;" class="headerlink" title="&#x4F7F;&#x7528;&#x6570;&#x5B66;&#x516C;&#x5F0F;"></a>&#x4F7F;&#x7528;&#x6570;&#x5B66;&#x516C;&#x5F0F;</h2><p>&#x5B89;&#x88C5;<a href="https://github.com/akfish/hexo-math" target="_blank" rel="external">hexo-math</a>&#xFF0C;&#x968F;&#x540E;&#x5373;&#x53EF;&#x5728;&#x6587;&#x7AE0;&#x4E2D;&#x63D2;&#x5165;&#x516C;&#x5F0F;&#x3002;<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-math --save</span><br></pre></td></tr></table></figure></p>
<p>&#x53EF;&#x4EE5;&#x5728;<a href="https://github.com/akfish/hexo-math" target="_blank" rel="external">hexo-math</a>&#x9879;&#x76EE;&#x4E3B;&#x9875;&#x627E;&#x5230;&#x5982;&#x4F55;&#x63D2;&#x5165;&#x516C;&#x5F0F;&#x3002;<br>&#x914D;&#x7F6E;&#x8FC7;&#x7A0B;&#x4E2D;&#x9047;&#x5230;&#x7684;&#x95EE;&#x9898;&#xFF1A;<a href="https://github.com/akfish/hexo-math/issues/26" target="_blank" rel="external">How to config it to make it work? #26</a><br>&#x6CE8;&#x610F;&#xFF0C;<a href="https://github.com/akfish/hexo-math" target="_blank" rel="external">hexo-math</a>&#x4FDD;&#x6301;&#x66F4;&#x65B0;&#xFF0C;&#x4E14;&#x4E0D;&#x540C;&#x7248;&#x672C;&#x7684;&#x5B89;&#x88C5;&#x4E0E;&#x914D;&#x7F6E;&#x5B58;&#x5728;&#x533A;&#x522B;&#xFF0C;&#x5728;Google&#x4E0A;&#x641C;&#x7D22;&#x5230;&#x7684;&#x7ED3;&#x679C;&#x53EF;&#x80FD;&#x5DF2;&#x7ECF;&#x5F03;&#x7528;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x4EE5;&#x9879;&#x76EE;&#x4E3B;&#x9875;&#x8BF4;&#x660E;&#x4E3A;&#x51C6;&#x3002;</p>
<h2 id="&#x53C2;&#x8003;"><a href="#&#x53C2;&#x8003;" class="headerlink" title="&#x53C2;&#x8003;"></a>&#x53C2;&#x8003;</h2><p>github&#x6CE8;&#x518C;&#x4E0E;&#x5165;&#x95E8;<br><a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="external"><code>http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000</code></a><br>&#x642D;&#x5EFA;&#x9759;&#x6001;&#x535A;&#x5BA2;<br><a href="http://blog.wpeace.cn/2015/07/22/%E4%BD%BF%E7%94%A8github%E5%92%8Chexo%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/" target="_blank" rel="external"><code>http://blog.wpeace.cn/2015/07/22/%E4%BD%BF%E7%94%A8github%E5%92%8Chexo%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/</code></a><br>ERROR Deployer not found: git<br><a href="http://github.com/hexojs/hexo/issues/1154" target="_blank" rel="external"><code>http://github.com/hexojs/hexo/issues/1154</code></a></p>
]]></content>
    </entry>
    
  
  
</search>
